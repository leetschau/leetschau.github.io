<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Anaconda | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/anaconda/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T14:51:43+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Build Data Analysis Toolkit With Anaconda]]></title>
    <link href="http://leetschau.github.io/blog/2016/06/15/190457/"/>
    <updated>2016-06-15T19:04:57+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/06/15/190457</id>
    <content type="html"><![CDATA[<h1>Setup</h1>

<p>Download Anaconda installer (Anaconda3-4.0.0-Linux-x86_64.sh) and install it
to folder ~/apps/anaconda3 (to uninstall, just remove this folder).</p>

<p>Add the following line into ~/.zshenv:</p>

<pre><code>ANACONDA_HOME=$HOME/apps/anaconda3
</code></pre>

<p>Enable Anaconda working environment with
<code>source ~/apps/anaconda3/bin/activate $ANACONDA_HOME</code>.
Leave this environment with <code>source deactivate</code>.</p>

<p>List all environments with <code>conda env list</code>.
If there is a &lsquo;root&rsquo; in the output, you can activate Anaconda as a common
conda env with <code>source activate root</code>.</p>

<p>Create a new Python 2.7 virtual environment with
<code>conda create -n py27 python=2.7</code>, make it the current environment with
<code>source activate py27</code>. You can use this command to switching between any
conda-managed environment without worrying about nested-virtualenv.</p>

<p>If you met an &ldquo;no such file or directory: activate&rdquo; error
when running <code>source activate ...</code>, use the full path
<code>~/apps/anaconda3/bin/activate</code> instead of <code>activate</code>.</p>

<p>Anaconda contains many important Python dev tools, including pip, ipython,
conda (which can be used as a replacement for pip and virtualenv).
If you want use it as the primary Python environment, add <code>$ANACONDA_HOME</code>
before the existing <code>$PATH</code>.</p>

<p>But Anaconda has no Python 2.x, so at least on Ubuntu 14.04
this is not the recommended way.
On Ubuntu 16.04, there is no Python 2.x by default, so use Python 3.5 and pip
in Anaconda3 is practical.</p>

<p>Do not add <code>$ANACONDA_HOME</code> after the <code>$PATH</code>, which will expose some binary
like <code>conda, jupyter</code>, while the other (like python and pip) will be covered
by system equivalent. This will lead inconsistent behavior and failure of
<code>conda</code> and <code>jupyter</code>.</p>

<p>Ref:</p>

<p><a href="http://www.ericmajinglong.com/2014/09/23/5-great-things-about-the-anaconda-distribution/">http://www.ericmajinglong.com/2014/09/23/5-great-things-about-the-anaconda-distribution/</a></p>

<h1>Notebook</h1>

<p>Start jupyter notebook server with <code>jupyter notebook</code>.
It creates a new window in existing browser session with url
&ldquo;<a href="http://localhost:8888/tree">http://localhost:8888/tree</a>&rdquo;.</p>

<p>Click [New -> Python3] at the right side of the page to create a new notebook
session. In the new page, use [File -> Rename] to give it a name.</p>

<p>When you click any of the notebook file <code>*.ipynb</code> (here is chap01ex.ipynb)
in browser, it will be opened in a new tab with url
&ldquo;<a href="http://localhost:8888/notebooks/chap01ex.ipynb">http://localhost:8888/notebooks/chap01ex.ipynb</a>&rdquo;.</p>

<p>Jupyter notebook support all vi-style key shortcuts, which conflicts with
Chrome plugin Vimium. So click the Vimium icon at the right side of the address
bar, and add a rule:</p>

<pre><code>Patterns: https?://localhost:8888/notebooks/*
</code></pre>

<p>Leave the &ldquo;Keys&rdquo; textbox blank, which means disable all keys of Vimium
under this pattern.</p>

<p>For Firefox, in [Tools -> Add-ons -> Extensions -> VimFx -> Blacklist], add
<code>http://localhost:8888/*</code> to disable VimFx key shortcuts on Jupyter web page.</p>

<p>Now you can use jupyter key shortcuts freely.
Use <code>h</code> key list all available shortcuts.
Note that shortcuts listed there are all capital letter,
while actually you should use the corresponding small letter.</p>

<p>Use <code>j</code>/<code>k</code> to select active cell, <Enter> to edit it, <code>c</code> to copy,
<code>v</code> to paste, <code>x</code> to delete it.</p>

<p>Use <code>m</code> to make text in a cell as markdown text, <code>y</code> to code.</p>

<p>For markdown cell, use <Enter> to edit it, use Ctrl-Enter to run it
(turn text from edit mode to markdown preview mode).</p>

<p>Use Alt-Enter to evaluate the current cell and insert a blank cell below.</p>

<p>Use <code>s</code> to save current notebook and setup a &ldquo;checkpoint&rdquo;,
use [File -> Revert to Checkpoint] to discard all changes after that checkpoint.</p>

<p>Use <code>o</code> to toggle output of the current cell,
<code>Shift-o</code> to toggle output scrolling.</p>

<p>Use [File -> Download as -> Python(.py)] to create a runnable Python script
from the current jupyter notebook.</p>
]]></content>
  </entry>
  
</feed>
