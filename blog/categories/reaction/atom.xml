<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Reaction | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/reaction/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T15:03:30+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reaction Notes]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/06/122243/"/>
    <updated>2015-10-06T12:22:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/06/122243</id>
    <content type="html"><![CDATA[<h1>Accounts</h1>

<p>reaction-core的用户存在users表和Accounts表，下面是初始化Reaction后得到的Owner用户表结构。
用户与业务有关的信息存在Accounts表中，其余的放在了users表中，
server/methods/accounts.js:Accounts.onCreateUser()可以看到
Accounts中的用户是首先clone Meteor user，然后在上面添加新属性后insert到Accounts表中。
这里users中的用户作用有两个：</p>

<ul>
<li><p>基于Meteor accounts包管理用户的注册、验证、登录等动作；</p></li>
<li><p>基于alanning/meteor-roles定义用户角色；</p></li>
</ul>


<p>下面是从数据库中得到的一组实例：</p>

<pre><code>&gt; db.users.find().pretty()
{
  "_id" : "Jyt46yndz8e5tCWgN",
  "createdAt" : ISODate("2015-10-06T03:43:17.711Z"),
  "services" : {
    "password" : {
      "bcrypt" : "$2a$10$Oj.qa9YmYdQazg3WkvqlbOf2FM2.SI5V0a6Ar8kW8qGEc.dRhzHXe"
    }
  },
  "username" : "Owner",
  "emails" : [
    {
      "address" : "asy6nklv@localhost",
      "verified" : false,
      "provides" : "default"
    }
  ],
  "roles" : {
    "8jbLoDao7BaLhmCog" : [
      "guest",
      "account/profile",
      "owner",
      "admin",
      "dashboard",
      "dashboard/settings/shop",
      "dashboard/orders",
      "createProduct",
      "dashboard/accounts",
      "core",
      "shipping",
      "reaction-shipping",
      "paypal",
      "reaction-paypal",
      "braintree",
      "reaction-braintree",
      "stripe",
      "reaction-stripe",
      "authnet",
      "reaction-auth-net",
      "social",
      "reaction-social",
      "reactionAnalytics",
      "reaction-analytics"
    ],
    "__global_roles__" : [
      "owner",
      "admin",
      "dashboard"
    ]
  }
}

&gt; db.Accounts.find().pretty()
{
  "_id" : "Jyt46yndz8e5tCWgN",
  "createdAt" : ISODate("2015-10-06T03:43:17.733Z"),
  "emails" : [
    {
      "address" : "asy6nklv@localhost",
      "verified" : false,
      "provides" : "default"
    }
  ],
  "userId" : "Jyt46yndz8e5tCWgN",
  "shopId" : "8jbLoDao7BaLhmCog",
  "acceptsMarketing" : false,
  "state" : "new"
}
</code></pre>
]]></content>
  </entry>
  
</feed>
