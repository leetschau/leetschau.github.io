<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 配色 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/pei-se/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-09-20T21:23:24+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Notepad++手工配色]]></title>
    <link href="http://leetschau.github.io/blog/2011/06/23/114908/"/>
    <updated>2011-06-23T11:49:08+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/06/23/114908</id>
    <content type="html"><![CDATA[<p>Notepad++的手工配色相对比较智能，对于其内置的语言，在【设置->语言格式设置】中进行，【选择主题】中可以选择不同的配色主题，确定主题后，在【语言】中选择要修改的语言，在【格式名称】中选择修改那种元素，然后修改颜色和字体；对于非内置语言，则需要使用其内置的"User Defined Languages"对话框；对于一种新语言，首先从网上下载其语法高亮模板，然后再根据自己的要求使用这个对话框修改，直到满意为止。具体来说：</p>

<ol>
<li><p>下载语法高亮文件（xml文件），如果notepad++当前文件夹下没有 userDefineLang.xml 这个文件，将下载的文件放在此文件夹（与notepad++.exe同目录）下，并命名为userDefineLang.xml，如果已经有这个文件，则把下载内容追加到 userDefineLang.xml 末尾；</p></li>
<li><p>启动Notepad++，【视图->自定义语言对话框】打开"User Defined Languages"对话框，在【自定义语言】下应该有刚才添加的语言；</p></li>
<li><p>如果没有，用【Import】按钮导入下载的XML文件；</p></li>
<li><p>对不满意的配色和内容进行修改，然后用【Export】导出，以备将来再次导入；</p></li>
</ol>


<p>修改的方法参见帮助文档的"User Defined Languages"一节，简单地说，能够定制的特性有：普通文本的前/背景色，关键字集合的内容和前/背景色，代码折叠的开始、结束标志，注释的样式和颜色，数字的颜色，运算符的内容和颜色，以上所有内容的字体、字号，转义符号的定义（避免"aa\&ldquo;bb"被解析成一对半字符串）等；</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手工设置Eclipse文本编辑器的配色]]></title>
    <link href="http://leetschau.github.io/blog/2010/11/23/174049/"/>
    <updated>2010-11-23T17:40:49+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/11/23/174049</id>
    <content type="html"><![CDATA[<p>Eclipse中不同的文件都有自己专门的编辑器配色设置，下面分别说明。</p>

<p> 文本编辑器的背景色： Window->Preferences-> General->Editors->Text Editors->Appearance color options->Background color； java文件：Window->Preferences->Java->Editor->Syntax Coloring； properties文件：Window->Preferences->Java->Properties Files Editor； python文件：安装Pydev插件后，Window->Preferences->Pydev->Editor； 被标记的变量的背景色在Window->Preferences->Editors->Text Editors->Annotations->Occurrences(Pydev)中设置；
Eclipse默认的配色还不错，就是白色的背景太亮了，将背景色调成浅灰色（红绿蓝都设为233）即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手工修改UltraEdit的配色]]></title>
    <link href="http://leetschau.github.io/blog/2010/09/27/090945/"/>
    <updated>2010-09-27T09:09:45+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/09/27/090945</id>
    <content type="html"><![CDATA[<p>Ultraedit的配色主要分为两部分，一是全局性的，二是某种语言特有的语法配色。全局设置在【视图->设置颜色】中定义，语法配色在本语言的wordfile里定义。</p>

<p> 全局配色 由很多项目组成，例如 普通文本 （Plain Text）、被选中文本（Selected Text）、光标所在行（Active Line）等，每一项又有“文字颜色”和“背景颜色”两个子项组成，先点击“Plain Text”条，再点击右边的“Text Color”或者“Background Color”，就可以修改普通文本的文字颜色和背景色，其他项目修改方法相同。</p>

<p>语法配色是对 全局配色 中 普通文本 颜色设置的覆盖（Override），它不影响 全局配色 中除 普通文本 外其他项目的颜色设置，</p>

<p>wordfile文件位置在 【高级->配置->Editor Display->Syntax Highlighting->Full directory path for wordfile】中设置； 从外部导入wordfile时，将文件拷贝到上述位置，如果在 下面的 【 Language Selection】下拉框中 找不到该文件对应的语言条目，可能是文件编码格式不是ANSI的，需改为ANSI格式。</p>

<p> 以修改sh文件（Unix Shell脚本）的配色为例，首先用UE 打开一个sh文本，然后 在【高级->配置->Editor Display->Syntax Highlighting->Language Selection】中选择对应的wordfile  ，然后点击【Open】打开这个wordfile，然后修改配色（后面详述），对wordfile修改的效果会在wordfile文件保存后立刻在sh文件中表现出来。</p>

<p> 修改wordfile文件中的颜色定义（ 以修改关键字grep的颜色为例 ）：</p>

<p> 打开这个wordfile文件后，找到grep所在的以/Cn起始的行（n是一个数字），此行中“Colors”后面的数字串就是grep颜色的定义， 选中这个数字串，然后 【编辑->插入颜色】，拾色器图标右边的就是该数字串对应的颜色，点击它，选择一个新颜色，然后点击【Output】下面的“Editor”按钮，数字串就被更新了。</p>

<p> 此行中“Colors Back”和“Colors Auto Back”的含义尚不清楚，</p>

<p> 除了被wordfile定义的语言关键字外，其他字体的颜色定义在 wordfile文件起始处的“/Colors”后面定义， 普通变量的颜色定义是第一个数字，第4个数字代表字符串颜色；</p>

<p> “/Colors Back”、“/Colors Auto Back”作用不清楚。</p>

<p> 本文针对的UE版本：UE Professional v16.10</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用UltraEdit Color Scheme Manager修改UE的配色主题]]></title>
    <link href="http://leetschau.github.io/blog/2010/09/04/085015/"/>
    <updated>2010-09-04T08:50:15+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/09/04/085015</id>
    <content type="html"><![CDATA[<p>UltraEdit的各种配置信息都保存在一个叫UEdit32.ini的文件中，配色主题是其中的一部分，UltraEdit Color Scheme Manager为修改此部分提供了一个便捷的工具，用户可首先生成自己的配色文件（或者使用别人制作的配色文件），然后用它导入到UEdit32.ini中，就实现了添加配色主题的目的。具体步骤是：
 下载压缩包uecolors_v1.2.1.1006.zip，解压，运行其中的uecolors.exe；
 为UltraEdit Color Scheme Manager指定UE的ini文件位置【Settings->Set INI File Location】，根据版本不同，ini文件可能出现在两处：c:\Documents and Settings\Administrator\Application Data\IDMComp\UltraEdit\UEdit32.ini或者UE的安装目录下；
 【File->Open Scheme】将做好的配色主题文件导入（例如压缩包里自带的Borland.ueTheme），【File->Export Theme to UE】；
 运行UE，【View->Set Colors->Save】保存配色主题；
 关闭UE，打开UEdit32.ini，将默认的配色主题名字user scheme 1 改为自己定义的名字；</p>

<p>That&rsquo;s it.</p>
]]></content>
  </entry>
  
</feed>
