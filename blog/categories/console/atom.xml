<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Console | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/console/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-08-27T13:25:34+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python Console Debugger]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/28/105855/"/>
    <updated>2014-05-28T10:58:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/28/105855</id>
    <content type="html"><![CDATA[<p>Create a python file and debug it in gdb style with pdb:</p>

<pre><code>$ pdb testpdb.py
&gt; /home/chad/docs/tmp/testpdb.py(1)&lt;module&gt;()
-&gt; aa = 3
(Pdb) help
...
(Pdb) help l
...
(Pdb) l
  1  -&gt; aa = 3
  2     bb = 4
  3     cc = aa + bb
  4     print(cc)
[EOF]
(Pdb) w
  /usr/lib/python2.7/bdb.py(400)run()
-&gt; exec cmd in globals, locals
  &lt;string&gt;(1)&lt;module&gt;()
&gt; /home/chad/docs/tmp/testpdb.py(1)&lt;module&gt;()
-&gt; aa = 3
(Pdb) n
&gt; /home/chad/docs/tmp/testpdb.py(2)&lt;module&gt;()
-&gt; bb = 4
(Pdb) b 4
Breakpoint 1 at /home/chad/docs/tmp/testpdb.py:4
(Pdb) c
&gt; /home/chad/docs/tmp/testpdb.py(4)&lt;module&gt;()
-&gt; print(cc)
(Pdb) w
  /usr/lib/python2.7/bdb.py(400)run()
-&gt; exec cmd in globals, locals
  &lt;string&gt;(1)&lt;module&gt;()
&gt; /home/chad/docs/tmp/testpdb.py(4)&lt;module&gt;()
-&gt; print(cc)
(Pdb) p bb
4
(Pdb) c
7
The program finished and will be restarted
&gt; /home/chad/docs/tmp/testpdb.py(1)&lt;module&gt;()
-&gt; aa = 3
(Pdb) q
</code></pre>

<p>The command is exactly the same with gdb.</p>

<p>On some OS like ArchLinux, there isn&rsquo;t &ldquo;pdb&rdquo; command, so you have to find the location of &ldquo;pdb.py&rdquo;, then define an alias in ~/.zshrc:</p>

<pre><code>$ locate pdb.py
...
/usr/lib/python3.4/pdb.py
...
$ echo 'alias pdb="/usr/lib/python3.4/pdb.py"' &gt;&gt; ~/.zshrc
</code></pre>

<p>Now you can use &ldquo;pdb <script_file_name>&rdquo; as in Mint.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Console File Manager on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2013/07/12/140657/"/>
    <updated>2013-07-12T14:06:57+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/07/12/140657</id>
    <content type="html"><![CDATA[<p>&ldquo;vi style&rdquo; means use j/k to move cursor up/down, use h/l to move parent/child directory.</p>

<h1>ranger</h1>

<p>vi style. Recommended.</p>

<h1>vifm</h1>

<p>vi style. Add &ldquo;FILETYPE=PDF=pdf=exo-open&rdquo; in ~/.vifm/vifmrc will open pdf file in background.</p>

<h1>Midnight Commander</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start Console Vi From a Launcher on Xfce]]></title>
    <link href="http://leetschau.github.io/blog/2013/07/02/100138/"/>
    <updated>2013-07-02T10:01:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/07/02/100138</id>
    <content type="html"><![CDATA[<p>Alt+F3 (App Finder) -> Keyboard -> Application Shortcuts -> Add:</p>

<p>Command: terminator -e vi;</p>

<p>Shortcut: <Super>v (&ldquo;Win&rdquo; key + v);</p>

<p>Now you can use &ldquo;Win + v&rdquo; to launch vi without installing something like gVim.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows命令行增强工具]]></title>
    <link href="http://leetschau.github.io/blog/2013/01/07/092418/"/>
    <updated>2013-01-07T09:24:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/01/07/092418</id>
    <content type="html"><![CDATA[<p>对Windows命令行增强工具的要求包括：</p>

<ul>
<li><p>Portable，无需安装，解压即可使用；</p></li>
<li><p>支持Unix方式的Copy/Paste，即左键拖动选择文本后自动copy到剪贴板，右键粘贴，最好支持键盘选择文本；</p></li>
<li><p>能够显示中文；</p></li>
<li><p>能够定制命令行窗口的大小、颜色，文字的字体、字号等；</p></li>
<li><p>支持命令行方式启动（含义见下面的例子），这样可以把启动某个程序做成autohotkey快捷键；</p></li>
<li><p>支持tab路径自动补全；</p></li>
</ul>


<h1>ConEmu</h1>

<p>来自俄罗斯的<a href="http://code.google.com/p/conemu-maximus5/">ConEmu</a>是目前找到的最好的Windows命令行增强工具，Copy/Paste方式在Settings -> Keys &amp; Macro -> Mark &amp; Paste中定制，irb.bat显示正常；通过它启动irb.bat（ruby的交互命令行环境）的方法是：</p>

<pre><code>d:\apps\ConEmu\ConEmu.exe d:\Apps\ruby-1.9.3-p327-i386-mingw32\bin\irb.bat
</code></pre>

<h1>其他同类工具</h1>

<ul>
<li><p><a href="http://sourceforge.net/projects/console/">Console2</a>: portable，能配置字体，显示布局有错误，手工执行&#8221;chcp 65001&#8221;切换到UTF-8代码页才能正常，但不能显示中文，有tab自动补全功能，irb.bat显示正常，默认设置中按住Shift拖动鼠标选择文本，可修改；</p></li>
<li><p><a href="">ColorConsole</a>: portable，不能配置字体，但能调整字号，中文显示正常，Copy/Paste与记事本使用方法一致，irb.bat不能显示提示符；</p></li>
<li><p><a href="">TCC-LE</a>: 需要安装，安装包体积大；</p></li>
</ul>


<p>Unix shell的Windows移植版：<a href="http://sourceforge.net/projects/pycmd">PyCmd</a>;</p>

<p>命令行式系统工具：Nircmd。</p>
]]></content>
  </entry>
  
</feed>
