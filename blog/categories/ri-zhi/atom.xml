<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 日志 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/ri-zhi/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-06-01T12:52:39+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[日志文件的筛选]]></title>
    <link href="http://leetschau.github.io/blog/2011/08/11/104245/"/>
    <updated>2011-08-11T10:42:45+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/08/11/104245</id>
    <content type="html"><![CDATA[<p>处理日志文件的一个常用操作是筛选出有某一特殊标志的行，日志文件一般比较大，用Ultraedit之类的软件处理会很慢，一般的方法是用Unix的grep命令重定向到一个文件中，例如要筛选出godu.log中所有有“25:/10.0.2.47:54431”的行，在godu.log所在目录下输入指令：
  grep &lsquo;25:/10.0.2.47:54431&rsquo; godu.log >new.log</p>

<p> 会把godu.log中所有包含“25:/10.0.2.47:54431”的行放入 当前目录下新生成new.log文件中。如果输入的指令是\</p>

<p>  grep &lsquo;25:/10.0.2.47:54431&rsquo; >new.log</p>

<p> 则是对当前目录下所有文件操作，将所有包含 “25:/10.0.2.47:54431”的行找出来放在new.log文件中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎样获取计算机上次启动时间]]></title>
    <link href="http://leetschau.github.io/blog/2010/10/18/082950/"/>
    <updated>2010-10-18T08:29:50+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/10/18/082950</id>
    <content type="html"><![CDATA[<p>有时候需要知道最近一次电脑的启动时间（或者关闭时间），在Windows XP下，有两种方法可以得到这个信息。</p>

<p> 事件查看器方法</p>

<p>【控制面板->管理工具->事件查看器->系统（ 在左边的窗口中，Win7下是在“Windows日志”下 ）->右键->属性】，在打开的【系统属性】窗口中选择【筛选器】，在【事件类型】下面 仅 选中【信息】复选项，并在【事件来源】列表中选择【eventlog】项，【确定】返回事件查看器。右边的窗口中，【事件】下面为6005的表示开机，6006表示关机。基本上可以查看最近3个月以来计算机的开/关机记录。</p>

<p> 日志文件方法</p>

<p>【开始->运行】里输入“schedlgu.txt”，在打开的文件里搜索“任务计划程序服务”，下面的一行就是计算机 开/关机记录。下面是一个样例：</p>

<p> ……</p>

<p> “任务计划程序服务”</p>

<p>  已退出于 2010-10-12 18:21:45</p>

<p> “任务计划程序服务”</p>

<p>  已启动于 2010-10-13 8:11:11
……</p>

<p>注：Notepad++ v5.6/5.7的中文搜索好像有问题，经常出现搜不到的情况，如果搜不到 “任务计划程序服务”这个字符串，可以用其他文本编辑器（如Vim、UE等）试试。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Log4j日志的输出级别设置]]></title>
    <link href="http://leetschau.github.io/blog/2010/07/26/170859/"/>
    <updated>2010-07-26T17:08:59+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/07/26/170859</id>
    <content type="html"><![CDATA[<p>log4j日志文件的输出级别分为7级，由高到低依次是：off, fatal, error, warn, info, debug, all。</p>

<p> 在“log4j.properties”文件的log4j.appender.***.Threshold属性中设置输出的优先级，例如log4j.appender.stdout.Threshold=DEBUG。</p>

<p> 比自己低级别的输出将不会出现在对应的log文件里，例如设置为error，则warn,info,debug级别的日志不写入log文件，设置为info则debug信息不写入log文件。通过在不同的log文件里设置不同的Threshold级别的方法，可以已达到分类输出的目的，例如错误日志文件专门记录error，信息日志记录除调试信息以外的日志，调试日志记录所有输出的日志。</p>

<p> 除了针对appender设置屏蔽级别，还可以针对某一个类设置屏蔽级别，例如：</p>

<p>  log4j.logger.com.boco.godu.GAPI.impl.Connection=WARN</p>

<p> 这样com.boco.godu.GAPI.impl.Connectio类中所有级别低于WARN的日志都不会输出。</p>
]]></content>
  </entry>
  
</feed>
