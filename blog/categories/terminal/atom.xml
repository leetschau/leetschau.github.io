<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Terminal | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/terminal/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T15:03:30+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[启动Console后自动进入tmux]]></title>
    <link href="http://leetschau.github.io/blog/2016/10/16/174235/"/>
    <updated>2016-10-16T17:42:35+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/10/16/174235</id>
    <content type="html"><![CDATA[<p>如果希望启动Console后自动进入tmux环境，可以将这个Console的起始命令设置为
自动attach到一个名为<code>default</code>的tmux session里。</p>

<p>这么做的好处是每次启动Console后，就进入了<code>default</code> session，避免每次手工attach tmux,
坏处是这个Console彻底与tmux绑定，除了修改profile，无法进入没有tmux的状态
（因为退出tmux也就退出了Console）。</p>

<p>所以推荐的做法是除了系统自带的Console软件（Ubuntu上是<code>gnome-terminal</code>），
再安装一个专门用来配合tmux的Console软件，我用的是<code>terminator</code>，
大多数情况下使用terminator + tmux，只有在ssh到其他服务器上使用tmux的时候，
启动系统自带的Console，</p>

<p>配置terminator启动自动进入tmux session <em>default</em>:</p>

<p>在terminator的 <em>Preferences -> Profiles -> Command</em> 标签页中：
check <em>Run a custom command instead of my shell</em>，
并输入 <em>Custom command</em>: <code>tmux new -A -s default</code>
（确认已经预先安装了<code>tmux</code>）。</p>

<p>但是这样配置导致无法创建新的tmux session，所以暂时不使用这种方法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guake as Terminal Emulator on Linux Mint Xfce 14]]></title>
    <link href="http://leetschau.github.io/blog/2014/07/11/090813/"/>
    <updated>2014-07-11T09:08:13+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/07/11/090813</id>
    <content type="html"><![CDATA[<p>You can use F12 to call or hide <a href="https://github.com/Guake/guake">Guake</a>.</p>

<h1>Install</h1>

<pre><code>sudo apt-get install guake
</code></pre>

<p>If you use guake in Awesome, you can activate/deactivate the guake window with &ldquo;Win + Enter&rdquo; as well as F12.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Terminals Operation on Windows and Ubuntu]]></title>
    <link href="http://leetschau.github.io/blog/2013/05/14/081549/"/>
    <updated>2013-05-14T08:15:49+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/05/14/081549</id>
    <content type="html"><![CDATA[<h1>基于多Tab页的Terminal工作环境</h1>

<p>Tmux可以很好的解决一台主机上的多任务并行问题，但如果需要同时在本机和远程主机上工作，
而且这两台主机上都需要运行Tmux，就会出现Tmux的嵌套问题。
这时可以同时运行多个Terminal App，但切换时容易混淆，
更好的方法是在一个Terminal App里创建多个标签页，每个标签页对应一台主机。
Ubuntu预装的Gnome Terminal不支持自定义快捷键，下面基于Terminator实现多标签页，
假设远程主机名为<code>alpha</code>.</p>

<p>在System settings -> Keyboard中创建自定义快捷键：<code>terminator</code>: Alt-F11</p>

<p>配置Terminator: 在 <em>Preferences</em> 中：</p>

<ul>
<li><p>Global: Maximised;</p></li>
<li><p>Profiles: 在 <em>Global</em> 子标签下：uncheck <em>Show titilebar</em>, check &ldquo;copy on selection&rdquo;;
若需要与tmux绑定，参考笔记"启动Console后自动进入tmux &ldquo;.</p></li>
<li><p>Keybindings: new_tab: Ctrl-Shift-T, next_tab: Ctrl-Shift-N;</p></li>
</ul>


<h2>工作流程</h2>

<ol>
<li>用<code>Alt-F11</code>打开Terminator，窗口自动最大化；</li>
<li>用<code>Ctrl-Shift-T</code>创建新标签，双击Tab页上的标题重命名
 （没有找到rename tab的快捷键），例如第一个tab设置为<code>local</code>，
 第二个tab标题设置为<code>alpha</code>等；</li>
<li>用<code>Ctrl-Shift-N</code>在多个标签间切换；</li>
<li>用<code>Ctrl-Shift-=</code>和<code>Ctrl--</code>放大/缩小字体；</li>
</ol>


<p>如果在alpha上的操作不复杂，只需要一个窗口，就不必采用多标签模式，
在本机启动Tmux，其中一个window SSH到远程主机就可以了。
这种情况下，第一个window命名为<code>local</code>，第二个命名为<code>alpha</code>.</p>

<h1>基于多Workspace的Terminal工作环境</h1>

<p>Termianl, a.k.a. console or command line, is a great tool to tell computers what
to do. It&rsquo;s efficient and cool to type some words in a terminal(of course
in full screen mode) and get all things done.
But if you have only one terminal on the screen, switching between directories
are always disturbing and time-consuming jobs. So to keyboard fans,
a terminal enhancement tool is necessary. With the help of
workspace (a.k.a. virtual desktop) switching tool and window arrangements
shortcuts, a geek&rsquo;s screen is like this:</p>

<ol>
<li><p>Put all GUI windows in workspace 1;</p></li>
<li><p>Put terminal windows in workspace 2;</p></li>
<li><p>In workspace 2, switch multiple terminal tool in full screen mode;</p></li>
<li><p>Use workspace switching shortcuts to switching between GUI workspace and terminal workspace;</p></li>
</ol>


<h1>Windows: Conemu + VirtuaWin</h1>

<p>Terminal full screen: alt + enter;</p>

<p>Split window: alt + h/v (split horizontal/vertical, defined in [Settings-> Keys &amp; Macros -> duplicate active &lt;<shell>> split to bottom/right]);</p>

<p>Switch between terminal: [ctrl + tab] or [Win + q];</p>

<p>Hide tab bar: Settings -> Features -> Tabs -> Don&rsquo;t show;</p>

<p>Switch workspace: alt + win + Left/Right/Up/Down (defined in Setup -> Hotkeys of VirtuaWin);</p>

<h1>Ubuntu: Teminator</h1>

<p>Auto run command when startup (ssh to a remote server in this case): terminator -x ssh bvt@10.0.2.74;</p>

<p>(use terminator -h for details. xterm and konsole also surppot -e <command> syntax).</p>

<p>Terminal full screen: F11 (defined in [System Settings -> Keyboard -> Shortcuts
-> Windows -> Toggle fullscreen mode]);</p>

<p>Split window: alt + h/v (split horizontal/vertical, defined in [Preference -> Keybindings -> split_horiz/split_vert]);</p>

<p>Switch between terminal: alt + Left/Right/Up/Down;</p>

<p>Toggle Window max/normal of one of all terminals:
ctrl + shift + z (defined in [Preferences -> Keybindings -> scaled_zoom]);</p>

<p>Make background transparent: [Preferences -> Profiles -> defaults -> Background -> Transparent background: 0.8];</p>

<p>copy on selection: [Preferences -> Profiles -> Copy on selection];</p>

<p>Switch workspace: alt + ctrl + Left/Right/Up/Down (defined in [System Settings -> Keyboard -> Shortcuts -> Navigation -> Move to workspace left/right/above/below]);</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从脚本启动图形界面程序]]></title>
    <link href="http://leetschau.github.io/blog/2013/05/07/143223/"/>
    <updated>2013-05-07T14:32:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/05/07/143223</id>
    <content type="html"><![CDATA[<p>Ubuntu上如果从脚本启动图形界面程序，会有一个终端窗口始终开启，如果在脚本里用nohup启动，就可以关闭这个窗口了，例如下面的脚本演示了启动eclipse程序：</p>

<p> export PATH=$PATH:/opt/jre1.6.0_14/bin</p>

<p> nohup /opt/eclipse/eclipse 1>/dev/null 2>/dev/null</p>

<p>参考： <a href="http://askubuntu.com/questions/10547/how-to-clean-launch-a-gui-app-via-the-terminal-so-it-doesnt-wait-for-terminati">http://askubuntu.com/questions/10547/how-to-clean-launch-a-gui-app-via-the-terminal-so-it-doesnt-wait-for-terminati</a></p>
]]></content>
  </entry>
  
</feed>
