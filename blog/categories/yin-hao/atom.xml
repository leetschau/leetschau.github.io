<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 引号 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/yin-hao/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-18T14:12:11+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shell中的替换和引用]]></title>
    <link href="http://leetschau.github.io/blog/2011/09/05/170533/"/>
    <updated>2011-09-05T17:05:33+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/09/05/170533</id>
    <content type="html"><![CDATA[<p>Shell中的替换有4种形式，分别是：</p>

<p>Filename substitution (called globbing)</p>

<p>Value-based variable substitution</p>

<p>Command substitution</p>

<p>Arithmetic substitution</p>

<p> Filename substitution指文件名的通配符，包括*,?和[]，分别表示任意长度字符串、单个字符和字符集合，例如：</p>

<p> ls ch*可以列出ch01 ch23等，ls ch?可以列出ch1 chs等，ls ch[01]可以列出ch0或者ch1</p>

<p>Value-based variable substitution是变量替换，基本方法是$variable_name。</p>

<p>下面的例子演示了两点：一是“:-”的用法（若HOST未赋值，则表达式值为localhost，HOST保持不变，详见[1] Hour 8: Substitution），二是字符串可以直接组合。</p>

<p> bash-3.00$ pp=${HOST:-localhost}&ldquo;$ &rdquo;</p>

<p> bash-3.00$ echo $pp</p>

<p> localhost$</p>

<p> bash-3.00$ pp=${HOME:-localhost}&ldquo;$ &rdquo;</p>

<p> bash-3.00$ echo $pp</p>

<p> /opt/godu$</p>

<p>Command substitution是将一个命令的输出进行替换，基本方法是用反引号或者$(&hellip;)括起命令，在指令替换有嵌套时用后者更方便，如</p>

<p> bash-3.00$ mydate=<code>date</code></p>

<p> bash-3.00$ echo $mydate</p>

<p>Mon Sep 5 17:04:42 CST 2011
 bash-3.00$ echo $(date) 2012年 05月 18日 星期五 14:34:19 CST
 Arithmetic substitution是进行算术表达式求值，基本格式是$((&hellip;))，例如：</p>

<p> foo=$(( ((5 + 3*2) - 4) / 2 ))</p>

<p>单引号将内部的所有元字符（metacharactor）视为一般字符输出，双引号内$,`,\这些元字符（详见[1] Table 9.1）不被视为一般字符，例如：</p>

<p> bash-3.00$ echo &lsquo;I have $23&rsquo;
I have $23</p>

<p> bash-3.00$ echo &ldquo;I have $23&rdquo;
I have 3 bash-3.00$ echo &lsquo;I have \$23&rsquo;
I have \$23</p>

<p> bash-3.00$ echo &ldquo;I have \$23&rdquo;
I have $23</p>

<p> bash-3.00$ echo &lsquo;<code>date</code>&rsquo;
<code>date</code> bash-3.00$ echo &ldquo;<code>date</code>&rdquo;
2012年 05月 18日 星期五 14:55:40 CST</p>

<p> bash-3.00$ echo &ldquo;$(date)&rdquo;
2012年 05月 18日 星期五 14:57:07 CST</p>

<p>[1] Sriranga Veeraraghavan, Sams Teach Yourself Shell Programming in 24 Hours, Sams Publishing, 1999</p>
]]></content>
  </entry>
  
</feed>
