<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sync | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/sync/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
<<<<<<< HEAD
  <updated>2015-06-01T12:52:39+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
=======
  <updated>2015-05-26T17:50:21+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
>>>>>>> 07ed3639e773b839d5491a4f5cd36dc20296d73c
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Sync a Fork on Github]]></title>
    <link href="http://leetschau.github.io/blog/2015/04/15/105035/"/>
    <updated>2015-04-15T10:50:35+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/04/15/105035</id>
    <content type="html"><![CDATA[<p>I forked <a href="https://github.com/mitsuhiko/flask">flask repository</a> to
<a href="https://github.com/leetschau/flask">my own account</a>.</p>

<p>After several months, there are many new commits to the original flask repo.
How to sync these new commits to my fork?</p>

<h1>Option 1: In Github Web UI</h1>

<p>Three steps: compare, send pull request, and merge.</p>

<p>See Olufemi Israel Olanipeku&rsquo;s answer of
<a href="http://stackoverflow.com/questions/20984802/how-can-i-keep-my-fork-in-sync-without-adding-a-separate-remote/21131381#21131381">How can I keep my fork in sync without adding a separate remote?</a> for details.</p>

<h1>Option 2: In Terminal</h1>

<p>You can do it via your local clone:</p>

<ol>
<li><p>Clone leetschau/flask to local machine;</p></li>
<li><p>Add mitsuhiko/flask as a remote repo;</p></li>
<li><p>Pull new commit from mitsuhiko/flask to your local machine;</p></li>
<li><p>Push your local repo to leetschau/flask.</p></li>
</ol>


<p>See <a href="https://help.github.com/articles/syncing-a-fork/">Syncing a fork</a> for details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Synchronize .vimrc With bitbucket.org]]></title>
    <link href="http://leetschau.github.io/blog/2013/07/26/160614/"/>
    <updated>2013-07-26T16:06:14+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/07/26/160614</id>
    <content type="html"><![CDATA[<p>I created a vimrc repository at bitbucket.org.</p>

<p>When the .vimrc file changes, verify it locally(see note 1), then synchronize it manually(see note 2). Then commit the code changes online.</p>

<p>When synchronizing .vimrc at other host, download .vimrc with</p>

<p> git clone <a href="https://leechau@bitbucket.org/leechau/vimrc.git">https://leechau@bitbucket.org/leechau/vimrc.git</a></p>

<p>and overwrite the original one.</p>

<p>Note 1: how to verify .vimrc fast:</p>

<ol>
<li><p>Open two terminal window, open .vimrc in the first window, and open a normal file in another;</p></li>
<li><p>Edit .vimrc, save it;</p></li>
<li><p>Reload .vimrc file in the second window with shortcut &ldquo;,sv&rdquo;, see the result;</p></li>
<li><p>Repeat this &ldquo;edit - save - reload - evaluation&rdquo; loop until it&rsquo;s ok.</p></li>
</ol>


<p>Note 2: synchronize file manually at bitbucket.org</p>

<ol>
<li><p>Open <a href="https://bitbucket.org/leechau">https://bitbucket.org/leechau</a> in web browser and login;</p></li>
<li><p>Repositories: vimrc -> Source -> .vimrc -> click &ldquo;Edit&rdquo; button at upper-right corner of source code panel;</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Directories Sync Utility on Mint]]></title>
    <link href="http://leetschau.github.io/blog/2013/06/04/111553/"/>
    <updated>2013-06-04T11:15:53+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/06/04/111553</id>
    <content type="html"><![CDATA[<h1>Meld (GUI App)</h1>

<p>TotalCommander&rsquo;s Mint(Ubuntu) counterpart is &ldquo;Meld&rdquo;. It supports command-line invocation, much slower than TotalCmd, and its visual filters and backup policies are all weaker than that of TotalCmd(See note &ldquo; Auto Dir Sync Script Based on Total Commander &rdquo; for details). Use it from command line:</p>

<pre><code>meld dir1 dir2
</code></pre>

<p>Note: Gnome-commander is much like TotalCmd, and it can use Meld as sync tools.</p>

<h1>rsync</h1>

<pre><code>rsync -rtvu --delete &lt;src_folder&gt; &lt;dst_folder&gt;
</code></pre>

<p>for example:</p>

<pre><code>rsync -rtvu --delete ~/Documents/CalibreLib/ 'chad@10.21.3.31:/home/chad/Calibre Library'
</code></pre>

<p>very slow. Maybe you can fast it with adding a &ldquo;-c&rdquo; parameter(checksum): <code>rsync -rtuvc ...</code></p>

<p>In parameter list, r means recursive (including subdirs); t meas preserve modification time of the files; v means verbose; u means update, if the file in dst is newer than that in src, it will not be copied; &ndash;delete means delete files in destination folder which not exist in source folder.</p>

<p>Note: never forget the trailing slash of src_folder (that after dst_folder is unnecessary), or src_folder will be copied <strong>into</strong> the dst_folder.</p>

<p>Ref: <a href="http://www.jveweb.net/en/archives/2010/11/synchronizing-folders-with-rsync.html">Synchronizing folders with rsync</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto Dir Sync Script Based on Total Commander]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/28/143757/"/>
    <updated>2012-12-28T14:37:57+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/28/143757</id>
    <content type="html"><![CDATA[<p>The Sync source folder is in e:\mydoc\CalibreLib, destination folder is M:\backup\CalibreLib, where M is the drive letter of an USB disk with label &ldquo;Emacs&rdquo;;</p>

<h1>Giving USB Disk a fixed Drive Letter</h1>

<p>Right click &ldquo;My Compter&rdquo; -> Manage -> Storage -> Disk Management. Right click the USB drive -> Change Drive Letter and Paths, and modify it to M. You can choose any letter between M~Z. A letter before M is not recommended because it could be occupied by virtual drives or CD-ROMs.</p>

<p>Test shows that other USB disk won&rsquo;t use the drive letter &ldquo;M&rdquo;. And this USB disk(&ldquo;Emacs&rdquo;) always use &ldquo;M&rdquo; no matter which USB port it&rsquo;s plugged in;</p>

<h1>Define Sync Configuration in Total Commander</h1>

<ol>
<li><p>Open e:\mydoc\CalibreLib in upper(left) panel in TC, M:\backup\CalibreLib in bottom panel;</p></li>
<li><p>Shift + F12(Commands -> Synchronize Dirs) to show the Sync window of TC;</p></li>
<li><p>Check &ldquo;Asymmetric&rdquo;(because I want a strict mirror of e:\mydoc\CalibreLib, not a copy. see TC doc for detailed explanation) and &ldquo;Subdirs&rdquo;;</p></li>
<li><p>Click the button at the left side of the directory input box and choose &ldquo;add current directories and settings to list&rdquo;. You can verify this by openning file wincmd.ini in TC&rsquo;s installation dir and you can find:</p></li>
</ol>


<p> [SyncOptions]
 BooksLib_L=E:\MyDoc\CalibreLib\
 BooksLib_R=M:\backup\CalibreLib\
 BooksLib_Wcs=<em>.</em>
 BooksLib_Flags=9|61|-9</p>

<p>In &ldquo;Configuration and Switches&rdquo; -> &ldquo;ini file Settings&rdquo; of TC&rsquo;s document file(TOTALCMD.CHM), you can find the explanations about settings above.</p>

<h1>Define a hotkey in AutoHotkey Script</h1>

<p>  #!s:: Run, d:\apps\TotalCmd\TOTALCMD.EXE /S=S:=BooksLib ; Sync Calibre dir to usb disk</p>

<h1>Use this auto sync script</h1>

<ol>
<li><p>Insert USB disk;</p></li>
<li><p>Press Win+Alt+s;</p></li>
<li><p>Sync tool of TC will start comparation automatically;</p></li>
<li><p>When comparation ends, check the result. If it&rsquo;s OK, press Enter to start Synchronize;</p></li>
</ol>


<p>That&rsquo;s it.</p>
]]></content>
  </entry>
  
</feed>
