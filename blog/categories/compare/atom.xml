<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Compare | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/compare/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
<<<<<<< HEAD
  <updated>2015-06-01T12:52:39+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
=======
  <updated>2015-05-26T17:50:21+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
>>>>>>> 07ed3639e773b839d5491a4f5cd36dc20296d73c
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Diff Notes]]></title>
    <link href="http://leetschau.github.io/blog/2013/07/26/155636/"/>
    <updated>2013-07-26T15:56:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/07/26/155636</id>
    <content type="html"><![CDATA[<h1>Compare Files Remotely with Diff</h1>

<p>For example, compare ~/.vimrc at different hosts:</p>

<<<<<<< HEAD
<p> ssh <a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#x62;&#118;&#116;&#64;&#x31;&#48;&#x2e;&#48;&#46;&#x32;&#x2e;&#x37;&#52;">&#x62;&#x76;&#x74;&#x40;&#x31;&#x30;&#x2e;&#x30;&#46;&#50;&#46;&#55;&#52;</a> &ldquo;cat /home/bvt/.vimrc&rdquo; | diff -y &ndash;suppress-common-lines - .vimrc</p>
=======
<p> ssh <a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#111;&#x3a;&#98;&#118;&#x74;&#x40;&#49;&#48;&#46;&#x30;&#46;&#50;&#x2e;&#x37;&#x34;">&#x62;&#118;&#x74;&#x40;&#x31;&#x30;&#x2e;&#48;&#x2e;&#50;&#46;&#55;&#52;</a> &ldquo;cat /home/bvt/.vimrc&rdquo; | diff -y &ndash;suppress-common-lines - .vimrc</p>
>>>>>>> 07ed3639e773b839d5491a4f5cd36dc20296d73c

<p>where -y is abbr. of &ldquo;&ndash;side-by-side&rdquo;.</p>

<h1>Compare Files in Two Directories</h1>

<p>Usually we use the following command to compare source files in two directories:</p>

<h2>Find out which files are different</h2>

<p> ┌─[lichao@lichao480] - [~/docs/erlang/processquest-1.0.0/apps]
 └─[$] diff -rq sockserv-1.0.0/src sockserv-1.0.1/src
 Files sockserv-1.0.0/src/sockserv_serv.erl and sockserv-1.0.1/src/sockserv_serv.erl differ</p>

<p>then use vimdiff to show detailed differences between these files.</p>

<p>-r means &ldquo;recursively&rdquo;, -q means only report different files.</p>

<h2>Print out differences of files directly</h2>

<p> ┌─[lichao@lichao480] - [~/docs/erlang/processquest-1.0.0/apps] - [1672]
 └─[$] diff -y &ndash;suppress-common-lines sockserv-1.0.0/src sockserv-1.0.1/src
 diff -y &ndash;suppress-common-lines sockserv-1.0.0/src/sockserv_serv.erl sockserv-1.0.1/src/sockserv_serv.erl
          >  gen_tcp:close(S#state.socket),
 terminate(normal, #state{socket=S}) ->    | terminate(normal, _State) ->
  gen_tcp:close(S);       |  ok;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[比较不同文件夹下源代码的内容差异]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/07/111330/"/>
    <updated>2012-12-07T11:13:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/07/111330</id>
    <content type="html"><![CDATA[<h1>场景</h1>

<p>现有两个源代码文件夹："d:\workspace\GoduServer3.0\src"和"d:\workspace\Godu_Server_2.3\src"，分别包含多级子目录，需要比较所有子目录中文件内容的差异（不能只比较文件的大小和修改时间）。</p>

<h1>Linux</h1>

<p>diff -rq, see &ldquo; Diff Notes &rdquo;;</p>

<h1>解决方案</h1>

<h2>Windows</h2>

<h3>TotalCmd</h3>

<ol>
<li><p>分别打开要比较的两个文件夹，[Commands -> Synchronize dirs] (Shift+F12);</p></li>
<li><p>取消"Asymmetric"，选中"subdirs", &ldquo;by content&rdquo; and &ldquo;ignore date"，点击"compare&rdquo;;</p></li>
<li><p>TotalCmd会列出所有不同的文件，要比较不同的文件，选中然后右键 -> Compare Left &amp; Right (Ctrl+F3);</p></li>
<li><p>根据文件内容确定同步的方向，点击"Synchronize"；</p></li>
</ol>


<h3>UltraCompare</h3>

<p>用<a href="http://www.ultraedit.com/products/ultracompare.html">UltraCompare Pro</a>的绿色版，解压后在uc.exe所在目录下运行：
uc -d -r -ne -dmf -B d:\workspace\GoduServer3.0\src d:\workspace\Godu_Server_2.3\src</p>

<p>指令格式：uc [options] dir1 dir2</p>

<p>选项含义：</p>

<p>-d：文件夹比较模式（而不是文本比较）；</p>

<p>-r：包含所有子文件夹；</p>

<p>-ne：只显示不同的文件；</p>

<p>-dmf：文本比较模式（逐字节比较，另外还有：-dmb：基本比较模式，只比较文件大小和日期；-dms：智能比较模式）</p>

<p>-B：文本比较时忽略空行；</p>

<p>详见UltraCompare帮助文档“命令行选项”一节。</p>

<p>UC支持界面操作，上面各个选项在工具栏上都有图标，选中后点击两个路径输入框中间的绿色三角按钮就开始比较了（Ctrl+F5），比较完之后可以用工具栏上的各种合并按钮进行合并操作。</p>

<h3>备选方案</h3>

<ul>
<li>免费软件FreeFileSync也具备比较文件内容和子文件夹循环比较的能力，但只能找到不用的文件，不能对选定的文件进行文本比较。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse各个版本之间的比较]]></title>
    <link href="http://leetschau.github.io/blog/2012/07/03/171128/"/>
    <updated>2012-07-03T17:11:28+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/07/03/171128</id>
    <content type="html"><![CDATA[<p>Eclipse有很多版本（见 下载页面 ）， 彼此之间的比较 表明RCP(227MB)功能最全，MDT(264MB)只有两个功能（且完全被RCP覆盖），尺寸却比RCP大，为什么？</p>

<p> 第一次还没看明白，后来才发现这个比较表格的行是某项功能，列是不同的package，这样可以发现RCP的那个没有MDT多，所以尺寸也就小一些；</p>

<p>根据这张表，由于XML是必须的一项功能，所以Eclipse IDE for Java Developers这个package加上ObjectAid（提供java代码到类图的自动转换）应该是一个不错的组合，如果需要采用设计驱动的开发方式，使用Eclipse Modeling Tools也不错，但没有XML功能。</p>
]]></content>
  </entry>
  
</feed>
