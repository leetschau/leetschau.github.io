<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu Server | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/ubuntu-server/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-08-11T14:12:54+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install Packages on a Internet-blocked Server]]></title>
    <link href="http://leetschau.github.io/blog/2013/06/08/141508/"/>
    <updated>2013-06-08T14:15:08+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/06/08/141508</id>
    <content type="html"><![CDATA[<h1>Using Proxy</h1>

<p>Verified on Ubuntu Server 12.04, 2013-6-8.</p>

<ol>
<li><p>start a goagent server at 10.21.3.31;</p></li>
<li><p>login in as root, modify any cn.archive&hellip; to us.archive&hellip; in /etc/apt/sources.list;</p></li>
<li><p>use proxy temporarily: <code>export http_proxy=http://10.21.3.31:8087</code>;</p>

<p>use it permament: add the following line to your /etc/apt/apt.conf(substitute your details for address and port):</p>

<p> Acquire::<a href="http::Proxy">http::Proxy</a> &ldquo;<a href="http://10.21.3.31:8087">http://10.21.3.31:8087</a>&rdquo;;</p></li>
</ol>


<p>now you can use apt-get or wget to install something.</p>

<h1>Download &amp; Install</h1>

<h2>RPM-based</h2>

<h3>Download from a internet-connected host</h3>

<p>Get rpm files from cache /var/cache/yum, or use 3rd-party tool yumdownloader:</p>

<pre><code># yum install yum-utils
# yumdownloader --resolve subversion
</code></pre>

<p>Note you can add &ldquo;&ndash;urls&rdquo; to only list download urls instead of downloading RPMs, it can be used as &ldquo;dry-run&rdquo; mode;
If yumdownloader can&rsquo;t resolve dependencies properly, see <a href="http://errors.bz/Questions/yumdownloader-downloads-only-i686-resolved-rpms-153416.html">yumdownloader downloads only i686 resolved rpms</a> for solutions.</p>

<h3>Instll on a isolated host</h3>

<pre><code># rpm -ivh &lt;package-name&gt;.rpm
</code></pre>

<h2>Debian-based</h2>

<h3>aptitude</h3>

<p>Notice that 32bit and 64bit of some packages are uncompatible. So you want to download 64bit packages on a 32bit machine, you have to &ldquo;vagrant up&rdquo; a 64bit VM, download deb files and save them in shared folder.</p>

<h4>Download</h4>

<p>Download package and all its dependencies with aptitude:</p>

<pre><code>`sudo aptitude --download-only install &lt;package-name&gt;`
</code></pre>

<p>This will download deb files to /var/cache/apt/archives. Copy the package and all its dependencies to a folder then run <code>sudo dpkg -i *.deb</code>.
If you are not sure about which is the related packages, use <code>sudo aptitude clean</code> to remove all existing .deb files before download.</p>

<p>Verified by <code>sudo aptitude --download-only install subversion</code> on vagrant box precise64.</p>

<p><code>sudo apt-get download &lt;package-name&gt;</code> will download deb files to current directory, since it does not resolve dependencies. So it&rsquo;s not very useful.</p>

<h4>Install</h4>

<pre><code>`sudo dpkg -i *.deb`
</code></pre>

<p>Ref:
<a href="http://stackoverflow.com/questions/13756800/how-to-download-all-dependencies-and-packages-to-directory">http://stackoverflow.com/questions/13756800/how-to-download-all-dependencies-and-packages-to-directory</a>
<a href="http://stackoverflow.com/questions/4419268/how-do-i-download-a-package-from-apt-get-without-installing-it">http://stackoverflow.com/questions/4419268/how-do-i-download-a-package-from-apt-get-without-installing-it</a></p>

<h3>apt-offline</h3>

<h4>Installation</h4>

<pre><code>`sudo aptitude install apt-offline`
</code></pre>

<h4>Usage</h4>

<ol>
<li><p>Specify what to install on the offline-machine: <code>sudo apt-offline set --update --upgrade --install-packages subversion openjdk-6-jre ant -- apt-offline.sig</code>;</p></li>
<li><p>Downlaod data on a internet-connected machine: <code>apt-offline get --bundle mypack.zip -t 5 apt-offline.sig</code>, where mypack is the downloaded archive and &ldquo;-t  5&rdquo; means &ldquo;download with 5 threads&rdquo;;</p></li>
<li><p>Copy mypack.zip to the offline-machine and extract it: <code>sudo apt-offline install mypack.zip</code>;</p></li>
<li><p>Install it with <code>sudo dpkg -i &lt;packages&gt;.deb</code>.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Package Repository for Ubuntu Offline Installation]]></title>
    <link href="http://leetschau.github.io/blog/2013/06/07/101540/"/>
    <updated>2013-06-07T10:15:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/06/07/101540</id>
    <content type="html"><![CDATA[<p>For example, we need install &ldquo;unzip&rdquo; command on a Ubuntu machine without Internet.</p>

<ol>
<li><p>On a online computer, google: unzip site:packages.debian.org, download unzip_6.0-8_i386.deb;</p></li>
<li><p><code>scp unzip_6.0-8_i386 user@remoteServer:/home/user</code>;</p></li>
<li><p>on remoteServer: <code>dpkg -i unzip_6.0-8_i386</code>;</p></li>
</ol>


<p>bingo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Postgresql Database for Sonar]]></title>
    <link href="http://leetschau.github.io/blog/2013/06/07/082016/"/>
    <updated>2013-06-07T08:20:16+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/06/07/082016</id>
    <content type="html"><![CDATA[<h1>Setup Postgresql Server</h1>

<p>Use &ldquo;cross distribution packages&rdquo; postgres_9.2.4-1.i386.openscg.deb and install it on Mint 14. This kind of installer can be installed without GUI environment, suitable for Ubuntu Server. Installer of Postgresql is much smaller than its mysql counterpart.</p>

<p>You can follow <a href="http://wiki.openscg.com/index.php/Postgres_9.1_DEB">the instructions at OpenSCG</a> to setup server and manipulate data.</p>

<ol>
<li><p>Download &ldquo;cross distribution packages&rdquo; postgres_9.2.4-1.i386.openscg.deb;</p></li>
<li><p>install it with <code>dpkg -i</code>;</p></li>
<li><p>start service: <code>/etc/init.d/postgres-9.2-openscg start</code>;</p></li>
<li><p>verify service: <code>invoke-rc.d postgres-9.2-openscg status</code>, and <code>su postgres</code> to verify if user postgres has been created;</p></li>
<li><p><code>. /opt/postgres/9.2/pg92-openscg.env</code></p></li>
<li><p>verify connection: <code>psql</code>, then you can see the postgresql prompt &ldquo;postgres=#&rdquo;, use &ldquo;\l&rdquo; to list all databases;</p></li>
</ol>


<h1>Setup Connection between Sonar and Postgresql database</h1>

<ol>
<li><p>build sonar database in Postgresql</p>

<ol type="a">
<li>create user sonar: <code>postgres=# create user sonar with password 'sonar';</code>, notice you must &ldquo;;&rdquo; at end of command,</li>
<li>verify: <code>postgres=# \du</code>;</li>
<li>create database: <code>postgres-# create database sonar with owner sonar encoding 'UTF8';</code></li>
<li>verify: <code>postgres=# \l</code>;</li>
</ol>
</li>
<li><p>modify sonar jdbc url: modify &ldquo;sonar.jdbc.url&rdquo; as &ldquo;jdbc:postgresql://localhost/sonar&rdquo; in file $SONAR_HOME/conf/sonar.properties (remember comment out default h2 jdbc url);</p></li>
<li><p>start sonar server: <code>$SONAR_HOME/bin/sonar.sh console</code>;</p></li>
<li><p>verify: <code>psql -h localhost -d sonar -U sonar</code>, then <code>sonar=&gt; select table_name from information_schema.tables where table_schema='public';</code>, you can see &ldquo;49 rows&rdquo; at the bottom of the output;</p></li>
</ol>


<p>Note 2: When upgrade or reinstall SonarQube, and after modifying configuration file, you have to goto <a href="http://10.0.2.74:9000/setup">http://10.0.2.74:9000/setup</a> to upgrade database manually, or you will see &ldquo;sonar is under maintenance. please check back later&rdquo;.</p>

<h1>Enable Remote Access to Postgresql Server(unnecessary for Sonar)</h1>

<p>(updated at 2013.12.23: The following operation is very <strong>dangerous</strong> and not preferred.</p>

<p>Ref: <a href="http://serverfault.com/questions/110154/whats-the-default-superuser-username-password-for-postgres-after-a-new-install/325596#325596">http://serverfault.com/questions/110154/whats-the-default-superuser-username-password-for-postgres-after-a-new-install/325596#325596</a></p>

<ol>
<li><p>setup password for user postgres: <code>sudo passwd postgres</code>;</p></li>
<li><p>login as postgres: <code>su postgres</code> (the $HOME on Ubuntu should be /etc/postgres/9.2);</p></li>
<li><p>add a line in data/pg_hba.conf: &ldquo;host all all 0.0.0.0/0 md5&rdquo;;</p></li>
<li><p>modify listen_addresses=&ldquo;127.0.0.1&rdquo; to &ldquo;*&rdquo; in data/postgresql.conf;</p></li>
<li><p>verify(on client machine): <code>psql -h 10.21.3.31 -U postgres -d postgres</code> (-U means username, -d means database);</p></li>
</ol>


<p>or use squirrel-sql client: download driver jar postgresql-9.2-1002.jdbc4.jar at jdbc.postgresql.org and copy to $SQUIRREL_HOME/lib, start squirrel-sql, create a connection with url=&ldquo;jdbc:postgresql://10.21.3.31/postgres&rdquo;, username=&ldquo;postgres&rdquo; and password=&ldquo;&hellip;&rdquo;;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Server安装telnet服务时`Unable to Locate Package Telnetd`解决方法]]></title>
    <link href="http://leetschau.github.io/blog/2013/02/09/111232/"/>
    <updated>2013-02-09T11:12:32+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/02/09/111232</id>
    <content type="html"><![CDATA[<p>装好Ubuntu Server 12.04后，用apt-get安装telnetd报"E: Unable to locate package telnetd"，解决方法如下：</p>

<ol>
<li><p>虚拟机采用NAT方式与主机连接；</p></li>
<li><p>sudo apt-get update（更新apt-get的软件源）</p></li>
<li><p>sudo apt-get install telnetd</p></li>
<li><p>sudo /etc/init.d/openbsd-inetd restart</p></li>
</ol>


<p>验证：</p>

<p>ps -ef|grep telnetd</p>

<p>&ldquo;openbsd-inetd restart"指令执行完后需要几秒钟才能启动telnetd服务；</p>

<p>注意，安装软件（或者其他连接互联网的动作只能在NAT模式下运行，而主机用telnet/ssh方式连接虚拟机只能在Host-only模式下，所以当连接失败时注意检查是否模式没设置对。</p>
]]></content>
  </entry>
  
</feed>
