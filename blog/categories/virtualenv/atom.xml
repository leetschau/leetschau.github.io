<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Virtualenv | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/virtualenv/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-02T09:35:25+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Note About Virturalenvwrapper]]></title>
    <link href="http://leetschau.github.io/blog/2014/01/09/183148/"/>
    <updated>2014-01-09T18:31:48+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/01/09/183148</id>
    <content type="html"><![CDATA[<h1>Installation</h1>

<pre><code>$ sudo pip install virtualenvwrapper
</code></pre>

<p>Add following lines into ~/.zshrc:</p>

<pre><code>source /usr/local/bin/virtualenvwrapper.sh

export WORKON_HOME=~/apps/virenv_home

export PROJECT_HOME=~/docs/python_projects
</code></pre>

<h1>Usage</h1>

<p>There are two concepts in virturalenvwrapper. One is &ldquo;virtual environment&rdquo;, which has its own python executables. The other is &ldquo;project&rdquo;, where your source codes resides. They are n-to-n relationship.</p>

<p>&ldquo;mkvirtualenv env1&rdquo; will create a new &ldquo;virtual environment&rdquo; in $WORKON_HOME, regardless your CWD.</p>

<p>&ldquo;mkproject proj1&rdquo; will create both a &ldquo;virtual environment&rdquo; named &ldquo;proj1&rdquo; in $WORKON_HOME and a &ldquo;proj1&rdquo; folder in $PROJECT_HOME. Then go to $PROJECT_HOME/proj1, then activate the virtual environment proj1. So &ldquo;mkproject proj1&rdquo; equals to:</p>

<pre><code>$ mkvirtualenv proj1

$ mkdir $PROJECT_HOME/proj1

$ cd $PROJECT_HOME/proj1

$ workon proj1
</code></pre>

<p>Associate an existing virtualenv and an existing project with command</p>

<pre><code>$ setvirtualenvproject virtualenv_path project_path
</code></pre>

<p>Under the hood, virturalenvwrapper create a &ldquo;.project&rdquo; file under the root of the virtualenv, in which is the project path.</p>

<p>List site packages:</p>

<pre><code>$ lssitepackages
</code></pre>

<p>Run a command in all virtualenvs under WORKON_HOME:</p>

<pre><code>$ allvirtualenv command with arguments
</code></pre>

<p>Change the current working directory to the site-packages of current virtualenv($VIRTUAL_ENV):</p>

<pre><code>$ cdsitepackages
</code></pre>

<p>Remove virtualenv:</p>

<pre><code>$ rmvirtualenv &lt;env_name&gt;
</code></pre>

<h1>Verification</h1>

<p>In a virtualenv, all python executables are in $WORKON_HOME.</p>

<pre><code>[lichao@lichao480:~] 
% workon 
env1 
env2 
proj1 
[lichao@lichao480:~] 
% which python 
/usr/bin/python 
[lichao@lichao480:~] 
% workon env1 
(env1)[lichao@lichao480:~] 
% which python 
/home/lichao/apps/virenv_home/env1/bin/python 
(env1)[lichao@lichao480:~] 
% workon env2 
(env2)[lichao@lichao480:~PROJECT_HOME/proj2] 
% which python 
/home/lichao/apps/virenv_home/env2/bin/python
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Virtualenv使用笔记]]></title>
    <link href="http://leetschau.github.io/blog/2011/02/18/151635/"/>
    <updated>2011-02-18T15:16:35+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/02/18/151635</id>
    <content type="html"><![CDATA[<p>以在沙箱中安装googlemaps(<a href="http://pypi.python.org/pypi/googlemaps/1.0.2">http://pypi.python.org/pypi/googlemaps/1.0.2</a>)为例说明如何用virtualenv隔离安装python第3方库
// 离线安装virtualenv(<a href="http://pypi.python.org/pypi/virtualenv">http://pypi.python.org/pypi/virtualenv</a>)：首先下载安装包(gz文件)，解压后运行：
F:\ghost\tempFiles\virtualenv-1.7.1.2>setup install
（无法找到setup？参考笔记：***）
// 生成沙箱
E:\Docs\PythonSandbox>virtualenv gmapenv
&hellip;
// 进入沙箱
E:\Docs\PythonSandbox>cd gmapenv\Script
（linux下是cd gmapenv/bin）
// 测试googlemaps是否已安装
E:\Docs\PythonSandbox\gmapenv\Script>python -c &ldquo;import googlemaps&rdquo;
（在Windows平台上用单引号会报错）
// 激活沙盒
E:\Docs\PythonSandbox\gmapenv\Script>activate
（实际上是在$PATH前面加上了当前路径，以保证安装的库放在当前路径下）
// 在线安装第3方库
(gmapenv) E:\Docs\PythonSandbox\gmapenv\Script>pip install googlemaps
// 验证测试googlemaps已安装
(gmapenv) E:\Docs\PythonSandbox\gmapenv\Script>python -c &ldquo;import googlemaps&rdquo;
// 卸载googlemaps
(gmapenv) E:\Docs\PythonSandbox\gmapenv\Script>pip uninstall googlemaps
// 退出沙盒：
(gmapenv) E:\Docs\PythonSandbox\gmapenv\Script>deactivate
注：当不能在线安装时：首先进入隔离环境activate，当安装包是zip格式文件（exe,gz,egg），用easy_install installer_file_name.ext（如aa.exe, bb.gz, cc.egg）的方法安装（参考<a href="http://stackoverflow.com/questions/3271590/can-i-install-python-windows-packages-into-virtualenvs%EF%BC%89%EF%BC%9B%E5%AF%B9%E4%BA%8Emsi%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%E8%BF%98%E6%B2%A1%E6%9C%89%E6%89%BE%E5%88%B0%E5%AE%89%E8%A3%85%E5%9C%A8%E9%9A%94%E7%A6%BB%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%88%E6%89%80%E4%BB%A5%E6%9C%80%E5%A5%BD%E8%BF%98%E6%98%AF%E5%9C%A8%E7%BA%BF%E5%AE%89%E8%A3%85%EF%BC%89%EF%BC%9B">http://stackoverflow.com/questions/3271590/can-i-install-python-windows-packages-into-virtualenvs%EF%BC%89%EF%BC%9B%E5%AF%B9%E4%BA%8Emsi%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%E8%BF%98%E6%B2%A1%E6%9C%89%E6%89%BE%E5%88%B0%E5%AE%89%E8%A3%85%E5%9C%A8%E9%9A%94%E7%A6%BB%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%88%E6%89%80%E4%BB%A5%E6%9C%80%E5%A5%BD%E8%BF%98%E6%98%AF%E5%9C%A8%E7%BA%BF%E5%AE%89%E8%A3%85%EF%BC%89%EF%BC%9B</a></p>

<p>注2：activate只是将隔离环境的python.exe放在了$PATH的最前面，这样安装库时会安装在隔离环境的site-packages里；</p>

<p>注3：需要卸载一个隔离环境时只要删除文件夹就OK了；</p>

<p>主要参考 <a href="http://wiki.pylonshq.com/display/pylonscookbook/Using+a+Virtualenv+Sandbox">http://wiki.pylonshq.com/display/pylonscookbook/Using+a+Virtualenv+Sandbox</a> 中的windows部分。</p>
]]></content>
  </entry>
  
</feed>
