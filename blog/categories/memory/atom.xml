<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Memory | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/memory/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-10-03T10:34:30+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java Memory Schedule]]></title>
    <link href="http://leetschau.github.io/blog/2014/04/04/102033/"/>
    <updated>2014-04-04T10:20:33+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/04/04/102033</id>
    <content type="html"><![CDATA[<p>Test program (TestFreeMemory.java):</p>

<pre><code>public class TestFreeMemory {
    public static void main(String[] args){
        long maxMem = Runtime.getRuntime().maxMemory()/(1024*1024);
        System.out.println("Max Mem: " + maxMem);
        long freeMem = Runtime.getRuntime().freeMemory()/(1024*1024);
        System.out.println("Free Mem: " + freeMem);
        long totalMem = Runtime.getRuntime().totalMemory()/(1024*1024);
        System.out.println("Total Mem: " + totalMem);
    }
}
</code></pre>

<p>$ javac TestFreeMemory.java
$ java -Xms32m -Xmx500m TestFreeMemory
Max Mem: 444
Free Mem: 30
Total Mem: 30</p>

<p>$ java -Xms64m -Xmx500m TestFreeMemory
Max Mem: 444
Free Mem: 61
Total Mem: 61</p>

<p>$ java -Xms64m -Xmx1024m TestFreeMemory
Max Mem: 910
Free Mem: 61
Total Mem: 61</p>

<p>$ java -Xms32m -Xmx2048m TestFreeMemory
Max Mem: 1820
Free Mem: 30
Total Mem: 30</p>

<p>You can see (444/500)=(910/1024)=(1820/2048), so Runtime.getRuntime().maxMemory() is determined by &ldquo;-Xmx&rdquo;, which presents the upper limit of java process. The Runtime.getRuntime().totalMemory() is the initial memory capacity, which is determined by &ldquo;-Xms&rdquo; , it will grow when needed by program, until to &ldquo;-Xmx&rdquo;.</p>

<p>$ java -Xms32m -Xmx20480m TestFreeMemory
Max Mem: 18204
Free Mem: 30
Total Mem: 30</p>

<p>$ free -m
             total       used       free     shared    buffers     cached
Mem:         15937      15759        178          0        248       3068
-/+ buffers/cache:      12443       3494
Swap:         8039        641       7398</p>

<p>The upper limit of physical memory is 15GB, while I declared 20GB max memory for java process. This shows that the &ldquo;-Xmx&rdquo; is a <strong>nominal</strong> value, which means java won&rsquo;t check its realizability when startup.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Linux Distro System Memory Cost]]></title>
    <link href="http://leetschau.github.io/blog/2014/03/28/085154/"/>
    <updated>2014-03-28T08:51:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/03/28/085154</id>
    <content type="html"><![CDATA[<p>The 3 numbers after the distro name is: used memory, free memory and used percent(= used/(used + free)).</p>

<p>Scientific Linux Gnome 64bit:   286 1560 15.49
CentOS 6.4 Gnome 64bit:         281 1565 15.22
Mint 14 Xfce 64bit:             249 1596 13.50
openSUSE13 Gnome 64bit :        454 1392 24.59
openSUSE12 KDE 64bit:           404 1442 21.89</p>

<p>You can see Mint Xfce has smallest memory cost, while openSUSE has biggest.</p>
]]></content>
  </entry>
  
</feed>
