<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jar | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/jar/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-05-26T17:47:26+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Build Executable Jar in Command Line]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/23/180824/"/>
    <updated>2014-12-23T18:08:24+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/23/180824</id>
    <content type="html"><![CDATA[<p>Build a executable jar file using external jars:</p>

<pre><code>$ find .
./Mod1.java
./mf
./lib
./lib/commons-io-2.4.jar

$ cat Mod1.java
import org.apache.commons.io.FileUtils;
import java.io.File;

public class Mod1 {
  public static void main (String[] args) {
    String[] scriptExt = new String[] { "scala" };
    System.out.println("List all scala files: " + FileUtils.listFiles(new File("/home/chad/docs/tmp"), scriptExt, false));
  }
}

$ cat mf
Class-Path: lib/commons-io-2.4.jar
Main-Class: Mod1
$ javac -cp lib/* Mod1.java
$ jar cfm pkg.jar mf Mod1.class
$ java -jar pkg.jar
List all scala files: [/home/chad/docs/tmp/sf2.scala, /home/chad/docs/tmp/lookup.scala, /home/chad/docs/tmp/spark-filter.scala, /home/chad/docs/tmp/hw.scala, /home/chad/docs/tmp/newDel.scala, /home/chad/docs/tmp/scalaTime.scala, /home/chad/docs/tmp/sf3.scala]
</code></pre>

<p>Note that classpath wildcard can&rsquo;t be used in manifest file (here is mf), which means &ldquo;Class-Path: lib/*&rdquo; doesn&rsquo;t work.
See <a href="http://www.ibm.com/developerworks/library/j-5things6/">5 things you didn&rsquo;t know about &hellip; JARs</a> for explanations.</p>

<p>The &ldquo;-cp&rdquo; option or &ldquo;CLASSPATH=&hellip;&rdquo; is invalid in <code>java -jar xxx.jar</code>.
So if you don&rsquo;t want to create manifest file by hand, run java program with <code>java -cp ... MainClass</code>:</p>

<pre><code>$ tree
.
├── com
│   └── boco
│       └── example
│           └── Example.java
└── lib
    └── commons-io-2.4.jar
4 directories, 2 files

$ cat com/boco/example/Example.java
package com.boco.example;

import org.apache.commons.io.FileUtils;
import java.io.File;
import java.util.Collection;
import org.apache.commons.io.filefilter.DirectoryFileFilter;
import org.apache.commons.io.filefilter.TrueFileFilter;

public class Example {
  public static void main (String[] args) {
    Collection&lt;File&gt; found = FileUtils.listFiles(new File("."), TrueFileFilter.INSTANCE, DirectoryFileFilter.DIRECTORY);
    System.out.println("List files with apache-commons.FileUtils:");
    for (File f : found) {
      System.out.println(f);
    }
    System.out.println("--- OVER ---");
  }
}
$ javac -cp lib/commons-io-2.4.jar com/boco/example/Example.java
$ jar cf example.jar com
$ mv example.jar lib
$ tree
.
├── com
│   └── boco
│       └── example
│           ├── Example.class
│           └── Example.java
└── lib
    ├── commons-io-2.4.jar
    └── example.jar
4 directories, 4 files
$ java -cp "lib/*" com.boco.example.Example
List files with apache-commons.FileUtils:
./com/boco/example/Example.java
./com/boco/example/Example.class
./lib/example.jar
./lib/commons-io-2.4.jar
--- OVER ---
</code></pre>
]]></content>
  </entry>
  
</feed>
