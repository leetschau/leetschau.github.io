<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Kmp | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/kmp/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-08-01T16:20:42+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[基于字节比对的KMP字符串搜索算法]]></title>
    <link href="http://leetschau.github.io/blog/2013/02/28/210122/"/>
    <updated>2013-02-28T21:01:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/02/28/210122</id>
    <content type="html"><![CDATA[<p>package kmpclient;
import java.io.UnsupportedEncodingException;
import java.util.LinkedList;
public class ByteKMP {
 private static final int R = 255;
 private static final String DEFAULT_CHARSET = &ldquo;UTF-8&rdquo;;
 private final int[][] dfa;
 private final int patLen;
 private int curMatchPos = 0;
 public ByteKMP(byte[] pat) throws UnsupportedEncodingException {
  patLen = pat.length;
  // build DFA from pattern
  int M = pat.length;
  dfa = new int[R][M];
  dfa[pat[0] &amp; 0xff][0] = 1;
  for (int X = 0, j = 1; j &lt; M; j++) {
   for (int c = 0; c &lt; R; c++)
    dfa[c][j] = dfa[c][X]; // Copy mismatch cases.
   dfa[pat[j] &amp; 0xff][j] = j + 1; // Set match case.
   X = dfa[pat[j] &amp; 0xff][X]; // Update restart state.
  }
 }
 public int search(byte[] msg) {
  int M = patLen;
  int N = msg.length;
  int i, j;
  for (i = 0, j = curMatchPos; i &lt; N &amp;&amp; j &lt; M; i++) {
   j = dfa[msg[i] &amp; 0xff][j];
  }
  if (j == M) {
   curMatchPos = 0;
   return i - M; // found
  }
  curMatchPos = j;
  return N; // not found
 }
 public static void main(String[] args) throws UnsupportedEncodingException {
  int a = -27 % 255;
  testEnglishStr();
  testChineseStr();
 }
 private static void testChineseStr() throws UnsupportedEncodingException {
  LinkedList&lt;byte[]> msgs = new LinkedList&lt;byte[]>();
  msgs.offer(&ldquo;今天是个好日子&rdquo;.getBytes(DEFAULT_CHARSET));
  msgs.offer(&ldquo;厉害不?子= KM= KMP = 真厉害！&rdquo;.getBytes(DEFAULT_CHARSET));
  // msgs.offer(&ldquo;= KMP = 真厉害！&rdquo;.getBytes(DEFAULT_CHARSET));
  String pat = &ldquo;子= KM&rdquo;;
  // e5, ad, 90, &hellip; [-27, -83, -112, 61, 32, 75, 77]
  ByteKMP bkmp = new ByteKMP(pat.getBytes(DEFAULT_CHARSET));
  int pos = 9999;
  byte[] target = msgs.poll();
  while (target != null) {
   pos = bkmp.search(target);
   if (pos &lt; target.length) {
    break;
   }
   target = msgs.poll();
  }
  if (target == null) {
   System.out.println(&ldquo;cannot find &rdquo; + pat + &ldquo; in msgs.&rdquo;);
  } else {
   System.out.println(&ldquo;find pat at &rdquo; + pos + &ldquo; in &lt;&rdquo;
    + new String(target) + &ldquo;>&rdquo;);
  }
 }
 private static void testEnglishStr() throws UnsupportedEncodingException {
  LinkedList&lt;byte[]> msgs = new LinkedList&lt;byte[]>();
  msgs.offer(&ldquo;welcome lonely logoout&rdquo;.getBytes(DEFAULT_CHARSET));
  msgs.offer(&ldquo;to flog&rdquo;.getBytes(DEFAULT_CHARSET));
  msgs.offer(&ldquo;into a fog&rdquo;.getBytes(DEFAULT_CHARSET));
  String pat = &ldquo;a f&rdquo;;
  ByteKMP bkmp = new ByteKMP(pat.getBytes(DEFAULT_CHARSET));
  int pos = 9999;
  byte[] target = msgs.poll();
  while (target != null) {
   pos = bkmp.search(target);
   if (pos &lt; target.length) {
    break;
   }
   target = msgs.poll();
  }
  if (target == null) {
   System.out.println(&ldquo;cannot find &rdquo; + pat + &ldquo; in msgs.&rdquo;);
  } else {
   System.out.println(&ldquo;find pat at &rdquo; + pos + &ldquo; in &lt;&rdquo;
    + new String(target) + &ldquo;>&rdquo;);
  }
 }
}</p>
]]></content>
  </entry>
  
</feed>
