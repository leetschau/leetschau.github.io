<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mint | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/mint/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T15:03:30+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Take Screenshot With Shutter on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2015/04/22/145820/"/>
    <updated>2015-04-22T14:58:20+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/04/22/145820</id>
    <content type="html"><![CDATA[<h1>Install</h1>

<p>On Linux Mint:</p>

<pre><code>sudo aptitude install shutter libgoo-canvas-perl
</code></pre>

<p>the second one is for editing the screenshot.</p>

<p>On Ubuntu 14.04:</p>

<pre><code>sudo aptitude install shutter
</code></pre>

<h1>Usage</h1>

<p>Run <code>shutter</code> in dmenu, click &ldquo;Selection&rdquo; on toolbar.</p>

<p>Shutter is a multi-tab application, and save picture to disk automatically,
which is very convenient.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Vagrant-Created VMs on Linux Mint]]></title>
    <link href="http://leetschau.github.io/blog/2015/04/22/103439/"/>
    <updated>2015-04-22T10:34:39+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/04/22/103439</id>
    <content type="html"><![CDATA[<ol>
<li><p>After installation of Virtualbox,
specify the VM files location in VirutalBox:
[File -> Preferences -> General -> Default Machine Folder]
to &ldquo;$HOME/docs/vms&rdquo;;</p></li>
<li><p>Add <code>alias vb='VBoxManage'</code> into ~/.bash_aliases;</p></li>
<li><p>List all existing VMs: <code>vb list vms</code>;</p></li>
<li><p>List all running VMs: <code>vb list runningvms</code>;</p></li>
<li><p>Print the details of a VM: <code>vb showvminfo xxx</code>,
where xxx is one item name in output of <code>vb list vms</code>;</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Mint System Backup and Restore]]></title>
    <link href="http://leetschau.github.io/blog/2015/04/17/151844/"/>
    <updated>2015-04-17T15:18:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/04/17/151844</id>
    <content type="html"><![CDATA[<p>Use this note to build a development environment quickly on a fresh Ubuntu/Mint os.</p>

<h1>Packages</h1>

<p>First make sure <code>&lt;deb-url&gt;/dists/&lt;dist-name&gt;</code> of your distro exists.
To Ubuntu Trusty, it&rsquo;s <a href="http://mirrors.ustc.edu.cn/ubuntu/dists/trusty/main">http://mirrors.ustc.edu.cn/ubuntu/dists/trusty/main</a>
or universe, restricted, etc.
Then add the following lines to /etc/apt/sources.list:</p>

<pre><code>deb http://mirrors.ustc.edu.cn/ubuntu/ trusty main universe restricted multiverse
deb-src http://mirrors.ustc.edu.cn/ubuntu/ trusty main universe restricted multiverse
</code></pre>

<p>Next run <code>aptitude update</code> and install the following packages with <code>aptitude</code>:</p>

<pre><code>zsh git vim autojump curl tree tmux
</code></pre>

<p>The following packages are only needed on physical metal, not on virtual host:</p>

<pre><code>i3 i3status dmenu openssh-server parcellite udevil
</code></pre>

<p>where udevil is for USB management.</p>

<h1>Apps installed manually</h1>

<ul>
<li><p><a href="https://github.com/leetschau/dsnote">dsnote</a></p></li>
<li><p><a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a></p></li>
<li><p><a href="https://github.com/tpope/vim-pathogen">pathogen</a></p></li>
<li><p><a href="https://github.com/leetschau/sysClone">sysClone</a></p></li>
<li><p>Power management script: pm, see note <a href="http://leetschau.github.io/blog/2014/08/24/110909/">Build Working Environment With I3 and Mint</a></p></li>
</ul>


<h1>vim plugins</h1>

<ul>
<li><p><a href="https://github.com/plasticboy/vim-markdown">plasticboy/vim-markdown</a></p></li>
<li><p><a href="https://github.com/kien/ctrlp.vim">ctrlp</a></p></li>
</ul>


<h1>System configurations to be synchronized</h1>

<p>Prototype of <a href="https://github.com/leetschau/sysClone">sysClone</a>:</p>

<pre><code>backupConf() {
    rsync -av --update --ignore-missing-args $HOME/{.zshrc,.zshenv,.bash_aliases,.vimrc,.gitconfig,.tmux.conf,.oh-my-zsh/themes/lichao.zsh-theme,.xsessionrc} confs/
    rsync -av --update --ignore-missing-args $HOME/.i3/config confs/.i3.config
}

restoreConf() {
    rsync -av --update confs/{.zshrc,.zshenv,.bash_aliases,.vimrc,.gitconfig,.tmux.conf,.xsessionrc} $HOME
    rsync -av --update confs/lichao.zsh-theme $HOME/.oh-my-zsh/themes
    rsync -av --update confs/.i3.config $HOME/.i3/config
}
</code></pre>

<p>I use an array of tuples to combine above 2 scripts. For details of its methods in shell, see
<a href="http://www.cyberciti.biz/faq/bash-for-loop-array/">Bash For Loop Array: Iterate Through Array Values</a> and
<a href="http://stackoverflow.com/questions/9713104/loop-over-tuples-in-bash">http://stackoverflow.com/questions/9713104/loop-over-tuples-in-bash</a></p>

<h1>Firefox plugins</h1>

<ul>
<li><p>Downthemall</p></li>
<li><p>vimfx</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Connect to Wireless Network in Linux Mint Command Line]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/13/125635/"/>
    <updated>2014-12-13T12:56:35+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/13/125635</id>
    <content type="html"><![CDATA[<p>Show current network status of the computer: <code>nmcli c status</code>, <code>nmcli nm</code> and <code>nmcli d</code>;</p>

<p>List all available Wi-Fi access points: <code>nmcli dev wifi</code>;</p>

<p>Connect to a new (unconnected before) access point:
<code>nmcli dev wifi con "My SSID Name" password MyPassword iface wlan0</code>,
or use default interface: <code>nmcli dev wifi connect MySSIDName password MyPassword</code>,
replace &ldquo;wlan0&rdquo;, &ldquo;My ESSID Name&rdquo; and &ldquo;MyPassword&rdquo; with yours.</p>

<p>Turn off current connected wifi: <code>nmcli nm wifi off</code>.</p>

<p>Next time when connected this wifi, turn on with <code>nmcli nm wifi on</code>.</p>

<p>Other unverified versions:</p>

<pre><code>nmcli d wifi connect &lt;WiFi-ESSID&gt; password &lt;WiFi-Password&gt; iface wlan0
iwconfig wlan0 essid &lt;WiFi-ESSID&gt; key &lt;WiFi-Password&gt;
</code></pre>

<p>Note:</p>

<p><code>iwlist wlan0 scan|grep ESSID</code> only list the connected Wifi, instead of all available Wi-Fi access points.</p>

<p>Ref:</p>

<p><code>man nmcli</code>;</p>

<p><a href="http://askubuntu.com/questions/461825/connect-to-wifi-from-command-line">connect to wifi from command line</a>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dart Development on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2014/10/07/224855/"/>
    <updated>2014-10-07T22:48:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/10/07/224855</id>
    <content type="html"><![CDATA[<h1>Linux Mint 64bit</h1>

<p>Today I tried Dart official tutorial <a href="https://www.dartlang.org/codelabs/darrrt/">Avast, Ye Pirates: Write a Web App</a>. When I run dartium in &ldquo;Step 1: Run the skeleton app&rdquo;, I met the following errors:</p>

<blockquote><p>Could not launch browser - process terminated while trying to connect. Try closing and running Dartium instances.:
Dartium stdout: /home/xxx/Apps/dart/chromium/chrome:error while loading share libraries: libudev.so.0: cannot open shared object file: No such file or directory</p></blockquote>

<p>The official solution <a href="https://code.google.com/p/dart/wiki/PreparingYourMachine">PreparingYourMachine</a> on dart wiki is somewhat complicated.
For I&rsquo;ve installed Chrome, there is a simple way to resolve this problem:</p>

<pre><code>sudo ln -s /opt/google/chrome/libudev.so.0 /usr/lib/x86_64-linux-gnu/libudev.so.0
</code></pre>

<p>Verified on Linux Mint 17 x86_64.</p>

<p>Notes:</p>

<ul>
<li><p>I met a &ldquo;404 not found&rdquo; error when install libudev-dev with aptitude.</p></li>
<li><p>To install chrome, download google-chrome-stable_current_amd64.deb from <a href="https://www.google.com/chrome/">Chrome official website</a>.</p></li>
</ul>


<h1>ArchLinux</h1>

<p>Download Dart complete bundle (darteditor-linux-x64.zip) on<a href="https://www.dartlang.org/">Dart website</a>.
Extract it, and start dart editor with ./DartEditor.
However, when running a dart project with &ldquo;Run in dartium&rdquo; context menu, an &ldquo;libgconf.so.4 no exist&rdquo; error raises.
So we have to install dart sdk to provide this library file: <code>sudo pacman -S dart</code>.</p>

<p>You can also install dart-editor and dartium from AUR:</p>

<pre><code>yaourt -S dart-editor dartium-bin
</code></pre>

<p>But it&rsquo;s very slow.</p>
]]></content>
  </entry>
  
</feed>
