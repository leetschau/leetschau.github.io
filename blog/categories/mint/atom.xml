<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mint | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/mint/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-11-03T17:15:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dart Development on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2014/10/07/224855/"/>
    <updated>2014-10-07T22:48:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/10/07/224855</id>
    <content type="html"><![CDATA[<h1>Linux Mint 64bit</h1>

<p>Today I tried Dart official tutorial <a href="https://www.dartlang.org/codelabs/darrrt/">Avast, Ye Pirates: Write a Web App</a>. When I run dartium in &ldquo;Step 1: Run the skeleton app&rdquo;, I met the following errors:</p>

<blockquote><p>Could not launch browser - process terminated while trying to connect. Try closing and running Dartium instances.:
Dartium stdout: /home/xxx/Apps/dart/chromium/chrome:error while loading share libraries: libudev.so.0: cannot open shared object file: No such file or directory</p></blockquote>

<p>The official solution <a href="https://code.google.com/p/dart/wiki/PreparingYourMachine">PreparingYourMachine</a> on dart wiki is somewhat complicated.
For I&rsquo;ve installed Chrome, there is a simple way to resolve this problem:</p>

<pre><code>sudo ln -s /opt/google/chrome/libudev.so.0 /usr/lib/x86_64-linux-gnu/libudev.so.0
</code></pre>

<p>Verified on Linux Mint 17 x86_64.</p>

<p>Notes:</p>

<ul>
<li><p>I met a &ldquo;404 not found&rdquo; error when install libudev-dev with aptitude.</p></li>
<li><p>To install chrome, download google-chrome-stable_current_amd64.deb from <a href="https://www.google.com/chrome/">Chrome official website</a>.</p></li>
</ul>


<h1>ArchLinux</h1>

<p>Download Dart complete bundle (darteditor-linux-x64.zip) on<a href="https://www.dartlang.org/">Dart website</a>.
Extract it, and start dart editor with ./DartEditor.
However, when running a dart project with &ldquo;Run in dartium&rdquo; context menu, an &ldquo;libgconf.so.4 no exist&rdquo; error raises.
So we have to install dart sdk to provide this library file: <code>sudo pacman -S dart</code>.</p>

<p>You can also install dart-editor and dartium from AUR:</p>

<pre><code>yaourt -S dart-editor dartium-bin
</code></pre>

<p>But it&rsquo;s very slow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Config Environment Variables on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2014/10/06/094327/"/>
    <updated>2014-10-06T09:43:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/10/06/094327</id>
    <content type="html"><![CDATA[<h1>System-wide environment variables</h1>

<p>Add global environment variables in file <strong>/etc/environment</strong>.
This file is specifically meant for system-wide environment variable settings.
It is <strong>not</strong> a script file, but rather consists of assignment expressions, one per line:</p>

<pre><code>JAVA_HOME=/usr/lib/jvm/default-java
</code></pre>

<p>So do not add &ldquo;export&rdquo; before assignments. Variable expansion does <strong>not</strong> work in this file.</p>

<h1>User specific environment variables</h1>

<p>Add user level environment variables in file <strong>~/.zshenv</strong>. For example, to override system PATH:</p>

<pre><code>export PATH=$HOME/apps/spark-1.0.2-bin-hadoop2/bin:$PATH
</code></pre>

<h1>User aliases setup</h1>

<p>For bash there is a ~/.bash_aliases file, so we define aliases in this file, and load it in zsh with adding following codes into ~/.zshrc:</p>

<pre><code>if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi
</code></pre>

<p>Some example in ~/.bash_aliases:</p>

<pre><code>alias gst='git status'
alias dn='$HOME/apps/dsnote/donshell.sh'
</code></pre>

<p>Refs:</p>

<ul>
<li><p><a href="https://help.ubuntu.com/community/EnvironmentVariables">EnvironmentVariables on UBUNTU wiki</a>.</p></li>
<li><p><a href="https://wiki.archlinux.org/index.php/zsh">Zsh on ArchLinux Wiki</a>.</p></li>
<li><p><a href="http://unix.stackexchange.com/questions/71253/what-should-shouldnt-go-in-zshenv-zshrc-zlogin-zprofile-zlogout">What should/shouldn&rsquo;t go in .zshenv, .zshrc, .zlogin, .zprofile, .zlogout?</a>.</p></li>
<li><p><a href="http://stackoverflow.com/questions/663658/what-is-the-correct-target-for-the-java-home-envrionment-variable-for-a-linux-op">What is the correct target for the JAVA_HOME envrionment variable for a Linux OpenJDK debian-based distribution?</a>.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Restart WIFI on Mint]]></title>
    <link href="http://leetschau.github.io/blog/2014/10/04/112244/"/>
    <updated>2014-10-04T11:22:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/10/04/112244</id>
    <content type="html"><![CDATA[<p>On i3wm of Linux Mint, sometimes the wifi can&rsquo;t refresh automatically when available.
Use following commands to refresh wifi connection manually:
<code>
nmcli nm wifi off
nmcli nm wifi on
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Package Repository Management on Ubuntu and Mint]]></title>
    <link href="http://leetschau.github.io/blog/2014/09/09/163500/"/>
    <updated>2014-09-09T16:35:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/09/09/163500</id>
    <content type="html"><![CDATA[<ul>
<li><p>Add repository: &lsquo;sudo apt-add-repository ppa:kernel-ppa/ppa`</p></li>
<li><p>List all repositories: <code>ls /etc/apt/sources.list.d</code></p></li>
<li><p>Remove repository: <code>sudo apt-add-repository --remove ppa:kernel-ppa/ppa</code>.
If you can&rsquo;t get the ppa name, do it manually with <code>sudo rm /etc/apt/sources.list.d/theppa.list</code>.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Notes]]></title>
    <link href="http://leetschau.github.io/blog/2014/08/30/104928/"/>
    <updated>2014-08-30T10:49:28+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/08/30/104928</id>
    <content type="html"><![CDATA[<h1>Mint</h1>

<pre><code># sudo aptitude update
# sudo aptitude install docker.io aufs-tools cgroup-lite apparmor-utils
# sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker
# sudo sed -i '$acomplete -F _docker docker' /etc/bash_completion.d/docker.io
# docker run ubuntu:14.04 echo 'hello ubuntu'
# docker version
Client version: 0.9.1
Go version (client): go1.2.1
Git commit (client): 3600720
Server version: 0.9.1
Git commit (server): 3600720
Go version (server): go1.2.1
Last stable version: 1.2.0, please update docker
</code></pre>

<h1>ArchLinux</h1>

<p>Docker is only available on X86_64 repository so far.</p>

<pre><code># pacman -S docker
# systemctl enable docker
# systemctl start docker
# docker run ubuntu:14.04 echo 'hello world'
# docker run -i -t ubuntu:14.04 /bin/bash
# lsb_release -a
Distributor ID: Ubuntu
Description: Ubuntu 14.04.1 LTS
Release: 14.04
Codename: trusty
# exit
# docker version
Client version: 1.2.0
Go version (client): go1.3.1
OS/Arch (client): linux/amd64
Server version: 1.2.0
Server API version: 1.14
Go version (server): go1.3.1
</code></pre>

<p>So you can see at least for now Docker is much newer and easy to use on Arch than on Mint (Ubuntu).
If you install &ldquo;tree&rdquo; with apt-get in the container, logout and relogin, you will find the &ldquo;tree&rdquo; command disappeared.</p>
]]></content>
  </entry>
  
</feed>
