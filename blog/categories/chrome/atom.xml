<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Chrome | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/chrome/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T15:03:30+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Note About Rest Client]]></title>
    <link href="http://leetschau.github.io/blog/2016/04/09/204200/"/>
    <updated>2016-04-09T20:42:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/04/09/204200</id>
    <content type="html"><![CDATA[<h1>httpie + jq</h1>

<p><a href="https://github.com/jkbrzt/httpie">httpie</a> + <a href="https://stedolan.github.io/jq/">jq</a></p>

<p>前者是curl的增强版，后者用来处理httpie返回的json结果。</p>

<pre><code>http -b api.newfairs.com/Fair/_search query:='{ "match": { "nameZHCN": "中国上海国际栅栏护栏展览会暨研讨会" } }' size=5 fields:='["nameZHCN"]'
http -b api.newfairs.com/Fair/_search query:='{ "match": { "nameZHCN": "中国上海国际栅栏护栏展览会暨研讨会" } }' size=5 | jq '.hits.total'
http -b api.newfairs.com/Fair/_search query:='{ "match": { "nameZHCN": "中国上海国际栅栏护栏展览会暨研讨会" } }' size=5 | jq '.hits.hits[]._source.nameZHCN'
http -b api.newfairs.com/Fair/_search query:='{ "query": { "match": { "_id": "Ao3Ati9dvWBerBrn8" } } }' | jq '.hits.hits[]._source.nameZHCN'

http -b POST http://api.newfairs.com/Fair/_search query:='{"query":{"bool":{"must":[{"query_string":{"query":"五金机械"}}]}}}'|jq '.hits.hits[]._source.recurrence[].timeStart'   
</code></pre>

<p>-b 代表只显示response的body，不显示head，以方便后续jq进行下一步处理，
中括号代表array，例如<code>jq '.hits.hits[0]'</code>表示只显示第一个结果，
hits[]代表返回数组里的所有结果。</p>

<p>这二者结合fzf，可以实现Postman/Insomnia这类GUI工具的功能。</p>

<h1>Insomnia</h1>

<p><a href="http://insomnia.rest/">Insomnia</a>: Chrome App.</p>

<h2>Pros</h2>

<ul>
<li><p>Request和Response窗口是左右排列的，且宽度可以调节；</p></li>
<li><p>分级管理Request: Workspace -> Group -> Request，
只能同时打开一个Workspace，比Postman更整洁；</p></li>
<li><p>良好的快捷键支持，request body和环境变量编辑窗口中可以使用vi编辑模式；</p></li>
<li><p>可以为每个Workspace定义环境变量，然后在url中使用这些环境变量，见下面的演示；</p></li>
<li><p>按名称搜索request: 默认快捷键Ctrl-P;</p></li>
</ul>


<h2>Cons</h2>

<ul>
<li>没有云同步，只能本地import/export;</li>
</ul>


<h1>Postman</h1>

<p><a href="https://www.getpostman.com/">Postman</a>: Chrome App.</p>

<h2>Pros</h2>

<ul>
<li><p>分级管理request: Collection -> Folder -> Request，可以方便地搜索；
Collection实际就是高一级的Folder，当request数量多时，request面板会比较凌乱；</p></li>
<li><p>可以同步到云端，在不同机器上方便地同步；</p></li>
</ul>


<h2>Cons</h2>

<p>Request和Response窗口是上下排列的，当调试Post方法时，
打开的Body窗体基本占满了整个屏幕，而且是最小高度，不能再减小，
导致每次看response内容都要使用滚轮，非常不方便。</p>

<h1>Discussion</h1>

<h2>Insomnia的环境变量</h2>

<p>例如定义下面的环境变量：</p>

<pre><code>{
    "api_url": "http://api.newfairs.com",
    "inner_url": "http://192.168.100.24:9200/"
}
</code></pre>

<p>在request的url栏里可以这样定义url: <code>{{api_url}}/Fair/_search</code>，
点击request名称后面的三角图标并选择"Export as cURL"，可以看到url被替换成了
<code>http://api.newfairs.com/Fair/_search</code>.</p>

<h2>其他类似工具</h2>

<p>Firefox插件：Poster, RESTED, REST Easy, RESTClient.
前三者都不具备多Request管理功能，无法保存多个Request.
RESTClient可以定义favorite，但没有单独的窗体，查看不方便。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Postman as the RESTful Tools]]></title>
    <link href="http://leetschau.github.io/blog/2015/11/22/225751/"/>
    <updated>2015-11-22T22:57:51+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/11/22/225751</id>
    <content type="html"><![CDATA[<p>Find <a href="https://chrome.google.com/webstore/search/postman">Postman</a> in chrome web store.
Install it.
Open &ldquo;chrome://apps&rdquo; in chrome, click Postman&rsquo;s icon.</p>

<p>That&rsquo;s it.</p>

<p>To send a post with Postman,</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clear Chrome DNS Cache]]></title>
    <link href="http://leetschau.github.io/blog/2015/11/20/104508/"/>
    <updated>2015-11-20T10:45:08+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/11/20/104508</id>
    <content type="html"><![CDATA[<p>Problem:
When open &ldquo;cms.nzw.com&rdquo; with Chrome, it always jump to &ldquo;localhost&rdquo;.
But open the same address in Firefox, it works good.</p>

<p>Possible reason:
Chrome cache some DNS or sockets information, which should be cleaned.</p>

<p>Solution:
Open &ldquo;chrome://net-internals/#dns&rdquo; in Chrome,
click &ldquo;Clear host cache&rdquo;.
Open &ldquo;chrome://net-internals/#sockets&rdquo;,
click &ldquo;Close idle sockets&rdquo; and &ldquo;Flush socket pools&rdquo;.
Restart Chrome.</p>

<p>Ref: <a href="http://www.howtogeek.com/197804/how-to-clear-the-google-chrome-dns-cache-on-windows/">How to Clear the Google Chrome DNS cache on Windows</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Translate English Words in Browser and Console]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/12/085417/"/>
    <updated>2015-09-12T08:54:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/12/085417</id>
    <content type="html"><![CDATA[<p>Everytime I want to get the meaning of a english word,
I have to copy the word, open dict.cn,
paste the word into the box and get the meaning, which is boring.
Here we demonstrate with the word &ldquo;spoiler&rdquo;.</p>

<h1>Chrome</h1>

<p>Right click in Chrome&rsquo;s address bar, and select &ldquo;Edit search engines&rdquo;.
Find &ldquo;dict.cn&rdquo;, set its title to &ldquo;dict.cn&rdquo; (in the 1st column),
set the shortcut name to &ldquo;dc&rdquo; (the 2nd column, whose origin value is &ldquo;dict.cn&rdquo;),
remain the command as <code>http://dict.cn/%s</code> (in the 3rd column).</p>

<p>Now input &ldquo;dc&rdquo; in address bar and press Space key,
the address bar title is now &ldquo;Search Dict.CN&rdquo;, and input &ldquo;spoiler&rdquo;.</p>

<p>BTW:
With the same method, define Google with shortcut &ldquo;gg&rdquo; and
command &ldquo;<a href="https://www.google.com/search?q=%s">https://www.google.com/search?q=%s</a>&rdquo;, and press &ldquo;Make default&rdquo;.
Now input a word in address bar and press Enter,
you will get the search result from Google.</p>

<h1>Console</h1>

<p>Install <code>ici</code> with <code>sudo pip install ici</code>, run it with <code>ici spoiler</code>.</p>

<h1>Firefox</h1>

<p>While there&rsquo;re some google translate extensions of firefox,
but they are slow and not very complete.
For example: the word meaning of &ldquo;spoiler&rdquo; in
&ldquo;This synopsis may contain spoilers.&rdquo; on
page <a href="http://www.imdb.com/title/tt0209144/synopsis">Synopsis for Memento</a>.
So I have to build my own translate extension based on dict.cn.</p>

<h2>Steps</h2>

<ol>
<li><p>Install Greasemonkey extension in Firefox.</p></li>
<li><p>Build a new script with the following codes.</p></li>
<li><p>Select some text and press &ldquo;\&rdquo; key.</p>

<p> // ==UserScript==
 // @name        TranslateIt
 // @namespace   LeoScript
 // @include     *
 // @version     1
 // @grant       none
 // ==/UserScript==</p>

<p> // document.addEventListener(&lsquo;mouseup&rsquo;, getSel, false);
 document.addEventListener(&lsquo;keypress&rsquo;, transIt, false);</p>

<p> function transIt(e) {
   // console.log(e.key);
   if (e.key !== &lsquo;\&rsquo;){ return; }
   var sel = document.getSelection().toString();
   if (sel) { window.open(&lsquo;<a href="http://dict.cn/">http://dict.cn/</a>&rsquo; + sel); }
 }</p></li>
</ol>


<p>Sometimes the popuped windows will be blocked by the browser.
Add the website into the whitelist of the blocked sites.</p>

<p>To debug the script, modify and save the script,
reload the web page, and test the script.</p>

<h2>References:</h2>

<p><a href="http://hayageek.com/greasemonkey-tutorial/#install-greasemonkey">Greasemonkey Tutorial for Beginners</a></p>

<p>Get selected text:</p>

<p><a href="http://stackoverflow.com/questions/3260926/greasemonkey-addeventlistener-questions">greasemonkey: addEventListener questions</a></p>

<p><a href="http://www.w3schools.com/jsref/met_document_addeventlistener.asp">HTML DOM addEventListener() Method</a></p>

<p>Test if ctrl or alt key is pressed on clicking:</p>

<p><a href="http://stackoverflow.com/questions/6806271/javascript-check-if-ctrl-button-was-pressed">JavaScript: Check if CTRL button was pressed</a></p>

<p>search &lsquo;altKey&rsquo; in <a href="http://www.w3schools.com/jsref/dom_obj_event.asp">HTML DOM Events</a></p>

<p><a href="http://stackoverflow.com/questions/4907843/open-a-url-in-a-new-tab-using-javascript">Open a URL in a new tab using JavaScript</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding SSL Certificates to Google Chrome on Linux Mint]]></title>
    <link href="http://leetschau.github.io/blog/2013/10/31/095741/"/>
    <updated>2013-10-31T09:57:41+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/10/31/095741</id>
    <content type="html"><![CDATA[<p>To resolve the ssl certificate error when using goagent with google chrome, run following commands:</p>

<p>$ sudo apt-get install libnss3-tools</p>

<p>$ cd $GOAGENT_HOME/local</p>

<p>$ certutil -d sql:$HOME/.pki/nssdb -A -t &ldquo;C,,&rdquo; -n GoAgent -i &lsquo;CA.crt&rsquo;</p>

<p>Note: for Fedora, the first command is:</p>

<p> sudo yum install nss-tools</p>
]]></content>
  </entry>
  
</feed>
