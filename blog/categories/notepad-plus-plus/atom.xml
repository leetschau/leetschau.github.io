<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Notepad++ | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/notepad-plus-plus/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-09-20T21:23:24+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[基于Notepad++的Django开发环境]]></title>
    <link href="http://leetschau.github.io/blog/2012/05/25/092525/"/>
    <updated>2012-05-25T09:25:25+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/05/25/092525</id>
    <content type="html"><![CDATA[<p>Notepad++(np++) 6.1.3, plugin: TagsView &amp; Light Explorer</p>

<p>font: consolas 12</p>

<p>color theme: zenburn</p>

<p>hotkey: activate tagview: alt-g; light explorer: alt-a; editor: not find yet</p>

<p>关于np++的配置系统，参考 NpWiki++ 上的 Notepad++&rsquo;s configuration files 一节。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Notepad++构建轻量级Scala开发环境]]></title>
    <link href="http://leetschau.github.io/blog/2011/10/11/144518/"/>
    <updated>2011-10-11T14:45:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/10/11/144518</id>
    <content type="html"><![CDATA[<p>构建过程类似于笔记“ 基于Notepad++和Tcc的C语言开发环境 ”，只是把tcc换成 scala-2.9.1，从Scala官网下载最新版 scala-2.9.1.final.zip，解压后形成目录f:\Software\scala-2.9.1.final。</p>

<p> 【插件->NppExec->Execute】打开Execute窗口，输入：</p>

<p> NPP_SAVE</p>

<p> cd &ldquo;$(CURRENT_DIRECTORY)&rdquo;
&ldquo;f:\Software\scala-2.9.1.final\bin\scalac.bat&rdquo; &ldquo;$(FULL_CURRENT_PATH)&rdquo;
&ldquo;f:\Software\scala-2.9.1.final\bin\scala.bat&rdquo; &ldquo;$(NAME_PART)&rdquo;</p>

<p> 点Save保存此脚本为”Run Scala“；第一行脚本表示保存文件，第二行将当前目录设为源代码所在目录，第三行脚本编译scala源文件，第4行运行编译后的class文件；</p>

<p> 后面的给这个脚本添加快捷键部分与设置tcc相同，不赘述。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于Tcc的C语言编译器]]></title>
    <link href="http://leetschau.github.io/blog/2011/07/21/154602/"/>
    <updated>2011-07-21T15:46:02+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/07/21/154602</id>
    <content type="html"><![CDATA[<p><a href="http://bellard.org/tcc">TCC: Tiny C Compiler</a>是一款Windows平台上的迷你型C编译器，适合于学习算法时编译、演示一些简单的C语言程序，下面分别是基于vim和Notepad++的两种开发环境搭建方法。</p>

<h1>安装TCC</h1>

<p>TCC是绿色软件，下载软件包（tcc-0.9.25-win32-bin.zip）后解压即可运行，假设解压到"d:\apps\tcc"目录下。</p>

<h1>vim</h1>

<ol>
<li>将以下程序保存到hello.c文件中。</li>
</ol>


<p> #include &lt;stdio.h>
 main()
 {
  printf(&ldquo;hello, world!!!\n&rdquo;);
 }</p>

<ol>
<li>运行":!d:\Apps\tcc\tcc.exe -run %"</li>
</ol>


<h1>Notepad++</h1>

<p>需要的软件：<a href="http://notepad-plus-plus.org/">Notepad++</a> v5.8.3 绿色版和它的NppExec插件；</p>

<h2>编译器</h2>

<p>下载tcc的windows压缩包后解压到一个目录下，例如”f:\Software\tcc“；</p>

<h2>语法高亮</h2>

<p>Notepad++内置了对C语言的语法高亮，如果在“语言”菜单下没有"C"语言项，在【设置->首选项->语言】下从”禁用项“列表中把C放到”启用项“列表中即可。</p>

<h2>命令行输出</h2>

<p>安装NppExec：下载NppExec后解压到npp安装目录的plugins文件夹下，例如我的npp绿色版路径是f:\Software\Notepad++583，则解压后目录结构为f:\Software\Notepad++583\plugins\NppExec.dll和f:\Software\Notepad++583\plugins\NppExec（下面是几个.h文件），压缩包doc目录下文件放在f:\Software\Notepad++583\plugins\doc下。启动Npp后可看到【插件->NppExec】菜单，【插件->NppExec->Show Console Dialog】打开命令输出窗口，可用【插件->NppExec->Change Console Font】修改输出窗口的字体和字号；</p>

<h2>定义运行脚本</h2>

<p> 【插件->NppExec->Execute】打开Execute窗口，输入</p>

<p> NPP_SAVE
 &ldquo;f:\Software\tcc\tcc.exe&rdquo; &ldquo;$(FULL_CURRENT_PATH)&rdquo; -run</p>

<p> 点Save保存此脚本为”Run C“；第一行脚本表示保存文件，第二行脚本使用了tcc.exe的-run参数，将编译、连接、运行一次性搞定；</p>

<h2>定义菜单项</h2>

<p> 【插件->NppExec->Advanced Options】中选择"Run C"，然后勾选"Place to the Macro submenu"；</p>

<p> 绑定快捷键</p>

<p> 【设置->管理快捷键】的"Macros"或者"Plugins commands"下面找到"Run C"，为其设置一个快捷键；</p>

<h2>编译运行</h2>

<p>Npp中打开前述hello.c文件，【宏->Run C】或者使用前面设置的快捷键启动Run C脚本，在Console窗口中可以看到程序的输出。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notepad++手工配色]]></title>
    <link href="http://leetschau.github.io/blog/2011/06/23/114908/"/>
    <updated>2011-06-23T11:49:08+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/06/23/114908</id>
    <content type="html"><![CDATA[<p>Notepad++的手工配色相对比较智能，对于其内置的语言，在【设置->语言格式设置】中进行，【选择主题】中可以选择不同的配色主题，确定主题后，在【语言】中选择要修改的语言，在【格式名称】中选择修改那种元素，然后修改颜色和字体；对于非内置语言，则需要使用其内置的"User Defined Languages"对话框；对于一种新语言，首先从网上下载其语法高亮模板，然后再根据自己的要求使用这个对话框修改，直到满意为止。具体来说：</p>

<ol>
<li><p>下载语法高亮文件（xml文件），如果notepad++当前文件夹下没有 userDefineLang.xml 这个文件，将下载的文件放在此文件夹（与notepad++.exe同目录）下，并命名为userDefineLang.xml，如果已经有这个文件，则把下载内容追加到 userDefineLang.xml 末尾；</p></li>
<li><p>启动Notepad++，【视图->自定义语言对话框】打开"User Defined Languages"对话框，在【自定义语言】下应该有刚才添加的语言；</p></li>
<li><p>如果没有，用【Import】按钮导入下载的XML文件；</p></li>
<li><p>对不满意的配色和内容进行修改，然后用【Export】导出，以备将来再次导入；</p></li>
</ol>


<p>修改的方法参见帮助文档的"User Defined Languages"一节，简单地说，能够定制的特性有：普通文本的前/背景色，关键字集合的内容和前/背景色，代码折叠的开始、结束标志，注释的样式和颜色，数字的颜色，运算符的内容和颜色，以上所有内容的字体、字号，转义符号的定义（避免"aa\&ldquo;bb"被解析成一对半字符串）等；</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notepad++宏编辑]]></title>
    <link href="http://leetschau.github.io/blog/2011/03/07/094341/"/>
    <updated>2011-03-07T09:43:41+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/03/07/094341</id>
    <content type="html"><![CDATA[<p>Notepad++没有提供对录制宏的编辑功能（当前使用版本为5.8.3），但手工完全可以进行编辑。首先，Notepad++编辑器中录制的宏实际保存在${INSTALL_FOLDER}/ shortcuts.xml 中。</p>
]]></content>
  </entry>
  
</feed>
