<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ahk | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/ahk/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-06-01T12:52:39+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Autohotkey模拟两台客户机的并发访问事件]]></title>
    <link href="http://leetschau.github.io/blog/2013/03/02/105214/"/>
    <updated>2013-03-02T10:52:14+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/03/02/105214</id>
    <content type="html"><![CDATA[<p>现在需要从主机113和747上同时向服务器47发送指令"cat bigMsg"，以观察47对并发请求的处理能力以及网络传输带宽，可以在pc上分别登录到113和747上，然后分别输入该指令，但手工顺序输入毕竟时间间隔比较大，如果bigMsg不够大，手工操作在47上就变成顺序执行了，如果对开始时间点的要求不那么严格，可以用Autohotkey脚本实现模拟的并发访问，下面演示了用ahk脚本实现的在两台主机上同时运行top指令，8秒后分别发送q退出top界面，以证明ahk脚本确实能够起到“非阻塞发送两条指令”的效果。</p>

<ol>
<li><p>类似于手工操作，用Kitty登录113和747，假设两个窗口的标题分别为"lichao@pwm"和"godu@goduserver"；</p></li>
<li><p>建立ahk脚本（分别在两个主机上运行）：</p></li>
</ol>


<p> SetTitleMatchMode, 2
 WinActivate, godu
 SendInput, top{enter}
 WinActivate, lichao
 SendInput, top{enter}
 Sleep, 8000
 WinActivate, godu
 SendInput, q
 WinActivate, lichao
 SendInput, q
1. 在vim窗口里运行":silent !%&ldquo;执行这个脚本，与直接运行&rdquo;!%&ldquo;相比，silent指令不会出现一个dos窗口，然后要求用户看回车返回vim窗口（参考<a href="http://vim.wikia.com/wiki/Avoiding_the_%22Hit_ENTER_to_continue%22_prompts%EF%BC%89%E3%80%82">http://vim.wikia.com/wiki/Avoiding_the_%22Hit_ENTER_to_continue%22_prompts%EF%BC%89%E3%80%82</a></p>
]]></content>
  </entry>
  
</feed>
