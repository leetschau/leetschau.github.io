<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Plugin | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/plugin/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-10-05T15:23:42+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Git in Vim With Fugitive]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/05/110947/"/>
    <updated>2015-10-05T11:09:47+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/05/110947</id>
    <content type="html"><![CDATA[<h1>Install</h1>

<p>Add <code>Plugin 'tpope/vim-fugitive'</code> into ~/.vimrc
and run <code>vim +PluginClean +PluginInstall +qa</code>.</p>

<h1>Get Help</h1>

<p>:help fugitive</p>

<h1>Frequently Use Commands</h1>

<table>
<thead>
<tr>
<th>Action Name </th>
<th> Meaning                </th>
<th> Close Window with</th>
</tr>
</thead>
<tbody>
<tr>
<td>:Gblame     </td>
<td> show info of each line </td>
<td> q</td>
</tr>
<tr>
<td>:Gdiff      </td>
<td> show diff in vim       </td>
<td> :q</td>
</tr>
<tr>
<td>:Gstatus    </td>
<td> show git status        </td>
<td> q</td>
</tr>
</tbody>
</table>


<p>In &ldquo;:Gstatus&rdquo; window, you can use &ldquo;-&rdquo; to add a file in/out stage area,
use &ldquo;cc&rdquo; to commit, use &ldquo;g?&rdquo; to see all available actions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Vim Mode for Eclipse With Vrapper]]></title>
    <link href="http://leetschau.github.io/blog/2014/04/23/113830/"/>
    <updated>2014-04-23T11:38:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/04/23/113830</id>
    <content type="html"><![CDATA[<h1>Installation</h1>

<p>Install vrapper 0.42.0 in market place of eclipse.</p>

<h2>Install with proxy (in Linux)</h2>

<ol>
<li><p>Run commands:</p>

<p> $ cd $ECLIPSE_HOME
 $ export http_proxy=<a href="http://127.0.0.1:8087">http://127.0.0.1:8087</a>
 $ export https_proxy=<a href="http://127.0.0.1:8087">http://127.0.0.1:8087</a>
 $ ./eclipse</p></li>
<li><p>After eclipse startup, install vrapper as usual. The proxy will work for eclipse automatically. Uninstall vrapper and other plugin in main menu of eclipse -> Help -> About Eclipse -> Installation Details.</p></li>
</ol>


<h1>Usage</h1>

<p>Ref: <a href="http://vrapper.sourceforge.net/documentation">Vrapper Documentation</a></p>

<ul>
<li>Configuration file: ~/.vrapperrc</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Development With Vim on Multiple Layers Project]]></title>
    <link href="http://leetschau.github.io/blog/2013/06/28/091322/"/>
    <updated>2013-06-28T09:13:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/06/28/091322</id>
    <content type="html"><![CDATA[<h1>ctrlp</h1>

<p>Install <a href="https://github.com/kien/ctrlp.vim">ctrlp</a> with vundle:</p>

<pre><code>Plugin 'ctrlp.vim'
</code></pre>

<p>It is more powerful, faster than FuzzyFinder, and easier to install and use.</p>

<p>Use <Ctrl-P> to search files recursively under current folder.</p>

<p>In the search results window, you have 2 ways to open the selected file:</p>

<ul>
<li><p>press <Enter> to open file in current window,</p></li>
<li><p>press <Ctrl-O> to choose how to open the file, for example &ldquo;h&rdquo; to open it in a new horizontal window.</p></li>
</ul>


<h1>FuzzyFinder</h1>

<p><a href="https://github.com/vim-scripts/FuzzyFinder">FuzzyFinder</a> (created by Takeshi NISHIDA)
is a powerful search tool like &ldquo;go to everything&rdquo; in sublime text 2.
Command-T is a similar tool. But it need ruby and have to compile it.</p>

<p>L9 plugin (also created by Takeshi NISHIDA) is needed to use this plugin.</p>

<h2>Search and Open File</h2>

<h3>CoverageFile Mode</h3>

<p>This mode is invoked by command :FufCoverageFile.
It includes all files in current working directory and subdirectories.
Note it only matches characters in one name.</p>

<p>Say you have a file at ./abc/def/stu.xyz,
you can find it with &ldquo;suyz&rdquo;, &ldquo;sxyz&rdquo; or any combinations of characters in &ldquo;stu.xyz&rdquo;.
But &ldquo;ads&rdquo; and &ldquo;des&rdquo; will match nothing.
You can find it with partial name, in this case &ldquo;d/s&rdquo; will get stu.xyz.</p>

<p>Add <code>nnoremap &lt;C-o&gt; :FufCoverageFile&lt;CR&gt;</code> in ~/.vimrc to map ctrl-o to invoke Coverage File command,
then input the filename pattern, then press <CR>.
Cancel it with <ESC> key.</p>

<h3>File Mode</h3>

<p>This mode is invoked by command :FufFile.
It only includes files in current working directory, without files in subdirectories (so not very useful).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Vim Plugins With Pathogen]]></title>
    <link href="http://leetschau.github.io/blog/2013/06/20/164230/"/>
    <updated>2013-06-20T16:42:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/06/20/164230</id>
    <content type="html"><![CDATA[<h1>Install Pathogen</h1>

<ol>
<li><p>Download pathogen.vim to ~/.vim/autoload;</p></li>
<li><p>Add following lines to ~/.vimrc:</p>

<p> syntax on
 set et
 execute pathogen#infect()
 call pathogen#helptags()
 filetype on</p></li>
<li><p>mkdir ~/.vim/bundle</p></li>
</ol>


<h1>Install Plugin</h1>

<p>Unzip the archive file of the plugin under ~/.vim/bundle like this (NerdTree Plugin in this case):</p>

<p>bundle
<code>-- nerdtree
 |-- doc
 | |-- NERD_tree.txt
 |</code>&ndash; tags
 |&ndash; nerdtree_plugin
 | |&ndash; exec_menuitem.vim
 | <code>-- fs_menu.vim
 |-- plugin
 |</code>&ndash; NERD_tree.vim
 <code>-- syntax
 </code>&ndash; nerdtree.vim</p>

<p>Now you can use :NERDTree in vi (you can use :N<tab> to trigger this command).</p>

<h1>Uninstall Plugin</h1>

<p>Just remove plugin directory under ~/.vim/bundle.</p>

<h1>Disable a plugin temporarily</h1>

<p>Add a tilde (&ldquo;~&rdquo;) at the end of the directory name of the bundle. For example: &ldquo;vimerl-1.4.1&rdquo; to &ldquo;vimerl-1.4.1~&rdquo;.</p>

<p>Ref: Line 129 in ~/.vim/autoload/pathogen.vim (or <a href="https://github.com/tpope/vim-pathogen/blob/master/autoload/pathogen.vim">https://github.com/tpope/vim-pathogen/blob/master/autoload/pathogen.vim</a>).</p>

<h1>List all loaded scripts</h1>

<p>:scriptnames (:scrip for short).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Jenkins and Plugins by Hand]]></title>
    <link href="http://leetschau.github.io/blog/2013/05/14/104011/"/>
    <updated>2013-05-14T10:40:11+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/05/14/104011</id>
    <content type="html"><![CDATA[<p>Follow instructions on <a href="https://wiki.jenkins-ci.org/display/JENKINS/Plugins">Jenkins wiki</a> section 1.2 &ldquo;By hand&rdquo;.</p>

<ol>
<li><p>download jenkins.war;</p></li>
<li><p>Search for the plugin, find if it has any dependency plugin. For example, plugin <a href="https://wiki.jenkins-ci.org/display/JENKINS/Checkstyle+Plugin">checkstyle</a> depends on <a href="https://wiki.jenkins-ci.org/display/JENKINS/Static+Code+Analysis+Plug-ins">analysis-core</a> stated in &ldquo;Dependencies&rdquo; section;</p></li>
<li><p>Download hpi files in <a href="http://updates.jenkins-ci.org/download/plugins/">Download Site</a>;</p></li>
<li><p>Copy hpi files downloaded to $HOME/.jenkins/plugins folder and restart Jenkins:</p></li>
</ol>


<p> nohup java -jar jenkins.war 1>jenkins.log 2>jenkins.log &amp;</p>

<p>Verify: Jenkins Dashboard(<a href="http://localhost:8080">http://localhost:8080</a>) -> Manage Jenkins -> Manage Plugins -> Installed:</p>
]]></content>
  </entry>
  
</feed>
