<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tshark | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/tshark/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-10-29T20:16:11+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tshark笔记]]></title>
    <link href="http://leetschau.github.io/blog/2013/02/22/162847/"/>
    <updated>2013-02-22T16:28:47+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/02/22/162847</id>
    <content type="html"><![CDATA[<p>root@guserver:/home/lichao# tshark -f &ldquo;host 10.0.2.47&rdquo; -i eth0 -c 20 -T fields -e ip.src -e ip.dst</p>

<p>选项：</p>

<p> -f: filter设置</p>

<p> -i: 网卡（interface）选择，可以用"tshark -D"网卡查看列表，-i后面可以跟序号，例如"-i 1"表示使用-D列出的序号为1的网卡</p>

<p> -a: 设置自动退出的规则，例如-a duration:60表示tshark启动60秒后退出</p>

<p> -T: 只显示结果的某些部分</p>

<p> -e: -T field存在时指定要显示的项目</p>

<p> -c: 收到多少个包后退出，例如-c 20表示收到20个包后退出tshark</p>

<p> -w: 将监听结果以pcap格式保存在文件里，例如-w myfile，注意root用户只能将文件保存在$HOME（/root）中</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Wireshark分析Telnet交互过程]]></title>
    <link href="http://leetschau.github.io/blog/2012/03/15/093417/"/>
    <updated>2012-03-15T09:34:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/03/15/093417</id>
    <content type="html"><![CDATA[<p>Windows系统下
用XShell作为Telnet客户端连接47服务器，整个过程可以用Wireshark（验证版本：1.6.5）完整地记录下来。</p>

<p>Wireshark->Capture->Interface中设置要监视的网卡；</p>

<p>Wireshark->Capture->Options->Capture Filter后写要监控的目标主机IP地址，这里写： host 10.0.2.47 ；</p>

<p>Wireshark->Capture->Start；</p>

<p>启动XShell连接47：Xshell:> telnet 10.0.2.47 ；</p>

<p>Wireshark将显示整个交互过程（见下图），可以看到主界面分为3部分，上面按时间顺序列出了每次交互的数据包（packet）；中间是这个数据包的详细内容，第一层Frame 14（xx层？）是xxx，第二层Ethernet II（链路层）主要由源和目标主机的网卡（Mac）地址组成，用ifconfig -a(Linux)或者ipconfig /all(windows)可以验证，第3层（网络层）是IP协议报头，主要包括源和目标的IP地址等，第4层（传输层）是TCP协议报头，主要包括源和目标的端口号、包序列号等，第5层（应用层）是Telnet数据；主界面的下部是此数据包的具体内容，以16进制显示。</p>

<p>连接后首先进行选项协商，然后传输数据，下面以“是否回显”为例详细说明协商过程，图中10.0.2.47是Telnet Server，10.32.1.56是Client。</p>

<p>第14步S要求C回显：ff fd 01，即IAC DO ECHO（见上图）；</p>

<p>第17步C回答S客户端不回显：ff fc 01，即IAC WONT ECHO；</p>

<p>第19步S通知C服务端将回显：ff fb 01，即IAC WILL ECHO；</p>

<p>第20步C同意服务端回显：ff fd 01，即IAC DO ECHO；</p>

<p>选项协商中各种搭配的具体含义参见“ The Telnet Protocol ”；</p>

<p>更改XSehll窗口尺寸引起的window size negotiation：</p>

<p>ff fa 1f 00 62 00 1b ff f0，即IAC SB 31(Options: Window Size) 98 27 IAC SE</p>

<p>转换为Telnet语句：</p>

<p>Suboption Begin: Negotiate About window size</p>

<p>Width: 98 Height: 27</p>

<p>Command: Suboption End</p>

<p>命令行用法</p>

<p>C:\Program Files\Wireshark>tshark -D
1. \Device\NPF<em>{4DF0B9FD-57A8-43FC-9EC9-354B454E475D} (VMware Virtual Ethernet Adapter)
2. \Device\NPF</em>{CA8CAD23-7ADD-4F2B-8A77-1E9E6810FE38} (Broadcom NetLink &trade; Gigabit Ethernet Driver)
3. \Device\NPF_{53720D33-0B96-48DB-A977-07A0EC43F65B} (VMware Virtual Ethernet Adapter)</p>

<p>tshark -f &ldquo;host 10.0.2.47&rdquo; -i 2 -c 20 -w myfile</p>

<p>用wireshark打开myfile</p>

<p>用tshark -F可以看到snoop好像是可以在solaris上打开的输入监控文件格式
 Linux下
47上目前的操作系统是Red Hat Enterprise Linux Server release 5.4，安装tshark需要 libsmi-0.4.5-2.el5.x86_64.rpm 和 wireshark-1.0.15-1.el5_6.4.x86_64.rpm 两个包，安装过程很简单，首先将这个包上传到47上，然后执行：</p>

<p> rpm -ivh libsmi-0.4.5-2.el5.x86_64.rpm</p>

<p> rpm -ivh wireshark-1.0.15-1.el5_6.4.x86_64.rpm</p>

<p> verify:</p>

<p> [root@goduserver tool]# whereis tshark
tshark: /usr/sbin/tshark /usr/share/man/man1/tshark.1.gz</p>

<p> rpm包下载站点： pkgs.org ，备用站点： <a href="http://rpm.pbone.net/">http://rpm.pbone.net/</a></p>

<p>获取网卡列表：</p>

<p>[root@goduserver tool]# tshark -D
1. eth3
2. &hellip;</p>

<p> 获取监测数据：</p>

<p>[root@goduserver help]# tshark -i eth3 -w myoutput host 10.32.1.59</p>

<p>普通用户权限不够无法进行监测：</p>

<p>[godu@goduserver ~]$ tshark -i eth3 host 10.32.1.59</p>

<p>Capturing on eth3</p>

<p>tshark: The capture session could not be initiated (socket: Operation not permitted)&hellip;</p>

<p>读取监测数据：</p>

<p>[root@goduserver tool]# tshark -r myoutput -x -V</p>

<p>将监测数据保存为文本：</p>

<p>[root@goduserver tool]# tshark -r myoutput -x -V > mytxt</p>

<p>或者将myoutput下载到PC上用Wireshark分析；</p>
]]></content>
  </entry>
  
</feed>
