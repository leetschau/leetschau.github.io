<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Find | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/find/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-11-03T17:15:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Linux系统上查找文件]]></title>
    <link href="http://leetschau.github.io/blog/2012/05/19/105840/"/>
    <updated>2012-05-19T10:58:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/05/19/105840</id>
    <content type="html"><![CDATA[<h1>Find命令</h1>

<p>格式：find &lt;指定搜索范围> &lt;指定条件> &lt;指定动作></p>

<p>其中搜索范围是一个目录名，指定条件包括文件名、文件属性（修改时间所属用户等）、所在位置特点（如目录深度等）等；指定动作包括打印（-print）等；</p>

<p>例如：find $HOME -name &ldquo;*.sh&#8221;，查找用户根目录下所有以.sh结尾的文件，除了按文件名查找，find还可以按文件大小、类型、所属用户、用户组、修改时间、是否为空等，还可以指定找到文件后要执行的动作， 例如下面第一个指令是找到文件后运行ls命令，第3个指令是查找文件名中有echo且不属于root的文件（可以用!表示取反）：</p>

<pre><code>[godu@goduserver ~]$ find ./backup/nep -name "*echo*" -ls
124059671 8 -rwxr-xr-x 1 godu  godu   192 5月 19 10:59 ./backup/nep/echoServerStart.sh
[godu@goduserver ~]$ find ./backup/nep -name "*echo*" ! -user godu 
[godu@goduserver ~]$ find ./backup/nep -name "*echo*" ! -user root 
./backup/nep/echoServerStart.sh
find /proc/&lt;pid&gt;/fd -type s（找所有socket文件）结果为空，用-type l可知此目录下所有文件都为link文件。 
</code></pre>

<p>详见：<a href="http://blog.csdn.net/ydfok/article/details/1486451">linux查找文件命令find</a></p>

<h2>引号问题</h2>

<p>（2013-9-4更新）</p>

<p>find <dest_path> -name <name_pattern>中<name_pattern>是glob格式，而且只匹配文件名，如果想用正则表达式匹配，则需要匹配完整路径名。</p>

<p>例如有这样一个文件：./CalcServer/src/com/boco/deploy/ConfigLoader.java，用<code>find . -name "Co*.java"</code>可以匹配上，但<code>find . -regex "Co.*java"</code>匹配不上，因为它只匹配了文件名，而不是包括路径的完整路径名，改为<code>find . -regex ".*Co.*java"</code>就ok了。</p>

<p>参考：<a href="http://bbs.chinaunix.net/thread-612012-1-1.html">http://bbs.chinaunix.net/thread-612012-1-1.html</a></p>

<h2>查找条件</h2>

<p>（2013-10-17更新）</p>

<h3>按时间特性查找</h3>

<ul>
<li><p>find <dest_path> -newerXY <time-expr>: 查找在某个时间点之后修改（更新，生成）的文件，例如：</p>

<p>  find . -newermt &lsquo;2014-01-16 00:00&rsquo; -name &lsquo;*.py&rsquo;</p>

<p>查找所有修改时间晚于1月16日0点的扩展名为py的文件。</p></li>
<li><p>find <dest_path> -mtime -1: 查找最近一天内被更改过的文件；</p></li>
<li><p>mtime是按天查询，&#8221;-mtime -7&#8221; 查询修改时间在7天前到现在这段时间内的文件；</p></li>
<li><p>mmin是按分钟查询，其他与mtime一样；</p></li>
<li><p>atime, ctime分别是access time和change time（mtime是modification time），其他与mtime一样；</p></li>
<li><p>find <dest_path> -newer <file_name> 列出所有修改时间晚于<file_name>修改时间的文件；</p></li>
</ul>


<h3>查找深度限制</h3>

<ul>
<li>-maxdepth <n> 用来指定查询的目录深度，一般作为find的第一个参数；</li>
</ul>


<h3>查找类型限制</h3>

<ul>
<li>&ldquo;-type f&rdquo; 表示只显示文件，&#8221;-type d&#8221; 表示只查询目录；另外还有l（链接），s(socket)等类型可选；</li>
</ul>


<h2>指定动作</h2>

<ul>
<li><p>&ldquo;-exec&rdquo;: 格式:</p>

<ul>
<li><p>find <path> <criterion> -exec <command> {} \;
上面{}代表被查出来的项目，<command>命令以分号结尾，但为了避免分号在不同系统中的歧义，前面加反斜杠对分号进行转义；</p></li>
<li><p>find <path> <criterion> -exec <command> {} +
将所有find找到的条目放在一起，由<command>一次性执行，效率比&#8221;find &hellip; \;&ldquo;版本高很多；</p></li>
</ul>
</li>
<li><p>&ldquo;-print&rdquo;: 主要用来在管道命令中为其他命令传值；</p></li>
</ul>


<h1>Locate命令</h1>

<p> 相当于find -name，但速度远快于find，因为Linux维护了一个文件列表数据库（在Ubuntu上，这个数据库文件是/var/lib/mlocate/mlocate.db），locate命令查询这个数据库给出结果。由于数据库每天更新，所以如果查询最近的更改，需要手工更新数据库：</p>

<pre><code>sudo updatedb
</code></pre>

<p>注意locate的搜索结果是包含路径的，所以用locate &lsquo;abc<em>&#8216;是搜不到文件名以abc开头的文件的，必须写为&#8221;</em>abc*&ldquo;;</p>

<ul>
<li>文件名部分普通匹配：locate strom；对应Emacs中M-x locate;</li>
</ul>


<p>只有在这种最简形式下，可以将locate &lsquo;<em>strom</em>&#8216;简写为locate storm;</p>

<ul>
<li><p>glob匹配：locate &lsquo;<em>strom</em>.gz&#8217;，搜索所有storm*.gz文件;</p></li>
<li><p>正则匹配：locate -r &lsquo;.<em>Storm.</em>java&#8217;，或者：locate -r &rsquo;.<em>[Gg]roovy.</em>&lsquo;;</p>

<p>在特定路径下搜索指定扩展名文件：locate -r &lsquo;.<em>warez.</em>[Vv]irtual[Bb]ox.*[rpm|deb]&rsquo;</p>

<p>用正则指定文件扩展名：locate -r &lsquo;Storm.*.java&rsquo;</p></li>
<li><p>locate+grep效果很好，先用locate进行粗选，然后在grep中细化，如查抄版本号为2.2.0的一个Hadoop安装包：locate 2.2.0|grep hadoop，或者查找所有文件名为Groovy或者groovy的文件：locate -r &lsquo;[Gg]roovy&rsquo;|grep &lsquo;[Gg]roovy&rsquo;</p></li>
</ul>


<p>Ref:</p>

<p><a href="http://www.kuqin.com/linux/20091009/70532.html">Linux的五个查找命令</a></p>

<p><a href="http://www.linuxhaxor.net/5-ways-to-search-for-files-using-the-terminal-in-linux/">5 Ways To Search For Files Using The Terminal</a></p>
]]></content>
  </entry>
  
</feed>
