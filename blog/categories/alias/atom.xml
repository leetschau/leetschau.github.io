<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Alias | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/alias/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-02-21T11:06:40+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clojure Namespaces]]></title>
    <link href="http://leetschau.github.io/blog/2013/10/10/114908/"/>
    <updated>2013-10-10T11:49:08+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/10/10/114908</id>
    <content type="html"><![CDATA[<p>Now we have a 2-dimensional vector glider(as follows) in our own namespace. And we want use clojure.pprint/pprint to print it out.</p>

<p>(def glider (vec (repeat 3 (vec (repeat 6 nil)))))</p>

<h1>Declare require as a common function</h1>

<p> (def glider (vec (repeat 3 (vec (repeat 6 nil)))))</p>

<p> (require &lsquo;clojure.pprint)
 (clojure.pprint/pprint glider)</p>

<p> (require &lsquo;[clojure.data.json :as json])</p>

<p> (defn get-data [url] (json/read-str (slurp url)))</p>

<h1>Put require in namespace declaration</h1>

<p> (ns conways-game-of-life.core (:require clojure.pprint))</p>

<p> (def glider (vec (repeat 3 (vec (repeat 6 nil)))))</p>

<p> (clojure.pprint/pprint glider)</p>

<h1>Give required namespace a alias name</h1>

<p> (ns conways-game-of-life.core (:require [clojure.pprint :as ppr]))</p>

<p> (def glider (vec (repeat 3 (vec (repeat 6 nil)))))</p>

<p> (ppr/pprint glider)</p>

<p> (ns sonar-parser.core
  (:require [clojure.data.json :as json]))</p>

<p> (defn get-data [url] (json/read-str (slurp url)))</p>

<p>Ref: <a href="http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html">http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create Shortcut to Get Jar File Meta Information]]></title>
    <link href="http://leetschau.github.io/blog/2013/08/28/180743/"/>
    <updated>2013-08-28T18:07:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/08/28/180743</id>
    <content type="html"><![CDATA[<p>You have to get meta information of cobertura.jar with command &ldquo;unzip -q -c cobertura.jar META-INF/MANIFEST.MF&rdquo;. It&rsquo;s too long to write so we gonna create a shortcut &ldquo;getmeta&rdquo; for this command. Then we can use &ldquo;getmeta cobertura&rdquo; to get the same information.</p>

<p>In zsh, you can add following snippet into .zshrc:</p>

<p> getmeta() { unzip -q -c &ldquo;$*&rdquo;.jar META-INF/MANIFEST.MF }</p>

<p>You can also use command &ldquo;alias&rdquo; to define this. But it&rsquo;s not general like above.</p>

<p>In bash, add the following snippet to .bashrc or .bash_profile:</p>

<p> getmeta() { unzip -q -c &ldquo;$@&rdquo;.jar META-INF/MANIFEST.MF }</p>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/2904677/alias-with-parameters">http://stackoverflow.com/questions/2904677/alias-with-parameters</a></p>

<p><a href="http://stackoverflow.com/questions/4060880/shell-bash-passing-argument-to-alias">http://stackoverflow.com/questions/4060880/shell-bash-passing-argument-to-alias</a></p>
]]></content>
  </entry>
  
</feed>
