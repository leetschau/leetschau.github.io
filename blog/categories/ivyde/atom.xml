<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ivyde | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/ivyde/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-10-29T20:16:11+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use `Resolve Dependency in Workspace` Feature of IvyDE to Resolve Project Dependency in Develop Stage]]></title>
    <link href="http://leetschau.github.io/blog/2011/07/07/113549/"/>
    <updated>2011-07-07T11:35:49+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/07/07/113549</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用IvyDE整合Ivy与Eclipse]]></title>
    <link href="http://leetschau.github.io/blog/2010/10/28/105402/"/>
    <updated>2010-10-28T10:54:02+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/10/28/105402</id>
    <content type="html"><![CDATA[<p>IvyDE的安装</p>

<p>采用 自动安装方式 安装 IvyDE（ 手工安装方式 失败， 原因不清楚 ）；</p>

<p> 将Ivy依赖加入到项目的classpath中</p>

<p>例如项目A依赖项目B的方法，由于项目B没有被加入到classpath中，A里使用B项目的方法就会被标记为“无法解析”，解决方法是将ivy声明的依赖包加入到classpath中，详细过程在 这里 ，IvyDE使用的方法是先将依赖包下载到本地的Ivy Cache里，然后加入到classpath中；</p>
]]></content>
  </entry>
  
</feed>
