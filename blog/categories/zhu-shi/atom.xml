<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 注释 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/zhu-shi/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-05-10T10:22:47+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[删除源代码文件里的注释和空行]]></title>
    <link href="http://leetschau.github.io/blog/2011/06/21/095608/"/>
    <updated>2011-06-21T09:56:08+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/06/21/095608</id>
    <content type="html"><![CDATA[<p>有时需要对大量的源代码文件做删除空行和注释的操作，手工处理效率会很低，可以用cloc工具（ <a href="http://cloc.sourceforge.net">http://cloc.sourceforge.net</a> ）来完成。</p>

<p>例如要处理d:\godu21\GODU_Server\GODU_V2.1\src\下所有的源代码文件，将去掉空行和注释的新文件放在f:\Software\cloc-1.53下：</p>

<p>第一步：将cloc.exe文件拷贝到f:\Software\cloc-1.53下；</p>

<p>第二步：在f:\Software\cloc-1.53下启动命令行，并运行：cloc &ndash;strip-comments=nj d:\godu21\GODU_Server\GODU_V2.1\src</p>

<p>命令格式为：cloc [options] src_path，cloc将处理后的文件放在当前目录下。命令中“&ndash;strip-comments=”后面是新文件的扩展名，例如原文件是ConnectKeyFilter.java，则处理后的对应文件为f:\Software\cloc-1.53\ConnectKeyFilter.java.nj。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python的ConfigParser模块使用方法]]></title>
    <link href="http://leetschau.github.io/blog/2011/01/13/152557/"/>
    <updated>2011-01-13T15:25:57+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/01/13/152557</id>
    <content type="html"><![CDATA[<p>ConfigParser模块读取的配置文件的基本格式是：分节，节名称用中括号括起来，每节内有key:value对，中间用冒号分隔，冒号前的空格会被忽略掉；</p>

<p>[SectionName1]</p>

<p>name1: value1</p>

<p>name2: value2</p>

<p>[SectionName2]</p>

<p>name3: value3</p>

<p>配置文件中可以有注释，有两种风格，一种是#号开头，一种是分号开头。#号必须在行首，分号可以在行中， 但分号前必须有一个空格 。下面的代码读取build.cfg文件中mail节中to_addr的内容：</p>

<p> import ConfigParser</p>

<p> config = ConfigParser.ConfigParser()</p>

<p> config.read(&lsquo;build.cfg&rsquo;)</p>

<p> to_addr = config.get(&lsquo;mail&rsquo;,&lsquo;to_addr&rsquo;)</p>

<p>build.cfg的内容为：</p>

<p>[mail]</p>

<p>to_addr: <a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#x6f;&#58;&#108;&#x69;&#x63;&#x68;&#97;&#111;&#x31;&#64;&#98;&#x6f;&#x63;&#x6f;&#x2e;&#x63;&#x6f;&#109;&#x2e;&#x63;&#110;">&#108;&#105;&#x63;&#104;&#97;&#111;&#49;&#x40;&#98;&#111;&#x63;&#111;&#46;&#99;&#x6f;&#x6d;&#46;&#x63;&#110;</a> ;this is comments</p>
]]></content>
  </entry>
  
</feed>
