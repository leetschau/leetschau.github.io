<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javadoc | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/javadoc/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-11-28T08:48:37+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javadoc动作中排除某些类]]></title>
    <link href="http://leetschau.github.io/blog/2011/06/13/111815/"/>
    <updated>2011-06-13T11:18:15+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/06/13/111815</id>
    <content type="html"><![CDATA[<p>设计产品的类结构时，有些类的作用是与产品的其他部分交互，因此必须是public类型的，但又不希望暴露给用户，因此打产品包的javadoc时，这些类是不生成javadoc的。假设某个包里共有10个接口，其中有一个是不生成javadoc的，写出另外9个接口名显然是很dirty的方法，比较好的方法是定义一个exclude，例如：</p>

<p><target name="javadoc" depends="compile"></p>

<pre><code>&lt;javadoc sourcepath="${src.dir}" destdir="${build.javadoc.dir}"

    encoding = "GBK" docencoding = "GBK"

    packagenames ="com.boco.godu.gapi.exception" &gt;

    &lt; sourcefiles &gt;

       &lt; fileset dir="${src.dir}/com/boco/godu/gapi"&gt;

           &lt;include name="*.java"/&gt;

           &lt; exclude name="IConnPool.java"/&gt;

       &lt;/fileset&gt;

    &lt;/ sourcefiles &gt;

&lt;/javadoc&gt;
</code></pre>

<p></target></p>

<p>上面的例子表明，对于整个包（package）统一生成javadoc的，采用的内嵌的packagenames定义（可以用逗号隔开多个包名），对于需要exclude的包，用<sourcefiels>+<fileset>定义，可以非常方便的使用exclude功能。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javadoc中插入超链接]]></title>
    <link href="http://leetschau.github.io/blog/2010/10/13/134904/"/>
    <updated>2010-10-13T13:49:04+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/10/13/134904</id>
    <content type="html"><![CDATA[<p>Javadoc中插入的超链接可分为两类，一类是在@see 标记后面写上class_qualified_name#method_name，编译后的效果是“另请参见……”，例如 @see  com.boco.godu.gapi.IResult#getByteArray() 编译后得到：</p>

<p> 另请参见：</p>

<p>   IResult.getByteArray()</p>

<p> 另一类是使用html的语法插入超链接，例如超链接是 <a href ="IConnection.html#admin_port_demo">样例  </a> ，被指向的地方是 <h3 id=admin_port_demo>场景一：查看网元磁盘空间（数据端口的同步场景）  </h3> ，这样就可以实现指向一个html文件的某一小节。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将JavaDoc生成接口文档的方法]]></title>
    <link href="http://leetschau.github.io/blog/2010/07/22/105702/"/>
    <updated>2010-07-22T10:57:02+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/07/22/105702</id>
    <content type="html"><![CDATA[<p>&ldquo;删除第三行前导空格，保存第三行文字
 let title = getline(3)
&#8220;写：方法名称：
&#8220;将第一行内容写在后面
&#8220;若有“参数”行，将此行与下一行合并，去掉前导空格
&#8220;若有“返回”行，将此行与下一行合并，去掉前导空格
 原始javadoc文本
setPassword
 public void setPassword(java.lang.String password)
  设置登录密码
  参数：
  password - 登录密码</p>
]]></content>
  </entry>
  
</feed>
