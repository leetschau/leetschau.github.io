<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Merge | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/merge/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-04-09T20:50:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Combine History Commits With Git]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/25/103348/"/>
    <updated>2016-02-25T10:33:48+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/25/103348</id>
    <content type="html"><![CDATA[<h1>Question</h1>

<p>The commit history is:</p>

<pre><code>$ git log --pretty=oneline
52756ce25b26442a21ebfe52655dcf9c6ba9aa98 ch6 changed
41d49f2fbd12c00af99a90b6fbd1e4af18db0103 ch5 changed
c24b32555b5fe98d556acc7d32a2bd68346d40ba ch4 changed
4088dde16b47f39d1b5f9553bc902e2afc34bf9a ch3 changed
ea37405f9b59bef389ef6ca6a0c6ae8ad6365fb9 Fix some syntax problem
...
</code></pre>

<p>You want to combine changes in chapter 3, 4 and 5.</p>

<h1>Solution</h1>

<pre><code>git rebase -i ea37405f
</code></pre>

<p>Here &ldquo;ea37405f&rdquo; is the commit <strong>older</strong> than the commits you want to combine.</p>

<p>Now in an editor like:</p>

<pre><code>pick 4088dde ch3 changed
pick c24b325 ch4 changed
pick 41d49f2 ch5 changed
pick 52756ce ch6 changed
</code></pre>

<p>Notice the timeline order is <strong>reversed</strong> compared with that in <code>git log</code>:
the newest commit (&ldquo;ch6 changed&rdquo;) is now in the last line, instead of the first.</p>

<p>Modify the content like this:</p>

<pre><code>pick 4088dde ch3 changed
s c24b325 ch4 changed
s 41d49f2 ch5 changed
pick 52756ce ch6 changed
</code></pre>

<p>Here &ldquo;s&rdquo; means melding the commit into previous (<strong>older</strong>) commit.</p>

<p>Save and quit, you now in an editor for new commit message, input:</p>

<pre><code>chapter 3, 4 and 5 changed
</code></pre>

<p>Save and you get a message &ldquo;Successfully rebased and updated refs/heads/master&rdquo;.</p>

<h1>Discussion</h1>

<p>Check the history after rebase:</p>

<pre><code>$ git log --pretty=oneline
b4463e99ad221f270fd9f51d5bc7e8b348805804 ch6 changed
276932a252b9041085fb30d0d5e4082db8c03584 chapter 3, 4 and 5 changed
ea37405f9b59bef389ef6ca6a0c6ae8ad6365fb9 Fix some syntax problem
</code></pre>

<p>You can see the changes in files with <code>git diff &lt;older&gt; &lt;newer&gt;</code>, here it is:
<code>git diff HEAD~2 HEAD~</code>, or <code>git diff ea37405 276932a</code>.</p>

<p>If something wrong happens and your rebase process stopped,
come back to the place where you started with <code>git rebase --abort</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merge Multiple PDF Files in Ubuntu]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/20/010838/"/>
    <updated>2016-02-20T01:08:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/20/010838</id>
    <content type="html"><![CDATA[<p>There&rsquo;s a built-in utility in Ubuntu 14.04 &ldquo;pdfunite&rdquo;.
Merge multiple pdf files with it (the last one is the output file name):</p>

<p><code>pdfunite DataMining-ch* AProgrammersGuide2DataMining.pdf</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resolving Merge Conflicts in Git]]></title>
    <link href="http://leetschau.github.io/blog/2015/04/23/174442/"/>
    <updated>2015-04-23T17:44:42+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/04/23/174442</id>
    <content type="html"><![CDATA[<p>Edit the conflicted files manually.
Remove &ldquo;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&rdquo;, &ldquo;=======&rdquo; and &ldquo;>>>>>>>&rdquo;,
then add and commit the modified files to resolve the conflict.</p>

<p>When using git-flow, if a conflict appears when finishing a release,
after resolve and commit the conflicted files,
run <code>git flow release finish 0.2.0</code> again.</p>

<p>Ref:</p>

<p><a href="http://genomewiki.ucsc.edu/index.php/Resolving_merge_conflicts_in_Git">Resolving merge conflicts in Git</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hg单用户操作的分支合并]]></title>
    <link href="http://leetschau.github.io/blog/2013/04/22/131818/"/>
    <updated>2013-04-22T13:18:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/04/22/131818</id>
    <content type="html"><![CDATA[<p>$ hg init hgBranchTest // 新建一个名为hgBranchTest的repo，hg自动创建目录</p>

<p>$ cd hgBranchTest</p>

<p>$ vi readme.txt</p>

<p>$ cat readme.txt
this is the first version</p>

<p>$ hg add readme.txt
$ hg ci -m &ldquo;first time commit&rdquo; // or use &ldquo;hg ci -A -m &hellip;&rdquo; for add and commit
$ vi readme.txt
$ cat readme.txt
this is the first version
add a line
$ hg st
M readme.txt
$ hg log
修改集:  0:ffecf69346a5
标签:  tip
用户:  Li Chao
日期:  Mon Apr 22 05:49:29 2013 +0100
摘要:  first time commit
$ hg diff
diff -r ffecf69346a5 readme.txt
&mdash; a/readme.txt  Mon Apr 22 05:49:29 2013 +0100
+++ b/readme.txt  Mon Apr 22 05:51:03 2013 +0100
@@ -1,1 +1,2 @@
this is the first version
+add a line
$ hg ci -m &ldquo;第二次提交&rdquo;
$ hg log
修改集:  1:770a5cda1659
标签:  tip
用户:  Li Chao
日期:  Mon Apr 22 05:51:42 2013 +0100
摘要:  第二次提交
修改集:  0:ffecf69346a5
用户:  Li Chao
日期:  Mon Apr 22 05:49:29 2013 +0100
摘要:  first time commit
$ hg branch
default
$ hg branches
default      1:770a5cda1659
$ hg branch red
marked working directory as branch red
(branches are permanent and global, did you want a bookmark?)
$ vi readme.txt
$ cat readme.txt
this is the first version
add a line
add the 3rd line
$ hg branches   // 没有提交（commit）之前分支不出现在branches列表中
default      1:770a5cda1659
$ hg branch   // 当前仍在red分支下
red
$ hg ci -m &ldquo;commit on branch red&rdquo;
$ hg branches
red       2:86e30b1564a9
default      1:770a5cda1659 (inactive)
$ hg log
修改集:  2:86e30b1564a9
分支:  red
标签:  tip
用户:  Li Chao
日期:  Mon Apr 22 05:57:07 2013 +0100
摘要:  commit on branch red
修改集:  1:770a5cda1659
用户:  Li Chao
日期:  Mon Apr 22 05:51:42 2013 +0100
摘要:  第二次提交
修改集:  0:ffecf69346a5
用户:  Li Chao
日期:  Mon Apr 22 05:49:29 2013 +0100
摘要:  first time commit
$ hg log -b red // 只显示red分支上的changeset
修改集:  2:86e30b1564a9
分支:  red
标签:  tip
用户:  Li Chao
日期:  Mon Apr 22 05:57:07 2013 +0100
摘要:  commit on branch red
$ hg tip  // tip是最近版本的意思
修改集:  2:86e30b1564a9
分支:  red
标签:  tip
用户:  Li Chao
日期:  Mon Apr 22 05:57:07 2013 +0100
摘要:  commit on branch red
$ hg heads  // head表示各分支最近版本
修改集:  2:86e30b1564a9
分支:  red
标签:  tip
用户:  Li Chao
日期:  Mon Apr 22 05:57:07 2013 +0100
摘要:  commit on branch red
修改集:  1:770a5cda1659
用户:  Li Chao
日期:  Mon Apr 22 05:51:42 2013 +0100
摘要:  第二次提交
$ hg up default   // 切换当前分支为default
1 files updated, 0 files merged, 0 files removed, 0 files unresolved
$ cat readme.txt  // 分支合并前文件内容
this is the first version
add a line
$ hg merge red
1 files updated, 0 files merged, 0 files removed, 0 files unresolved
(branch merge, don&rsquo;t forget to commit)
$ cat readme.txt  // 合并后文件内容改变
this is the first version
add a line
add the 3rd line
$ hg st
M readme.txt
$ hg ci -m &ldquo;after merge with branch red&rdquo;
$ hg log
修改集:  3:9a5f0a2b7b9c
标签:  tip
父亲:  1:770a5cda1659 // 合并后提交的版本的特点是有两个parent
父亲:  2:86e30b1564a9
用户:  Li Chao
日期:  Mon Apr 22 06:00:31 2013 +0100
摘要:  after merge with branch red
修改集:  2:86e30b1564a9
分支:  red
用户:  Li Chao
日期:  Mon Apr 22 05:57:07 2013 +0100
摘要:  commit on branch red
修改集:  1:770a5cda1659
用户:  Li Chao
日期:  Mon Apr 22 05:51:42 2013 +0100
摘要:  第二次提交
修改集:  0:ffecf69346a5
用户:  Li Chao
日期:  Mon Apr 22 05:49:29 2013 +0100
摘要:  first time commit</p>
]]></content>
  </entry>
  
</feed>
