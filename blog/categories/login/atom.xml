<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Login | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/login/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-09-10T17:28:18+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix Only Root Can Login on ArchLinux]]></title>
    <link href="http://leetschau.github.io/blog/2014/07/15/143554/"/>
    <updated>2014-07-15T14:35:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/07/15/143554</id>
    <content type="html"><![CDATA[<p>After a new installation of ArchLinux, I created a user &ldquo;chad&rdquo;, and set his password via command passwd. But when the system start, I can only login as root. If I login as chad, it complains the password is incorrect, which it IS correct.</p>

<p>Through some search on Internet, I realize it&rsquo;s maybe caused by wrong path of initial shell of chad. So I re-define his initial shell via root:</p>

<pre><code>chsh -s /bin/bash chad
</code></pre>

<p>Now everything is OK.</p>

<p>To avoid this problem, run <code>useradd -D</code>. If the path of &ldquo;SHELL&rdquo; is &ldquo;/bin/bash&rdquo;, then you can use &ldquo;useradd -m chad&rdquo; to create user. If you create user with <code>useradd -s /usr/bin/bash -m chad</code>, chad can&rsquo;t login, because the path of bash can only be &ldquo;/bin/bash&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Login SSH Server Without Password]]></title>
    <link href="http://leetschau.github.io/blog/2013/06/18/100705/"/>
    <updated>2013-06-18T10:07:05+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/06/18/100705</id>
    <content type="html"><![CDATA[<ol>
<li><p>create public and private keys on client host: <code>ssh-keygen</code>, when asking for passphrase, press enter directly. This will create public key file(~/.ssh/id_rsa.pub) and private key file(~/.ssh/id_rsa);</p></li>
<li><p>copy public key to remote ssh server:</p>

<p> $ ssh-copy-id user@remote_server</p></li>
</ol>


<p>This will append texts (a line ended with user@client_host) in id_rsa.pub at the end of user@remote_server:/home/user/.ssh/authorized_keys. If ssh-copy-id complains &ldquo;No identities found&rdquo;, you have to specify the identity file (your public key) manually:</p>

<pre><code>$ ssh-copy-id -i ~/.ssh/id_rsa.pub user@remote_server;
</code></pre>

<p>Now you can login remote server with <code>ssh user@remote_server</code> without entering password.</p>

<p>If you want auto-login another remote server, only ssh-copy-id is needed.</p>

<p>If later the remote_server won&rsquo;t trust client_host anymore, needing password to login, just delete the pub key line in /home/user/.ssh/authorized_keys at remote_server.</p>
]]></content>
  </entry>
  
</feed>
