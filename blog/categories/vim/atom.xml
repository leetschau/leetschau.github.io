<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-01-04T11:42:13+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meteor Codes Auto Completion in Vim]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/03/180421/"/>
    <updated>2014-12-03T18:04:21+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/03/180421</id>
    <content type="html"><![CDATA[<h1>On ArchLinux</h1>

<ol>
<li><p>Install node.js: <code>sudo pacman -S nodejs</code>;</p></li>
<li><p>Install <a href="https://github.com/marijnh/tern_for_vim">tern_for_vim</a>:</p>

<pre><code> $ cd ~/.vim/bundle
 $ git clone https://github.com/marijnh/tern_for_vim.git
 $ cd tern_for_vim
 $ npm install
</code></pre></li>
<li><p>Install meteor plugin for tern <a href="https://github.com/Slava/tern-meteor">tern-meteor</a>: download meteor.js from this site to folder ~/.vim/bundle/tern_for_vim/node_modules/tern/plugins;</p></li>
<li><p>Create a meteor project, create a .tern-project file under the project home:</p>

<pre><code> {
   "libs": [
     "browser",
     "jquery",
     "underscore"
   ],
   "loadEagerly": [ "*.js", "*/*.js", "*/*/*.js", "*/*/*/*.js" ],
   "dontLoad": [ ".meteor" ],
   "plugins": {
     "meteor": {}
   }
 }
</code></pre></li>
<li><p>Now when you edit .js file, use C-x,C-o to trigger autocompletion.</p></li>
</ol>


<p>Ref:</p>

<p><a href="https://github.com/joyent/node/wiki/installing-node.js-via-package-manager#arch-linux">Installing Node.js via package manager</a>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim as a HTML Editor]]></title>
    <link href="http://leetschau.github.io/blog/2014/11/27/092846/"/>
    <updated>2014-11-27T09:28:46+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/11/27/092846</id>
    <content type="html"><![CDATA[<h1>Jump between matching HTML and XML tags</h1>

<p>In normal mode, use &ldquo;vat&rdquo; to select all texts between these matching tags,
then use &ldquo;o&rdquo; to jump between matching tags.</p>

<p>In &ldquo;vat&rdquo;, &ldquo;v&rdquo; means select,
&ldquo;a&rdquo; means including tags themselves(comparing with &ldquo;i&rdquo;),
&ldquo;t&rdquo; means tags.</p>

<p>So we have &ldquo;cat&rdquo; (change outer), &ldquo;yat&rdquo; (copy outer), &ldquo;cit&rdquo; (change inner), &ldquo;dit&rdquo; (delete inner), etc.</p>

<h1>Auto complete opened tags</h1>

<h2>xmledit plugin</h2>

<p>Install with <code>git clone https://github.com/sukima/xmledit.git ~/.vim/bundle/xmledit</code>.
But it only works with .xml files. Not working with .html files.</p>

<p>To fix this, <code>cd ~/.vim/bundle/xmledit/ftplugin; cp xml.vim html.vim</code> (overwrite the existing html.vim file).</p>

<h2>No plugins</h2>

<p>Add &ldquo;inoremap <F8> &lt;/<C-X><C-O>&rdquo; into ~/.vimrc.
Now after &ldquo;<p>some text&rdquo;, press F8, it will be converted to &ldquo;<p>some text</p>&rdquo;.</p>

<h2>ragtag plugin</h2>

<p>Install <a href="https://github.com/tpope/vim-ragtag">ragtag</a> plugin for vim with <code>git clone https://github.com/tpope/vim-ragtag.git</code> into ~/.vim/bundle.</p>

<p><code>:h ragtag</code> in vim for help.</p>

<p>When editing a .html file, in insert mode, after input &ldquo;div&rdquo;, press Ctrl-x,Space, it will be convert to &ldquo;<div>|</div>&rdquo;.
If press Ctrl-x,Enter, it will be converted to:</p>

<pre><code>&lt;div&gt;
|
&lt;/div&gt;
</code></pre>

<p>where &ldquo;|&rdquo; marks the cursor position.</p>

<h2>Other plugins</h2>

<p>There are some more powerful plugins for xml/html editing, but they are more complicated.
Like <a href="http://www.vim.org/scripts/script.php?script_id=1697">surround.vim</a>, <a href="http://www.vim.org/scripts/script.php?script_id=13">closetag.vim</a>, and <a href="https://github.com/mattn/emmet-vim">emmet-vim</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize Vim Statusline]]></title>
    <link href="http://leetschau.github.io/blog/2014/06/26/180252/"/>
    <updated>2014-06-26T18:02:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/06/26/180252</id>
    <content type="html"><![CDATA[<p>The purpose of the customization is mainly to add full path to vim&rsquo;s statusline. I use <a href="https://github.com/bling/vim-airline">bling/vim-airline</a> to fulfill this.</p>

<h1>Install with Pathogen</h1>

<pre><code>git clone https://github.com/bling/vim-airline ~/.vim/bundle/vim-airline
</code></pre>

<h1>Customize Statusline</h1>

<p>Add the following 2 lines to ~/.vimrc:</p>

<pre><code>set laststatus=2
let g:airline_section_c='%F'
</code></pre>

<p>See <code>:h laststatus</code> for the meaning of &ldquo;laststatus&rdquo;.
See &ldquo;CUSTOMIZATION&rdquo; section of <code>:h airline</code> for the meaning of every section and its default contents.
See <code>:h statusline</code> for the meaning of &ldquo;%F&rdquo; and the name of all statusline items.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Group Substitution in Vim]]></title>
    <link href="http://leetschau.github.io/blog/2014/06/13/155048/"/>
    <updated>2014-06-13T15:50:48+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/06/13/155048</id>
    <content type="html"><![CDATA[<p>The origin text is:</p>

<p>sqoop export &ndash;columns int_id,date_time,mr_count,ecno_pollution,rscp_0,rscp_1,rscp_2,rscp_3,rscp_4,rscp_5,load_time &ndash;input-field</p>

<p>The target text is:</p>

<p>sqoop export &ndash;columns int_id,date_time,mr_count,ecno_pollution,rscp0,rscp1,rscp2,rscp3,rscp4,rscp5,load_time &ndash;input-field</p>

<p>We want remove all underscore in &ldquo;rscp_3&rdquo;, which means converting it to &ldquo;rscp3&rdquo;. The real text has ninety more items, so we can&rsquo;t do substitutions manually. And other items also use underscore, so you can&rsquo;t only remove all underscores.</p>

<p>Solution: <code>:s/rscp_\(\d\+\)/rscp\1/gc</code>.</p>

<p>We use &ldquo;(&rdquo; and &ldquo;)&rdquo; to mark a group, use &ldquo;\1&rdquo; to represent it in the new strings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Join Ragged Columns Im Vim]]></title>
    <link href="http://leetschau.github.io/blog/2014/06/12/114812/"/>
    <updated>2014-06-12T11:48:12+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/06/12/114812</id>
    <content type="html"><![CDATA[<p>I need to format some texts copied from a PDF file:</p>

<p>a
ab
abc
cd
e</p>

<p>=>
=>
=>
=>
=></p>

<p>x
xy
xyz
pq
p</p>

<p>The target form is:</p>

<p>a   => x
ab  => xy
abc => xyz
cd  => pq
e   => p</p>

<p>I want to select the whole last section (x&hellip;p) in visual block mode, and paste them after the 2nd section (=>). But in visual block mode (triggered by Ctrl-v), I can&rsquo;t select all of last section. Because there&rsquo;s only one character &ldquo;p&rdquo; in the last line, so only &ldquo;x&rdquo; in the 3rd line (xyz) will be selected. The solution is set &ldquo;virtualedit&rdquo; mode to &ldquo;all&rdquo; with &ldquo;:set ve=all&rdquo;. Now the cursor is free to anywhere no matter if there&rsquo;s a character. After the joining, we have to remove all trailing spaces. So the overall process is:</p>

<p>:set ve=all
&lt;C-v, select and paste, ESC to normal mode>
<select all line joined together in visual line mode>
:&lsquo;&lt;,&rsquo;>s/\s*//g
:set ve=</p>
]]></content>
  </entry>
  
</feed>
