<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-02-21T11:06:40+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use VIM on Windows]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/31/152533/"/>
    <updated>2016-01-31T15:25:33+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/31/152533</id>
    <content type="html"><![CDATA[<p>Use <a href="http://cmder.net/">cmder</a> as the console.
Use Alt-Enter to toggle full screen, Ctrl-T to create new window/pane,
Ctrl-D to close window, <code>ls</code> to list files.</p>

<p>Follow <a href="http://usevim.com/2012/10/12/vim101-windows/">Vim 101: Using Vundle and Pathogen in Windows</a>,
install msysGit.</p>

<p>Ref:</p>

<p><a href="https://github.com/VundleVim/Vundle.vim/wiki/Vundle-for-Windows">Vundle for Windows</a></p>

<h1>Switch CapsLock and ESC</h1>

<p>Install <a href="https://autohotkey.com/">AutoHotKey</a>, create file &ldquo;switchKey.ahk&rdquo;:</p>

<pre><code>SetTitleMatchMode,2
#IfWinActive, Cmder
   CAPSLOCK::ESC
   ESC::CAPSLOCK
return
</code></pre>

<p>Use &ldquo;Convert .ahk to .exe&rdquo; tool provided by AutoHotKey
to convert it to switchCapsESC.exe (see Note 1 for details),
and add it to &ldquo;Start&rdquo; menu.</p>

<p>But Vundle is hard to configure on Windows, probably caused by
&ldquo;runtimepath&rdquo; of vim.</p>

<p>Note 1:</p>

<pre><code>cd C:\Program Files\AutoHotKey\Compiler
Ahk2Exe.exe /in switchKey.ahk /out switchCapsESC.exe
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Notes]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/24/115416/"/>
    <updated>2015-10-24T11:54:16+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/24/115416</id>
    <content type="html"><![CDATA[<h1>Server setup</h1>

<p>Download tar package of <a href="https://www.elastic.co/products/elasticsearch">ealsticSearch</a>
and install:</p>

<pre><code>aptitude update
aptitude install openjdk-7-jdk
wget https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.0.0/elasticsearch-2.0.0.tar.gz
tar zxf elasticsearch-2.0.0.tar.gz
cd elasticsearch-2.0.0
bin/elasticsearch
</code></pre>

<p>Or you can install it as a service with deb package</p>

<pre><code>wget https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.7.3.deb
sudo dpkg -i elasticsearch-1.7.3.deb
sudo /etc/init.d/elasticsearch restart
</code></pre>

<p>Start in foreground:
<code>sudo /usr/share/elasticsearch/bin/elasticsearch --default.path.conf=/etc/elasticsearch/</code>.
If you omit the option &ldquo;&ndash;default.path.conf&rdquo;,
you&rsquo;ll get an error:
<code>org.elasticsearch.ElasticsearchException: Failed to load logging configuration</code>.</p>

<p>When you want start the 2nd node in the same machine,
always start it this way with the same command above.</p>

<p>Or run it in background:
<code>/usr/share/elasticsearch/bin/elasticsearch -d --default.path.conf=/etc/elasticsearch/</code>;</p>

<h1>Data manipulation in client</h1>

<p>Create a new index:</p>

<pre><code>curl -XPUT 'localhost:9200/blogs' -d '
{
   "settings" : {
      "number_of_shards" : 3,
      "number_of_replicas" : 1
   }
}'
</code></pre>

<p>List all indexes: <code>curl 'localhost:9200/_cat/indices?v'</code>;</p>

<p>For a index named &ldquo;test&rdquo;:</p>

<p>List all data in an index: <code>curl -XGET 'http://localhost:9200/test/_search?pretty'</code>;</p>

<p>Remove an index: <code>curl -XDELETE 'http://localhost:9200/test/'</code>,
wild card can be used here: <code>curl -XDELETE 'http://localhost:9200/logstash*/'</code>,
or many indexes at once: <code>curl -XDELETE 'http://localhost:9200/website,shakes*/'</code>,
separated by comma.</p>

<p>Put the result as well-formatted json:</p>

<pre><code>npm install -g json
curl 'localhost:9200/megacorp/employee/_search?pretty' | json
</code></pre>

<h1>Notes</h1>

<p>You can use
<code>curl 'localhost:9200/megacorp/employee/_search?pretty' | python -m json.tool</code>
in command line or <code>:%!python -m json.tool</code> in vim to format json string.
But it will sort your keys, and maybe not friendly to Unicode characters.</p>

<p>Do NOT delete &ldquo;mongodb_meta&rdquo; index in ES,
or you will get an error when starting <code>mongo-connector</code>:</p>

<blockquote><p>AttributeError: &lsquo;IndicesClient&rsquo; object has no attribute &lsquo;delete_mapping&rsquo;</p></blockquote>

<p>If you had deleted it, restart ES server to rebuild this index.</p>

<p><code>?petty</code> sometimes will be invalid url.</p>

<p>Format json in vim: <code>:%!json</code>.</p>

<h1>Ref:</h1>

<p><a href="http://stackoverflow.com/questions/352098/how-can-i-pretty-print-json">http://stackoverflow.com/questions/352098/how-can-i-pretty-print-json</a></p>

<p><a href="https://pascalprecht.github.io/2014/07/10/pretty-print-json-in-vim/">https://pascalprecht.github.io/2014/07/10/pretty-print-json-in-vim/</a></p>

<h1>Security</h1>

<p>Ref: <a href="https://www.elastic.co/downloads/shield">Security for Elasticsearch</a>.</p>

<p>Under directory &ldquo;/home/es/apps/elasticsearch-2.0.0&rdquo;, run:</p>

<pre><code>bin/plugin install elasticsearch/license/latest
bin/plugin install elasticsearch/shield/latest
bin/elasticsearch
bin/shield/esusers useradd es_admin -r admin
// input admin pwd: es@Newfairs2015
</code></pre>

<p>Elasticsearch authentication will affect kibana and mongo-connector,
make things too complicated. So I decided to remove authentication.
First stop elasticsearch server, then run:</p>

<pre><code>bin/plugin --help
bin/plugin list
bin/plugin remove shield
bin/plugin remove license
bin/elasticsearch
</code></pre>

<p>Finally start mongo-connector and kibana.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript Code Folding]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/19/090450/"/>
    <updated>2015-10-19T09:04:50+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/19/090450</id>
    <content type="html"><![CDATA[<p>Add codes below to ~/.vimrc
and run <code>vim +PluginClean +PluginInstall +qa</code>:</p>

<pre><code>" JavaScript code folding
set foldmethod=syntax
set foldlevelstart=3
let javaScript_fold=1

Plugin 'pangloss/vim-javascript'
</code></pre>

<p>Frequently used folding shortcuts:</p>

<p>zr/zm: decrease/increase the foldlevel by one;</p>

<p>zR/zM: open/close all folds;</p>

<p>zo/zc: open/close fold at cursor;</p>

<p>zO/zC: open/close all folds;</p>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/4789605/how-do-i-enable-automatic-folds-in-vim">http://stackoverflow.com/questions/4789605/how-do-i-enable-automatic-folds-in-vim</a>
<a href="https://www.linux.com/learn/tutorials/442438-vim-tips-folding-fun">https://www.linux.com/learn/tutorials/442438-vim-tips-folding-fun</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim Snippet Plugins]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/17/220931/"/>
    <updated>2015-10-17T22:09:31+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/17/220931</id>
    <content type="html"><![CDATA[<p>Add codes below into ~/.vimrc:</p>

<pre><code>let g:UltiSnipsEditSplit='vertical'

Plugin 'mattn/emmet-vim'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
</code></pre>

<p>Run <code>vim +PluginClean +PluginInstall +qa</code>.
The folder of UltiSnips is about 6.1MB, emmet-vim is about 1.6MB.</p>

<p>Here <a href="https://github.com/mattn/emmet-vim">emmet-vim</a> is a html editing tool.
For example open a new html file with <code>html:5</code>, and press <code>&lt;C-y&gt;,</code>,
you get a full html skeleton, which means emmet installed OK.</p>

<p><a href="https://github.com/sirver/ultisnips">UltiSnips</a> is a vim snippet engine,
while <a href="https://github.com/honza/vim-snippets">vim-snippets</a> is a bunch of
snippets definitions.</p>

<p>Use <code>UltiSnipsEdit</code> to add a new snippet.
Use <code>cl&lt;TAB&gt;</code> in a js file, to make it expand to <code>console.log(...);</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tab and Session Management in Vim]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/14/192323/"/>
    <updated>2015-10-14T19:23:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/14/192323</id>
    <content type="html"><![CDATA[<p>Session management is provided by <a href="https://github.com/tpope/vim-obsession">tpope/vim-obsession</a>.
Tab rename function is provided by <a href="https://github.com/gcmt/taboo.vim">gcmt/taboo.vim</a>.</p>

<p>In ~/.vimrc:</p>

<pre><code>" Customize tabline
hi TabLineFill term=bold cterm=bold ctermbg=0
hi TabLine ctermfg=Yellow

" Taboo
set sessionoptions+=tabpages,globals
cabbrev tr TabooRename

" tab switching shortcuts
noremap &lt;leader&gt;1 1gt
noremap &lt;leader&gt;2 2gt
noremap &lt;leader&gt;3 3gt
noremap &lt;leader&gt;4 4gt
noremap &lt;leader&gt;5 5gt
noremap &lt;leader&gt;6 6gt
noremap &lt;leader&gt;7 7gt
noremap &lt;leader&gt;8 8gt
noremap &lt;leader&gt;9 9gt
noremap &lt;leader&gt;0 :tablast&lt;cr&gt;

" Add these into Vundle section
Plugin 'gcmt/taboo.vim'
Plugin 'tpope/vim-obsession'
</code></pre>

<p>Now open file in a new tab with: <code>Ctrl-P</code>, select a file and <code>Ctrl-O, t</code>.
Open file in a virtical split window with: <code>Ctrl-P</code>, select a file and <code>Ctrl-O, v</code>.
Rename tab with: <code>:tr&lt;Space&gt;new name&lt;Enter&gt;</code>.
Jump to the 3rd window with <code>,3</code>.</p>

<p>Note:</p>

<p>I also tried <a href="https://github.com/xolox/vim-session">xolox/vim-session</a>,
but it can&rsquo;t persist tab name created by Taboo.</p>

<p>For tab easy switch, I&rsquo;ve tried <code>noremap &lt;unique&gt; &lt;C-1&gt; 1gt</code> based on
<a href="http://stackoverflow.com/questions/2005214/switching-to-a-particular-tab-in-vim">Switching to a particular tab in VIM</a>,
where changes M-Num to C-Num, because M-Num is assigned to tmux window switch.
However C-Num can&rsquo;t work,
see <a href="http://stackoverflow.com/questions/15849537/vimrc-mapping-for-control-key-not-working">.vimrc mapping for control key not working</a>
for explanations.
So I adopted <code>noremap &lt;leader&gt;1 1gt</code> style based on
<a href="http://superuser.com/questions/410982/in-vim-how-can-i-quickly-switch-between-tabs">In vim, how can I quickly switch between tabs?</a>.</p>

<p>Mapping long Ex commands with <code>cabbrev</code> is a very useful for convenient.
Use <Space> instead of <Tab> to enable abbreviation in <code>cabbrev</code>.
See <code>:h :ca</code>, <a href="http://stackoverflow.com/questions/117150/can-i-re-map-commands-in-vim">Can I (re-) map commands in vim?</a>
and <a href="http://stackoverflow.com/questions/3878692/aliasing-a-command-in-vim">Aliasing a command in vim</a>
for details.</p>

<p>With <code>cabbrev tr TabooRename</code>, you can use <code>:tr&lt;Space&gt;1:tests</code> to rename current tab into &ldquo;1:tests&rdquo;.
Here you have to add tab index manually to make <code>&lt;leader&gt;&lt;number&gt;</code> style switching more convenient.</p>

<p>To make tabline more readable,
I customized the color of it.
See <a href="http://stackoverflow.com/questions/4726882/how-do-you-change-the-background-color-of-the-empty-tab-space-in-vim">How do you change the background color of the empty tab space in vim?</a>
and <a href="http://stackoverflow.com/questions/7238113/customising-the-colours-of-vims-tab-bar">Customising the colours of vim&rsquo;s tab bar</a>
for details.</p>
]]></content>
  </entry>
  
</feed>
