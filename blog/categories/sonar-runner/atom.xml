<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sonar-runner | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/sonar-runner/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-11-03T17:15:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Analyze Java Code With Sonar on Ubuntu]]></title>
    <link href="http://leetschau.github.io/blog/2013/05/17/084555/"/>
    <updated>2013-05-17T08:45:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/05/17/084555</id>
    <content type="html"><![CDATA[<h1>Install Sonar Service</h1>

<ol>
<li><p><code>set JAVA_HOME=/usr/lib/jvm/default-java</code>(optional);</p></li>
<li><p>install database: <code>apt-get install mysql-server</code>;</p></li>
<li><p>download sonar-3.5.1.zip and extract to /opt/sonar-server;</p></li>
<li><p>test startup: <code>$SONAR_HOME/bin/linux-x86-32/sonar.sh console</code>, web browser: <a href="http://localhost:9000;">http://localhost:9000;</a></p></li>
<li><p>build database: root@chadpc56:/opt/sonar-server/sonar-3.5.1/extras/database/mysql# <code>mysql -u root -p &lt; create_database.sql</code>;</p></li>
<li><p>modify db config: comment out &ldquo;sonar.jdbc.url: jdbc:h2&hellip;&rdquo;, uncomment &ldquo;sonar.jdbc.url: jdbc:mysql&hellip;&rdquo; in $SONAR_SERVER/conf/sonar.properties;</p></li>
<li><p>verify db operations: <code>$SONAR_HOME/bin/linux-x86-32/sonar.sh console</code>, you can see many tables are created in mysql db, then <code>mysqlshow sonar -u sonar -p</code>, with password &ldquo;sonar&rdquo;, you can see a list of tables created;</p></li>
<li><p>start sonar service: <code>nohup $SONAR_HOME/bin/linux-x86-32/sonar.sh start 1&gt;/dev/null &amp;</code>, you can monitor its startup via <code>tail -f $SONAR_HOME/logs/sonar.log</code>;</p></li>
</ol>


<p>Note: If using zsh, you have to add <code>disown %1</code> to detach background job from current shell, or your background jobs will be killed when you logged out, even it was nohupped. (or you can add &ldquo;setopt nohup&rdquo; in .zshrc to the same effect).</p>

<h1>First Login Configuration</h1>

<ol>
<li>login <a href="http://localhost:9000">http://localhost:9000</a> with admin/admin;</li>
</ol>


<h1>Analyse Java Project with Sonar Runner</h1>

<ol>
<li><p><a href="http://docs.codehaus.org/display/SONAR/Installing+and+Configuring+Sonar+Runner">Installing and Configuring Sonar Runner</a>: download, extract, set environment variables, add to path, modify config file, verify (sonar-runner -h);</p></li>
<li><p><a href="http://docs.codehaus.org/display/SONAR/Analyzing+with+Sonar+Runner">Analyzing with Sonar Runner</a>: create sonar-project.properties under project root folder, run sonar runner at project root folder (sonar-runner), see result in sonar dashboard;</p></li>
</ol>


<p>Note: add sonar.login &amp; sonar.password in sonar-project.properties;</p>

<h1>Analyse Java Project with Ant Task</h1>

<h2>Build a Demo Java Project</h2>

<ol>
<li><p>apt-get install ant;</p></li>
<li><p>copy junit-4.11.jar and hamcrest-core-1.3.jar to lib folder of ant(/usr/share/ant/lib);</p></li>
<li><p>create build.xml:</p></li>
</ol>


<h2>Run Sonar</h2>

<ol>
<li><p>Download sonar-ant-task-2.1.jar;</p></li>
<li><p>Add sonar tasks into above build.xml;</p></li>
<li><p>Run sonar with <code>ant sonar</code>;</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
