<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Meteor | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/meteor/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-09-25T20:12:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add a Local Meteor Package]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/24/185036/"/>
    <updated>2015-09-24T18:50:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/24/185036</id>
    <content type="html"><![CDATA[<p>newfairs-v3 is the container project. newfairs-core is a package.</p>

<pre><code>meteor create newfairs-v3
cd newfairs-v3
meteor create --package newfairscommerce:core
cp -r ../newfairs-core packages
mv packages/core/{package.js,README.md} packages/newfairs-core/
rm -rf package/core
meteor add newfairscommerce:core
</code></pre>

<p>Then you have to define dependencies for this package with adding some
<code>api.use()</code> and loading order by adding some <code>api.addFiles(...)</code>
in packages/newfairs-core/package.js.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Webstorm as Meteor IDE]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/22/104351/"/>
    <updated>2015-09-22T10:43:51+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/22/104351</id>
    <content type="html"><![CDATA[<h1>Terminal</h1>

<p>In editor, use &ldquo;Alt-F12&rdquo; to activate terminal.
In terminal, use &ldquo;Shift-ESC&rdquo; or &ldquo;Alt-F12&rdquo; to go back to editor.
Double click terminal title bar to maximize the terminal panel.</p>

<p>Only run Meteor server in Webstorm&rsquo;s terminal.
Run all other terminal work (such as mongod, git, etc) in a external terminal.
Use &ldquo;Alt-Tab&rdquo; to switch between external terminal and Webstorm.</p>

<h1>Navigattion</h1>

<p>Toggle file browse pane with &ldquo;Alt-1&rdquo;.</p>

<p>Focus editor with &ldquo;ESC&rdquo;.</p>

<h1>Editor</h1>

<p>Split vertically/horizontally;</p>

<h2>Vim Plugin</h2>

<p>Install IdeaVim in [Settings -> Plugins] (open it with Ctrl-Shift-A).</p>

<p>Open/close it in [Tools -> Vim Emulator], or &ldquo;Alt-T Ctrl-Alt-V&rdquo;.</p>

<p>Close editor tab: :q</p>

<h1>Frequently Used Shortcuts</h1>

<p>Double shift: search everything;</p>

<p>Shift-Ctrl-N: search and open files;</p>

<p>Shift-Ctrl-A: search and run commands;</p>

<p>Alt-Left/Right: switch between editor tabs;</p>

<p>Ctrl-Shift-Enter: complate statement;</p>

<p>See [Help -> Default Keymap Reference] for all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autosave in Webstorm]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/22/092543/"/>
    <updated>2015-09-22T09:25:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/22/092543</id>
    <content type="html"><![CDATA[<p>Autosave related settings of Webstorm 10.0.4 are mostly in
[Settings -> Appearance &amp; Behavior -> System Settings -> Synchronization].</p>

<p>By default the &ldquo;Save files automatically &hellip;&rdquo; is unchecked.
So Webstorm will not save file changes before you press Ctrl-S.
<strong>But</strong> &ldquo;Save files on frame deactivation&rdquo; is checked.
So if you switch to another application other than Webstorm,
all changes unsaved will be saved to disk.
<strong>However</strong>, when you modify file A without save,
and switch to another tab to edit file B,
file A will not be saved, because this is not &ldquo;frame deactivation&rdquo; (why?).</p>

<p>This is convenient for Meteor development.
You can modify many files without save.
As you switch to browser, Webstorm will save all changes to disk,
then Meteor detects file changes and refreshes pages in browser.</p>

<p>In Webstorm 10.0.4 the Linux version,
the blue color of changed tabs is subtle (compared with that on Windows or Mac),
check &ldquo;Mark modified tabs with asterisk&rdquo;
in [Settings -> Editor -> General -> Editor Tabs] to make unsaved tabs easier to identify.</p>

<p>Finally note that &ldquo;Ctrl-S&rdquo; in Webstorm is &ldquo;save all&rdquo; instead of &ldquo;save&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Convert a Folder Into Meteor App in Webstorm]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/21/092600/"/>
    <updated>2015-09-21T09:26:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/21/092600</id>
    <content type="html"><![CDATA[<p>You&rsquo;ve cloned a repo from remote host into foler &ldquo;$HOME/docs/myapp&rdquo;.
So you can&rsquo;t use <code>meteor create myapp</code> to build a new Meteor app.</p>

<p>You can create this &ldquo;myapp&rdquo; under /tmp,
and <code>cp -r /tmp/myapp/.meteor $HOME/docs/myapp/</code>.</p>

<p>Now open $HOME/docs/myapp in Webstorm,
it&rsquo;s been a Meteor app already.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generate Random Date After a Specified Date]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/20/212102/"/>
    <updated>2015-09-20T21:21:02+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/20/212102</id>
    <content type="html"><![CDATA[<p>The following codes can display a random date within a month after the specified fair date.</p>

<pre><code>$ meteor create randomDate
$ cd randomDate
$ meteor add momentjs:moment
$ cat randomDate.html
&lt;head&gt;
  &lt;title&gt;Random Date&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  在 展会日期 输入框中输入日期，例如：2015-05-25，然后点击 评论 按钮。
  &lt;hr&gt;
  {{&gt; DatePanel}}
&lt;/body&gt;

&lt;template name="DatePanel"&gt;
  &lt;label&gt;展会日期：&lt;/label&gt;
  &lt;input type="text" id="fairDate"&gt;
  &lt;button&gt;评论&lt;/button&gt;
  &lt;p&gt;评论添加日期：{{commentDate}}&lt;/p&gt;
&lt;/template&gt;

$ cat randomDate.js
if (Meteor.isClient) {
  Template.DatePanel.helpers({
    commentDate: function () {
      return Session.get('commentDate');
    }
  });

  Template.DatePanel.events({
    'click button': function (e, t) {
      var dateStr = t.find("#fairDate").value;
      var fairDate = moment(dateStr);
      var randomDays = Math.floor((Math.random() * 30) + 1);
      var commentDate = fairDate.add(randomDays, 'days');
      var commStr = commentDate.format("YYYY-MM-DD");
      Session.set('commentDate', commStr);
    }
  });
}

$ meteor
</code></pre>
]]></content>
  </entry>
  
</feed>
