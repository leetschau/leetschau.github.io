<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Customize | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/customize/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-09-25T20:12:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add Customized Files and Folders Into Deployed Zip File Created by Gradle]]></title>
    <link href="http://leetschau.github.io/blog/2014/11/19/153734/"/>
    <updated>2014-11-19T15:37:34+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/11/19/153734</id>
    <content type="html"><![CDATA[<p>Creating deployed zip file with gradle is very convenient. But what if I want to add some customized files and folders into this file?</p>

<p>According to <a href="http://stackoverflow.com/questions/5743036/deploy-additional-files-in-gradle-application-plugin">Deploy additional files in Gradle Application Plugin</a>,
creat a &ldquo;dist&rdquo; folder under &ldquo;src&rdquo; in the root of project. Then everything under &ldquo;dist&rdquo; will be copied to zip file created by <code>gradle distZip</code> or <code>gradle installApp</code>.</p>

<pre><code>$ pwd
/home/chad/docs/GDEP-0811
$ mkdir -p src/dist/plugins
$ echo "pwd" &gt; src/dist/plugins/autocmd.sh
$ echo "config1: value1" &gt; src/dist/dep.conf
$ tree src/dist
src/dist
├── dep.conf
└── plugins
    └── autocmd.sh
$ gradle clean installApp
$ tree build/install/gdep
build/install/gdep
├── bin
│   ├── gdep
│   └── gdep.bat
├── dep.conf
├── lib
│   ├── commons-configuration-1.10.jar
│   └── ...
└── plugins
    └── autocmd.sh
$ gradle clean distZip
$ unzip -l build/distributions/gdep-0.4.zip
Archive:  build/distributions/gdep-0.4.zip
  Length      Date    Time    Name
---------  ---------- -----   ----
        0  2014-11-19 15:35   gdep-0.4/
      132  2014-09-29 17:01   gdep-0.4/dep.conf
        0  2014-11-19 15:20   gdep-0.4/plugins/
        6  2014-11-19 15:13   gdep-0.4/plugins/autocmd.sh
        0  2014-11-19 15:35   gdep-0.4/lib/
     7255  2014-11-19 15:35   gdep-0.4/lib/gdep-0.4.jar
    76643  2014-08-14 08:40   gdep-0.4/lib/...
        0  2014-11-19 15:35   gdep-0.4/bin/
     5369  2014-11-19 15:35   gdep-0.4/bin/gdep
     2727  2014-11-19 15:35   gdep-0.4/bin/gdep.bat
---------                     -------
  2180116                     20 files
</code></pre>

<p>Here the file &ldquo;dep.conf&rdquo; and folder &ldquo;plugins&rdquo; is copied directly from $PROJ_ROOT/src/dist.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize Login Screen of LinuxMint 17]]></title>
    <link href="http://leetschau.github.io/blog/2014/10/31/092340/"/>
    <updated>2014-10-31T09:23:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/10/31/092340</id>
    <content type="html"><![CDATA[<p>I think the default LinuxMint login screen is not cool, need a new backgroud picture.
How to change this backgroud picture? In LinuxMint 17 this is done by creating a new login &ldquo;Theme&rdquo; and use it.
According to <a href="http://www.windows-to-linux.com/2014/07/custom-login-screen-background-linux-mint-17/">Custom Login Screen Background On Linux Mint 17</a>
there is 3 steps to achieve this:</p>

<ol>
<li><p>Create a new theme based on the default theme;</p></li>
<li><p>Pack this theme;</p></li>
<li><p>Set it as the login theme.</p></li>
</ol>


<p>Firstly I choose a picture from Variety&rsquo;s Favorites folder as the new backgroud.
Then run following commands:</p>

<pre><code>sudo cp -r /usr/share/mdm/html-themes/Mint-X ~/StarWorld
cp ~/.config/variety/Favorites/fbdgbcb_-_imgur.jpg ~/StartWorld/bg.jpg
cp ~/.config/variety/Favorites/fbdgbcb_-_imgur.jpg ~/StartWorld/screenshot.jpg
# modify name &amp; description in ~/StarWorld/theme.info
tar czf star-world.tar.gz ~/StarWorld
</code></pre>

<p>Next login to Xfce desktop, startup &ldquo;Login Manager&rdquo;, add a new theme, choose star-world.tar.gz.</p>

<p>Now logout and see the effect.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize Vim Statusline]]></title>
    <link href="http://leetschau.github.io/blog/2014/06/26/180252/"/>
    <updated>2014-06-26T18:02:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/06/26/180252</id>
    <content type="html"><![CDATA[<p>The purpose of the customization is mainly to add full path to vim&rsquo;s statusline. I use <a href="https://github.com/bling/vim-airline">bling/vim-airline</a> to fulfill this.</p>

<h1>Install with Pathogen</h1>

<pre><code>git clone https://github.com/bling/vim-airline ~/.vim/bundle/vim-airline
</code></pre>

<h1>Customize Statusline</h1>

<p>Add the following 2 lines to ~/.vimrc:</p>

<pre><code>set laststatus=2
let g:airline_section_c='%F'
</code></pre>

<p>See <code>:h laststatus</code> for the meaning of &ldquo;laststatus&rdquo;.
See &ldquo;CUSTOMIZATION&rdquo; section of <code>:h airline</code> for the meaning of every section and its default contents.
See <code>:h statusline</code> for the meaning of &ldquo;%F&rdquo; and the name of all statusline items.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Name a Action Sequence and Invoke It in M-x Interface in Emacs]]></title>
    <link href="http://leetschau.github.io/blog/2013/10/16/105755/"/>
    <updated>2013-10-16T10:57:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/10/16/105755</id>
    <content type="html"><![CDATA[<h1>Question</h1>

<p>I am using nrepl in Emacs 24 as Clojure IDE. When I want to write some codes in a Clojure project(after starting Emacs), I have to repeat the following commands:
 M-x cd
 docs/clojurefiles/conways-game-of-life
 M-x nrepl-jack-in
 C-x 4 f src/conways_game_of_life/core.clj
I want to save all above actions as a command and invoke it in &ldquo;M-x&rdquo; interface. Following <a href="http://www.emacswiki.org/emacs/KeyboardMacros">this instruction</a> I record my actions and save it as &ldquo;last-kbd-macro&rdquo; in ~/.emacs file:
 F3
 M-x cd
 docs/clojurefiles/conways-game-of-life
 M-x nrepl-jack-in
 C-x 4 f src/conways_game_of_life/core.clj
 F4
 M-x name-last-kbd-macro<RET> start-conway-project
 M-x insert-kbd-macro<RET> start-conway-project
Now the following variable is added to my ~/.emacs file:
 (setq last-kbd-macro
 [?\M-x ?c ?d return ?d ?o ?c ?s ?/ ?c ?l ?o ?j ?u ?r ?e ?f ?i ?l ?e ?s ?/ ?c ?o ?n ?w ?a ?y ?s ?- ?g ?a ?m ?e ?- ?o ?f ?- ?l ?i ?f ?e return ?\M-x ?n ?r ?e ?p ?l ?- ?j ?a ?c ?k ?- ?i ?n return ?\C-x ?4 ?f ?s ?r ?c ?/ ?c ?o ?n ?w ?a ?y ?s ?<em> ?g ?a ?m ?e ?</em> ?o ?f ?<em> ?l ?i ?f ?e ?/ ?c ?o ?r ?e ?. ?c ?l ?j return])
And after restarting Emacs, I can use F4 to invoke this macro. However, what I want is defining my own command and invoke it in &ldquo;M-x&rdquo;. So I modify above definition as:
 (setq start-conway-project
 [?\M-x ?c ?d return ?d ?o ?c ?s ?/ ?c ?l ?o ?j ?u ?r ?e ?f ?i ?l ?e ?s ?/ ?c ?o ?n ?w ?a ?y ?s ?- ?g ?a ?m ?e ?- ?o ?f ?- ?l ?i ?f ?e return ?\M-x ?n ?r ?e ?p ?l ?- ?j ?a ?c ?k ?- ?i ?n return ?\C-x ?4 ?f ?s ?r ?c ?/ ?c ?o ?n ?w ?a ?y ?s ?</em> ?g ?a ?m ?e ?<em> ?o ?f ?</em> ?l ?i ?f ?e ?/ ?c ?o ?r ?e ?. ?c ?l ?j return])
But when I use &ldquo;M-x&rdquo; and input &ldquo;start-conway-project&rdquo;, there is a &ldquo;[no match]&rdquo; sign and it doesn&rsquo;t work.
What is the &ldquo;emacs&rdquo; way to define some actions as a command (macro or something else) and invoke it with &ldquo;M-x&rdquo;?</p>

<h1>Solution</h1>

<p>After adding the (setq last-kbd-macro &hellip;) to ~/.emacs, modify it as (fset &lsquo;start-conway-project &hellip;). That&rsquo;s it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize Code Template in Eclipse]]></title>
    <link href="http://leetschau.github.io/blog/2012/04/01/091245/"/>
    <updated>2012-04-01T09:12:45+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/04/01/091245</id>
    <content type="html"><![CDATA[<p>Window->Preferences->Java->Code Style->Code Templates:</p>

<p>  Comments->Types: Javadoc style of class, use Alt+Shift+J create;</p>

<p>  Code->New Java Files: Code Template of New Created Java Class File;</p>

<p>Check &ldquo;Automatically add comments for new methods and types&rdquo; if you want javadoc added to your new created java file automatically.</p>

<p>Here is my javadoc template of types:</p>

<p> /**</p>

<ul>
<li><p>${type_name}</p></li>
<li><p>@author <a href="mailto:leetschau@gmail.com">Chad</a></p></li>
<li><p>Created: ${date}</p></li>
<li><p>Last Modified: ${date}</p></li>
<li><p>${tags}</p></li>
</ul>


<p> */</p>
]]></content>
  </entry>
  
</feed>
