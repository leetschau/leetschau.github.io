<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 文件 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/wen-jian/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-02-02T16:10:00+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Eclipse编辑器配色的配置文件]]></title>
    <link href="http://leetschau.github.io/blog/2010/11/24/114443/"/>
    <updated>2010-11-24T11:44:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/11/24/114443</id>
    <content type="html"><![CDATA[<p>基本编辑器配色：${workspace}.metadata.plugins\org.eclipse.core.runtime.settings\org.eclipse.ui.editors.prefs Java语法配色：${workspace}.metadata.plugins\org.eclipse.core.runtime.settings\org.eclipse.jdt.ui.prefs XML语法配色：${workspace}.metadata.plugins\org.eclipse.core.runtime.settings\org.eclipse.wst.xml.ui.prefs Python语法配色（仅在安装了Pydev插件后有效）：${workspace}.metadata.plugins\org.eclipse.core.runtime.settings\org.python.pydev.prefs
手工配好编辑器颜色后（参见博文“手工设置Eclipse文本编辑器的配色”），将以上文件保存起来，对于一个新的Workspace，用以上文件覆盖自动生成的文件即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ivy文件说明]]></title>
    <link href="http://leetschau.github.io/blog/2010/10/24/114340/"/>
    <updated>2010-10-24T11:43:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/10/24/114340</id>
    <content type="html"><![CDATA[<p>ivy.xml文件  此文件用来定义某个模块（module）的依赖情况； <ivy-module version="2.0">表明该文件使用的哪个版本的ivy语法； <info .../>域说明是这个xml文件定义的是哪个module的依赖； 依赖的声明方法：在<a href="http://mvnrepository.com/%E6%90%9C%E7%B4%A2%E5%88%B0%E8%A6%81%E7%94%A8%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E5%90%8E%EF%BC%8C%E7%82%B9%E5%87%BB%E2%80%9Cdetail%E2%80%9D%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%AE%83%E5%9C%A8ivy%E4%B8%AD%E5%A6%82%E4%BD%95%E5%BC%95%E7%94%A8%EF%BC%88">http://mvnrepository.com/%E6%90%9C%E7%B4%A2%E5%88%B0%E8%A6%81%E7%94%A8%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85%E5%90%8E%EF%BC%8C%E7%82%B9%E5%87%BB%E2%80%9Cdetail%E2%80%9D%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%AE%83%E5%9C%A8ivy%E4%B8%AD%E5%A6%82%E4%BD%95%E5%BC%95%E7%94%A8%EF%BC%88</a><dependency org=,,,）； <publications>&hellip;</publications>标签说明自己开发的项目要发布的包（一般是jar文件），可为每个包定义一个所属的配置（configuration），以便于别人使用（参见tutorial->Using Ivy Module Configurations）； 可在此文件中自 定义 标签，以便于在dependency中使用，参见Ivy文档：Documentation (2.2.0) > Reference > Introduction > Main Concepts > Extra attributes；  build.xml文件  <project name="..." default="..." xmlns:ivy="antlib:org.apache.ivy.ant"> 只有声明了xmlns&hellip;，才能使用ivy指令（ivy ant task，如&lt;ivy:resolve &hellip;/>、&lt;ivy:retrieve &hellip;/>之类）；  ivy指令中，install用来从公共库中下载包到企业库中，resolve用来从企业库中获取包到本地ivy缓存（cache）中，retrieve用来从本地缓存取包到本地开发环境（project workspace）中，publish将本地编译好的包放入企业库中供其他项目使用； retrieve命令在脱离Eclipse环境下使用时需要先运行resolve命令，例如Eclipse下在javac之前需要如下任务：    <target  name= "resolve"  depends=  "init"  description= "..." >
     &lt;ivy:retrieve  pattern= &ldquo;${lib.dir}/[artifact]-[Revision].[ext]&rdquo; />
   </target>
 脱离Eclipse之后应写为如下形式：
    <target  name= "resolve"  depends=  "init"  description= "..." >
     &lt;ivy:resolve  file= &ldquo;./ivy_file.xml&rdquo; />
     &lt;ivy:retrieve  pattern= &ldquo;${lib.dir}/[artifact]-[Revision].[ext]&rdquo; />
   </target></p>

<p>   ivysettings.xml文件  resolvers链是在 resolvers标签的chain子标签 中定义的，一个artifact会用这个链中的resolver依次查找； resolver的功能包括两部分：一是寻找依赖项目的ivy文件，二是寻找依赖项目的产品（artifact）；resolver确定了库的位置，常见的有IBiblio resolver（从maven库中取包）、sftp resolver（企业架设共享库服务器）和FileSystem resolver（本机上的库）三种； 如果出现模块描述文件（module descriptions，如ivy文件）与产品（module artifacts，如jars）分离的情况，可在本文件中用dual标签定义各自的位置； properties标签从一个properties文件里提取值保存到变量中，这是一种灵活且方便的设置变量的方法； settings标签进行一些初始化工作，例如cache目录位置的定义、定义默认resolver等；   modules标签定义哪个module使用哪个resolver（发布时有用），未提及的module使用默认resolver，使用这个标签可以为项目自制产品定义专门的resolver，例如：   &lt; modules  >
 &lt; module  organisation  =  &ldquo;com.boco&rdquo;  name  =  &ldquo;g*&rdquo;  matcher  =  &ldquo;glob&rdquo;  resolver  =  &ldquo;home-made&rdquo;  />
 </ modules  ></p>
]]></content>
  </entry>
  
</feed>
