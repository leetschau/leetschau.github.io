<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 级别 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/ji-bie/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-30T16:15:37+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Log4j日志的输出级别设置]]></title>
    <link href="http://leetschau.github.io/blog/2010/07/26/170859/"/>
    <updated>2010-07-26T17:08:59+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/07/26/170859</id>
    <content type="html"><![CDATA[<p>log4j日志文件的输出级别分为7级，由高到低依次是：off, fatal, error, warn, info, debug, all。</p>

<p> 在“log4j.properties”文件的log4j.appender.***.Threshold属性中设置输出的优先级，例如log4j.appender.stdout.Threshold=DEBUG。</p>

<p> 比自己低级别的输出将不会出现在对应的log文件里，例如设置为error，则warn,info,debug级别的日志不写入log文件，设置为info则debug信息不写入log文件。通过在不同的log文件里设置不同的Threshold级别的方法，可以已达到分类输出的目的，例如错误日志文件专门记录error，信息日志记录除调试信息以外的日志，调试日志记录所有输出的日志。</p>

<p> 除了针对appender设置屏蔽级别，还可以针对某一个类设置屏蔽级别，例如：</p>

<p>  log4j.logger.com.boco.godu.GAPI.impl.Connection=WARN</p>

<p> 这样com.boco.godu.GAPI.impl.Connectio类中所有级别低于WARN的日志都不会输出。</p>
]]></content>
  </entry>
  
</feed>
