<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Pattern Matching | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/pattern-matching/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-07-15T11:08:23+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scala的模式匹配]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/16/170917/"/>
    <updated>2014-12-16T17:09:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/16/170917</id>
    <content type="html"><![CDATA[<p>下面是一个RDD，每一个元素是一个Array，这个Array由几个tuple组成，
现在需要将其中第二个元素是13的tuple（比如(-36522769,13)）的一个元素后面追加字符串".000"，其余不变，
实现方法如下：</p>

<pre><code>val data = RDD[Array[(String, Int)]] = RDD(
        Array((-36522769,13), (8014,14), (2014-09-19 00:10:47,17), (3,18), (FF-693960651,134)),
        Array((-905910021.0000000000,13), (200,14), (2014-09-19 00:02:11,17), (3,18), (FF--112226702,134)),
        Array((-2033866158.0000000000,13), (200,14), (2014-09-19 00:07:12,17), (3,18), (FF--112226702,134)),
        Array((1712341836.0000000000,13), (200,14), (2014-09-19 00:07:06,17), (3,18), (FF--112226702,134)),
        Array((-896432680.0000000000,13), (8014,14), (2014-09-19 00:12:17,17), (3,18), (FF-693960651,134)),
        Array((-1205034451.0000000000,13), (200,14), (2014-09-19 00:07:21,17), (3,18), (FF--112226702,134)),
        Array((-2117505875.0000000000,13), (15089,14), (2014-09-19 00:41:47,17), (2,18), (FF-1139491304,134))) 

val res = data.map(x =&gt; x.map { case (y,13) =&gt; (y + ".000", 13)
                                case z =&gt; z
                              })
</code></pre>

<p>如果把13变为一个变量，比如<code>val BAD_NUM = 13</code>, 这时直接改写为<code>case (y, BAD_NUM) =&gt; ...</code>，将出现错误，
因为解析器将BAD_NUM视为一个自由变量，而不是外部等于13的那个变量，解决方法是用反引号把BAD_NUM扩起来，写为：</p>

<pre><code>case (y, `BAD_NUM`) =&gt; (y + ".000", BAD_NUM)
</code></pre>

<p>推荐文章：</p>

<p><a href="http://kerflyn.wordpress.com/2011/02/14/playing-with-scalas-pattern-matching/">Playing with Scala’s pattern matching</a>;</p>

<p><a href="http://docs.scala-lang.org/tutorials/tour/pattern-matching.html">Pattern Matching in Scala Documenation</a></p>

<p><a href="http://docs.scala-lang.org/cheatsheets/">Pattern matching section in Scala cheatsheet</a></p>
]]></content>
  </entry>
  
</feed>
