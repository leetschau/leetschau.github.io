<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Awk | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/awk/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-06-04T20:48:19+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Awk Notes]]></title>
    <link href="http://leetschau.github.io/blog/2014/04/10/095838/"/>
    <updated>2014-04-10T09:58:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/04/10/095838</id>
    <content type="html"><![CDATA[<ul>
<li><p>Print the last line: awk &lsquo;END{print $0}&rsquo;</p></li>
<li><p>Print the second last field: awk &lsquo;{print $(NF-1)}&rsquo;</p></li>
<li><p>Print the second last field of last line: awk &lsquo;END{print $(NF-1)}&rsquo;</p></li>
<li><p>Set a complex delimiter: awk -F &lsquo;, &rsquo; &lsquo;END{print $(NF-1)}&rsquo;</p></li>
</ul>


<p>Note: You can&rsquo;t use double quotes instead of single quotes, or an error raises.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Total Testcase Number in JUnit Report File With Grep and Awk]]></title>
    <link href="http://leetschau.github.io/blog/2013/12/06/111936/"/>
    <updated>2013-12-06T11:19:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/12/06/111936</id>
    <content type="html"><![CDATA[<p>Under $JENKINS_HOME/jobs/GSP/workspace/build/work/plugins(we call this folder as &ldquo;basedir&rdquo;), there are many bundle folders. Some of them were compiled, so there are many test report file &ldquo;TEST-<full-name>.xml&rdquo; in <bundle-name>/build/unittest_report, for example, com.boco.gsp.element.decision.config/build/unittest_report/TEST-com.boco.gsp.decision.config.parser.DecisionParserTest.xml. The content of this file is:</p>

<p> &lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo; ?></p>

<p> <testsuite errors="0" failures="0" hostname="
pwm" name="com.boco.gsp.decision.config.parser.DecisionParserTest" tests="3" time="0.127" timestamp="2013-12-05T19:25:11"></p>

<p>  <properties></p>

<p>   &hellip;</p>

<p> </testsuite></p>

<p>In this case the testcase number is 3 according to &lsquo;test=&ldquo;3&rdquo;&rsquo;. Now we need get the total number of testcases with following steps:</p>

<ol>
<li><p>find all these test report file under ${basedir};</p></li>
<li><p>get the testcase number;</p></li>
<li><p>add all these number up;</p></li>
<li><p>print the result;</p></li>
</ol>


<p>We achieve this by the following command under ${basedir}:</p>

<p> grep -Po &lsquo;(?&lt;=tests=&ldquo;)\d+&rsquo; <em>*/TEST-</em>.xml | awk -F':&lsquo; &rsquo;{SUM += $2; print $1 &rdquo;: &ldquo; $2} END {print "Total: &rdquo; SUM}'</p>

<p>&ldquo;-P&rdquo; let grep interpret pattern as perl regular expression. &ldquo;-o&rdquo; means only output the matched part. &ldquo;(?>=&hellip;)&rdquo; eliminates the text in parenthesis. &ldquo;-F&rdquo; of awk specify the delimiter. This command works on zsh because the &ldquo;<em>*/</em>&rdquo; syntax only valid on zsh. If you use bash, you have to modify this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[日志核查工具脚本业务逻辑]]></title>
    <link href="http://leetschau.github.io/blog/2010/09/20/103757/"/>
    <updated>2010-09-20T10:37:57+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/09/20/103757</id>
    <content type="html"><![CDATA[<p>用户确定线程号qth和时间范围[qst, qet]；</p>

<p>读入文本文件；</p>

<p>将有效行标志位vline设为false；</p>

<p>读入第一行数据，判断是否为日志输出；</p>

<p>若是：提取线程号thread_no和时间cur_time，将vline设为true；</p>

<p>否则：</p>

<p>若vline=true，输出该行</p>

<p>否则忽略该行；</p>

<p>若线程号不是qth 忽略该行；</p>

<p> 若cur_time&lt;qst忽略该行；</p>

<p> 输出本行数据，循环读入下一行文本；</p>

<p> 用grep -n定位起始位置，awk先判断时间范围，再判断线程号，当时间超出上限时，直接退出（close），不必读后续行（next）。</p>

<p>echo &ldquo;Please input thread number:&rdquo;
read qth
echo &ldquo;Please input start time:&rdquo;
read qst
echo &ldquo;Please input end time:&rdquo;
read qet</p>

<h1>echo $qth</h1>

<p>awk &lsquo;BEGIN{
   isLogLine=0;
   qth=&rsquo;&ldquo;$qth&rdquo;&lsquo;;
   qst=&rsquo;&ldquo;$qst&rdquo;&lsquo;;
   qet=&rsquo;&ldquo;$qet&rdquo;&lsquo;;
 }
 {
  if(substr($3,2,7)==&ldquo;thread_&rdquo;){ #检查是否为日志输出列</p>

<p>   thread_no=substr($3,9,length($3)-9);
   if(thread_no==qth){
    print &ldquo;the thread is in line:&rdquo;
    print NR
   }
  }
 }&lsquo; logex</p>
]]></content>
  </entry>
  
</feed>
