<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tortoisehg | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/tortoisehg/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-09-25T20:12:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TortoiseHg使用笔记]]></title>
    <link href="http://leetschau.github.io/blog/2012/04/01/171510/"/>
    <updated>2012-04-01T17:15:10+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/04/01/171510</id>
    <content type="html"><![CDATA[<h1>安装Mercurial(Hg)</h1>

<p>在 Mercurial官网 下载Mercurial（mercurial-1.8.0-x86.msi），装完后就可以通过命令行使用Hg了，然后下载安装图形界面（tortoisehg-2.0.0-hg-1.8-x86.msi）；</p>

<h1>将文件编码设为中文</h1>

<p>以保证提交信息中的中文能够正确显示：Workbench->File->Settings->TortoiseHg->UI language: zh_CN;</p>

<h1>新建repo</h1>

<p>Workbench->File->New Repository;</p>

<p> 选择repo路径；</p>

<h1>增加文件：告诉Hg哪些文件需要版本跟踪；</h1>

<p>依次选择repo名、Working Directory，在右下角任务区里勾选要进行版本管理的文件，右键“增加”；</p>

<h1>提交文件：将当前状态保存为版本；</h1>

<p>为了避免大量未识别文件（unknown型）占据任务列表，在“状态”过滤器中取消勾选"unknown"；</p>

<p>选中已增加的文件，写好提交记录信息后，点“提交”，这样当前的状态就进入版本控制了；</p>

<h1>更新文件</h1>

<p>在Eclipse里修改了文件，在Workbench中选中"Working Directory"然后点“刷新”按钮就可以看到修改的文件，因为这次修改是针对"Working Directory"的，其他版本不存在修改文件的问题；</p>

<p>如果需要提交，在提交信息里写好记录，点击“提交”即可；</p>

<h1>删除Repo</h1>

<p>首先在Workbench里删除repo（如下图），然后删除repo（e:\MyDoc\JEx\Ex1\src）下的.hg目录和.hgignore文件即可；</p>

<h1>团队合作</h1>

<p>假设ly想要从chad代码库中导入一个项目，修改后推送给chad，假设chad机器的主机名是chadpc（用"ipconfig/all"可以查看），过程如下：</p>

<ol>
<li><p>chad启动一个Web Server，供ly导入：【仓库->Web服务器->设置】，“SSL加密推送”设为为“否”，“允许推送”后面写上“*”，表示任何人都可以推送给本Web服务器，然后点击“启动”，用“<a href="http://chadpc:8000%E2%80%9D%E6%B5%8B%E8%AF%95%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%98%AF%E5%90%A6%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F%EF%BC%88chadpc%E6%98%AF%E6%9C%BA%E5%99%A8%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D%EF%BC%8C%EF%BC%9B">http://chadpc:8000%E2%80%9D%E6%B5%8B%E8%AF%95%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%98%AF%E5%90%A6%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F%EF%BC%88chadpc%E6%98%AF%E6%9C%BA%E5%99%A8%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D%EF%BC%8C%EF%BC%9B</a></p></li>
<li><p>ly：【文件->克隆仓库】，“源”后面写“<a href="http://chadpc:8000%E2%80%9D%EF%BC%8C%E2%80%9C%E7%9B%AE%E6%A0%87%E2%80%9D%E5%90%8E%E9%9D%A2%E5%86%99%E6%83%B3%E8%A6%81%E5%AF%BC%E5%87%BA%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%9B">http://chadpc:8000%E2%80%9D%EF%BC%8C%E2%80%9C%E7%9B%AE%E6%A0%87%E2%80%9D%E5%90%8E%E9%9D%A2%E5%86%99%E6%83%B3%E8%A6%81%E5%AF%BC%E5%87%BA%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%9B</a></p></li>
<li><p>ly修改克隆后的项目中的某个文件；</p></li>
<li><p>ly将修改提交到本地代码库；</p></li>
<li><p>ly推送（push）给chad；</p></li>
<li><p>chad将本地版本的head更新到ly推送的版本：选中本地头版本，右键->更新。</p></li>
</ol>


<p>chad也可以从ly处“拉”（pull）更新到本地仓库：</p>

<ol>
<li><p>ly修改完代码后启动自己的Hg Web Server;</p></li>
<li><p>chad点击“检查可以从指定URL拉取的更改”，点击“接受”，将ly的代码拉到自己的仓库中：</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
