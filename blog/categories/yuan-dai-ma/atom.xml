<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 源代码 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/yuan-dai-ma/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-09-20T21:23:24+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[基于ivy的源代码调试方法]]></title>
    <link href="http://leetschau.github.io/blog/2011/03/09/111841/"/>
    <updated>2011-03-09T11:18:41+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/03/09/111841</id>
    <content type="html"><![CDATA[<p>项目PORJ_TEST是项目PROJ的测试项目。在它的ivy中引用了PROJ的jar包。由于PROJ正处于开发阶段，源代码更改频繁， 在运行PROJ_TEST中的测试时，需要进入PROJ的jar包内部设置断点、调试源代码。传统的方法是在PROJ_TEST的Build Path中添加PROJ项目，但这样显然与ivy中定义的引用发生了冲突，且容易在打包时出现问题，怎样让ivy引用的jar包也能提高源代码？方法如下：
PROJ项目的ivy.xml文件（ivy配置文件）：</p>

<p> <ivy-module version="2.0" ></p>

<p> <info organisation="..." module="proj" revision="alpha" status="integration"/></p>

<p> <configurations></p>

<p> <conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/></p>

<p> <conf name="test" visibility="public" description="used for the test project of gapi" extends="compile"/></p>

<p> <conf name="compile" visibility="private" description="used for compile the artifact only"/></p>

<p> <conf name="sources" visibility="public" description="contains the source artifact of this module"/></p>

<p> </configurations></p>

<p> <publications></p>

<p> <artifact name="gapi" type="jar" ext="jar" conf="master"/></p>

<p> <artifact name="gapi" type="source" ext="jar" conf="sources"/></p>

<p> </publications></p>

<p> <dependencies></p>

<p> <dependency .../></p>

<p> <dependency .../></p>

<p> </dependencies></p>

<p> </ivy-module></p>

<p> PROJ项目的build.xml文件（Ant构建脚本）：</p>

<p> &lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?></p>

<p> <project name="PROJ" basedir="./" default="publish_jar" xmlns:ivy="antlib:org.apache.ivy.ant"></p>

<p> <property name="src.dir" value="${basedir}/src" /></p>

<p> <property name="build.dir" value="${basedir}/build" /></p>

<p> <property name="build.class.dir" value="${build.dir}/class" /></p>

<p> <property name="build.dist.dir" value="${build.dir}/dist" /></p>

<p> <property name="build.javadoc.dir" value="${build.dir}/javadocs" /></p>

<p> <property name="build.lib.dir" value="${build.dir}/lib" /></p>

<p> <property name="vendor.name" value="LC_COM" /></p>

<p> <property name="product.name" value="proj" /></p>

<p> <property name="publish.resolver" value="test-repo" /></p>

<p> <tstamp></p>

<p> <format property="build.date" pattern="yyyyMMdd" /></p>

<p> <format property="build.time" pattern="HH:mm:ss" /></p>

<p> </tstamp></p>

<p> <path id="lib.path"></p>

<p> <fileset dir="${build.lib.dir}"></p>

<p> <include name="**/*.jar"/></p>

<p> </fileset></p>

<p> </path></p>

<p> <target name="clean"></p>

<p> <delete dir="${build.dir}"/></p>

<p> </target></p>

<p> <target name="init" depends="clean"></p>

<p> <mkdir dir="${build.dir}"/></p>

<p> <mkdir dir="${build.class.dir}"/></p>

<p> <mkdir dir="${build.dist.dir}"/></p>

<p> <mkdir dir="${build.lib.dir}"/></p>

<p> &lt;ivy:settings file=&ldquo;../ivysettings.xml&rdquo;/></p>

<p> &lt;ivy:resolve/></p>

<p> &lt;ivy:retrieve pattern=&ldquo;${build.lib.dir}/[artifact]-[revision].[ext]&rdquo;/></p>

<p> </target></p>

<p> <target name="compile" depends="init"></p>

<p> &lt;javac srcdir=&ldquo;${src.dir}&rdquo; destdir=&ldquo;${build.class.dir}&rdquo;</p>

<p> classpathref=&ldquo;lib.path&rdquo; encoding=&ldquo;GBK&rdquo; debug=&ldquo;true&rdquo;/></p>

<p> </target></p>

<p> <target name="create_jar" depends="compile"></p>

<p> <jar destfile="${build.dist.dir}/${product.name}-${ivy.revision}-jar.jar" basedir="${build.class.dir}"></p>

<p> <manifest></p>

<p> <attribute name="Vendor" value="${vendor.name}" /></p>

<p> <attribute name="Product-Name" value="${product.name}" /></p>

<p> <attribute name="Version" value="${ivy.revision}" /></p>

<p> <attribute name="Build-Date" value="${build.date}" /></p>

<p> <attribute name="Build-Time" value="${build.time}" /></p>

<p> </manifest></p>

<p> </jar></p>

<p> <jar destfile="${build.dist.dir}/${product.name}-${ivy.revision}-source.jar" basedir="${src.dir}"></p>

<p> <manifest></p>

<p> <attribute name="Vendor" value="${vendor.name}" /></p>

<p> <attribute name="Product-Name" value="${product.name}" /></p>

<p> <attribute name="Version" value="${ivy.revision}" /></p>

<p> <attribute name="Build-Date" value="${build.date}" /></p>

<p> <attribute name="Build-Time" value="${build.time}" /></p>

<p> </manifest></p>

<p> </jar></p>

<p> </target></p>

<p> <target name="publish_jar" depends="create_jar"></p>

<p> &lt;ivy:publish artifactspattern=&ldquo;${build.dist.dir}/[artifact]-[revision]-[type].[ext]&rdquo;</p>

<p> resolver=&ldquo;${publish.resolver}&rdquo; status=&ldquo;integration&rdquo; overwrite=&ldquo;true&rdquo;/></p>

<p> <echo message="publish complete."/></p>

<p> </target></p>

<p> </project></p>

<p>PROJ_TEST项目的ivy.xml文件：</p>

<p> <ivy-module version="2.0" ></p>

<p> <info organisation="..." module="proj_test" revision="alpha" status="integration" publication="20101121175043"/></p>

<p> <configurations></p>

<p> <conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/></p>

<p> <conf name="compile" visibility="private" description="used for compile the artifact only"/></p>

<p> <conf name="test" visibility="public" description="used for the test project of gapi" extends="compile"/></p>

<p> </configurations></p>

<p> <publications></p>

<p> <artifact name="gapi_test" type="jar" ext="jar" conf="master"/></p>

<p> </publications></p>

<p> <dependencies></p>

<p> <dependency org="..." name="proj" rev="alpha" conf="compile->master,test" changing=&ldquo;true&rdquo;/></p>

<p> <dependency .../></p>

<p> <dependency .../></p>

<p> </dependencies></p>

<p> </ivy-module></p>
]]></content>
  </entry>
  
</feed>
