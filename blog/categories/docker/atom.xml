<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Docker | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/docker/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-08-05T17:36:08+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Run MongoDB Server on Docker in VPS]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/15/142023/"/>
    <updated>2015-05-15T14:20:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/15/142023</id>
    <content type="html"><![CDATA[<pre><code>sudo usermod -aG docker your-user
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build BVT System Based on Docker]]></title>
    <link href="http://leetschau.github.io/blog/2014/09/03/150610/"/>
    <updated>2014-09-03T15:06:10+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/09/03/150610</id>
    <content type="html"><![CDATA[<p>System: ArchLinux 64bit, IP address: 10.32.1.18.</p>

<h1>Build</h1>

<pre><code>sudo docker -p 8080:8080 --name myjenkins jenkins
</code></pre>

<p>Now you can access <a href="http://10.32.1.18:8080">jenkins server</a> in browser.</p>

<p>List running containers: <code>sudo docker ps</code> (so you can get the container&rsquo;s name for stoping and restarting later);</p>

<p>Stop jenkins server: <code>sudo docker stop myjenkins</code>;</p>

<p>Restart this server: <code>sudo docker start myjenkins</code>;</p>

<h1>Backup and Restore</h1>

<p>Backup image: <code>sudo docker save -o jenkins-docker.tar jenkins</code>;</p>

<p>Restore image: <code>sudo docker load -i jenkins-docker.tar</code>;</p>

<p>Backup container:</p>

<pre><code>(optional) sudo docker stop jenkins
sudo docker export myjenkins &gt; mybvt-system.tar
scp mybvt-system.tar chad@laptop:~/
ssh chad@laptop
cat mybvt-system.tar | sudo docker import - exampleimagelocal:new
</code></pre>

<p>But where is the imported container?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Notes]]></title>
    <link href="http://leetschau.github.io/blog/2014/08/30/104928/"/>
    <updated>2014-08-30T10:49:28+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/08/30/104928</id>
    <content type="html"><![CDATA[<h1>Mint</h1>

<pre><code># sudo aptitude update
# sudo aptitude install docker.io aufs-tools cgroup-lite apparmor-utils
# sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker
# sudo sed -i '$acomplete -F _docker docker' /etc/bash_completion.d/docker.io
# docker run ubuntu:14.04 echo 'hello ubuntu'
# docker version
Client version: 0.9.1
Go version (client): go1.2.1
Git commit (client): 3600720
Server version: 0.9.1
Git commit (server): 3600720
Go version (server): go1.2.1
Last stable version: 1.2.0, please update docker
</code></pre>

<h1>ArchLinux</h1>

<p>Docker is only available on X86_64 repository so far.</p>

<pre><code># pacman -S docker
# systemctl enable docker
# systemctl start docker
# docker run ubuntu:14.04 echo 'hello world'
# docker run -i -t ubuntu:14.04 /bin/bash
# lsb_release -a
Distributor ID: Ubuntu
Description: Ubuntu 14.04.1 LTS
Release: 14.04
Codename: trusty
# exit
# docker version
Client version: 1.2.0
Go version (client): go1.3.1
OS/Arch (client): linux/amd64
Server version: 1.2.0
Server API version: 1.14
Go version (server): go1.3.1
</code></pre>

<p>So you can see at least for now Docker is much newer and easy to use on Arch than on Mint (Ubuntu).
If you install &ldquo;tree&rdquo; with apt-get in the container, logout and relogin, you will find the &ldquo;tree&rdquo; command disappeared.</p>
]]></content>
  </entry>
  
</feed>
