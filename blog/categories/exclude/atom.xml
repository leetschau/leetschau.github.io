<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Exclude | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/exclude/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-06-04T20:48:19+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javadoc动作中排除某些类]]></title>
    <link href="http://leetschau.github.io/blog/2011/06/13/111815/"/>
    <updated>2011-06-13T11:18:15+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/06/13/111815</id>
    <content type="html"><![CDATA[<p>设计产品的类结构时，有些类的作用是与产品的其他部分交互，因此必须是public类型的，但又不希望暴露给用户，因此打产品包的javadoc时，这些类是不生成javadoc的。假设某个包里共有10个接口，其中有一个是不生成javadoc的，写出另外9个接口名显然是很dirty的方法，比较好的方法是定义一个exclude，例如：</p>

<p><target name="javadoc" depends="compile"></p>

<pre><code>&lt;javadoc sourcepath="${src.dir}" destdir="${build.javadoc.dir}"

    encoding = "GBK" docencoding = "GBK"

    packagenames ="com.boco.godu.gapi.exception" &gt;

    &lt; sourcefiles &gt;

       &lt; fileset dir="${src.dir}/com/boco/godu/gapi"&gt;

           &lt;include name="*.java"/&gt;

           &lt; exclude name="IConnPool.java"/&gt;

       &lt;/fileset&gt;

    &lt;/ sourcefiles &gt;

&lt;/javadoc&gt;
</code></pre>

<p></target></p>

<p>上面的例子表明，对于整个包（package）统一生成javadoc的，采用的内嵌的packagenames定义（可以用逗号隔开多个包名），对于需要exclude的包，用<sourcefiels>+<fileset>定义，可以非常方便的使用exclude功能。</p>
]]></content>
  </entry>
  
</feed>
