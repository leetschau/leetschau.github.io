<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tco | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/tco/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-02-21T11:06:40+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TCO in Python]]></title>
    <link href="http://leetschau.github.io/blog/2013/12/11/174636/"/>
    <updated>2013-12-11T17:46:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/12/11/174636</id>
    <content type="html"><![CDATA[<p>TCO (Tail Recursion Optimization) will probably never be supported by CPython
because Guido believe TCO will make debugging difficult by messing up tracebacks.</p>

<p>Try the following scripts:</p>

<pre><code>cnt = 1000

def trisum(n, csum): 
  if n == 0: 
    return csum 
  else: 
    return trisum(n-1, csum+n) 
print trisum(cnt,0) 
</code></pre>

<p>It runs OK when cnt is 10 or 100, but when it&rsquo;s 1000 a runtime error raised:
&ldquo;RuntimeError: maximum recursion depth exceeded&rdquo;.</p>

<p>You can always use iteration to replace recursion like that in the following
reference, but that is not FP.</p>

<p>Ref: <a href="http://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion">http://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion</a></p>
]]></content>
  </entry>
  
</feed>
