<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: eat.wordpress.post | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/eat-dot-wordpress-dot-post/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-18T14:12:11+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java语言子类调用父类构造函数的规则]]></title>
    <link href="http://leetschau.github.io/blog/2013/04/16/120452/"/>
    <updated>2013-04-16T12:04:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/04/16/120452</id>
    <content type="html"><![CDATA[<p>子类初始化时，调用父类构造函数的规则是：如果父类没有任何构造函数，系统会</p>

<ul>
<li><p>父类如果没有任何构造函数，系统会自动为父类生成一个无参构造函数，如果父类有带参构造函数，系统不会为父类生成无参构造函数；</p></li>
<li><p>如果父类和子类的构造函数都有参数且参数列表一样（包括参数的个数、类型、顺序），子类如果想调用父类的构造方法，必须在构造函数第一行用super(params)显式调用，否则子类的构造函数会去找父类的默认（无参）构造函数；</p></li>
<li><p>如果父类有无参构造函数，子类的构造函数除非显式用super(params)调用父类的带参构造函数，否则一定会执行父类的无参构造函数（不需要写super()）；</p></li>
</ul>


<p>参考：google &ldquo;java constructor&rdquo;, <a href="http://www.leepoint.net/notes-java/oop/constructors/constructor.html">http://www.leepoint.net/notes-java/oop/constructors/constructor.html</a></p>

<h1>父类有默认构造函数时</h1>

<p> class SuperClass {
  public SuperClass() {
   System.out.println(&ldquo;I am the super class.&rdquo;);
  }
  public SuperClass (String name) {
   System.out.println(&ldquo;I am the super class with a name: &rdquo; + name);
  }</p>

<p>  public SuperClass (int age) {
   System.out.println(&ldquo;I am sub class with age: &rdquo; + age);
  }</p>

<p> }
 public class TestedSubClass extends SuperClass {
  public TestedSubClass(){
   System.out.println(&ldquo;I am sub class&rdquo;);
  }
  public TestedSubClass(String name){
   super(name);
   System.out.println(&ldquo;I am sub class with a name: &rdquo; + name);
  }
  public TestedSubClass(int age) {
   System.out.println(&ldquo;I am sub class with age: &rdquo; + age);
  }</p>

<p>  public static void main(String[] args) {
   TestedSubClass tsc = new TestedSubClass();
   TestedSubClass tsc2 = new TestedSubClass(&ldquo;chad&rdquo;);
   TestedSubClass tsc3 = new TestedSubClass(33);
  }
 }</p>

<p>运行结果：</p>

<p> [java] I am the super class.
 [java] I am sub class
 [java] I am the super class with a name: chad
 [java] I am sub class with a name: chad
 [java] I am the super class.
 [java] I am sub class with age: 33</p>

<p>当父类有默认（无参数）构造函数情况下，子类初始化时，除非子类用super(param)显式调用其他构造函数，否则一定会执行父类的默认构造函数，不论子类初始化时有没有参数。</p>

<h1>父类无默认构造函数</h1>

<p>如果仅将父类的默认（无参）构造函数去掉重新运行，报找不到初始化方法错误，原因是当父类有带参构造函数时，系统不为父类生成构造函数，而第1次和第3次初始化子类对象时，会调用父类的无参构造方法，所以报错；</p>

<p>如果去掉父类中所有的构造函数，子类中保留无参和int参数两个构造函数，运行正常；</p>

<p>如果仅保留父类和子类的String参数构造方法，初始化运行正常；</p>
]]></content>
  </entry>
  
</feed>
