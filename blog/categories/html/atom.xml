<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Html | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-11-28T08:48:37+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim as a HTML Editor]]></title>
    <link href="http://leetschau.github.io/blog/2014/11/27/092846/"/>
    <updated>2014-11-27T09:28:46+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/11/27/092846</id>
    <content type="html"><![CDATA[<h1>Jump between matching HTML and XML tags</h1>

<p>In normal mode, use &ldquo;vat&rdquo; to select all texts between these matching tags,
then use &ldquo;o&rdquo; to jump between matching tags.</p>

<p>In &ldquo;vat&rdquo;, &ldquo;v&rdquo; means select,
&ldquo;a&rdquo; means including tags themselves(comparing with &ldquo;i&rdquo;),
&ldquo;t&rdquo; means tags.</p>

<p>So we have &ldquo;cat&rdquo; (change outer), &ldquo;yat&rdquo; (copy outer), &ldquo;cit&rdquo; (change inner), &ldquo;dit&rdquo; (delete inner), etc.</p>

<h1>Auto complete opened tags</h1>

<h2>xmledit plugin</h2>

<p>Install with <code>git clone https://github.com/sukima/xmledit.git ~/.vim/bundle/xmledit</code>.
But it only works with .xml files. Not working with .html files.</p>

<p>To fix this, <code>cd ~/.vim/bundle/xmledit/ftplugin; cp xml.vim html.vim</code> (overwrite the existing html.vim file).</p>

<h2>No plugins</h2>

<p>Add &ldquo;inoremap <F8> &lt;/<C-X><C-O>&rdquo; into ~/.vimrc.
Now after &ldquo;<p>some text&rdquo;, press F8, it will be converted to &ldquo;<p>some text</p>&rdquo;.</p>

<h2>ragtag plugin</h2>

<p>Install <a href="https://github.com/tpope/vim-ragtag">ragtag</a> plugin for vim with <code>git clone https://github.com/tpope/vim-ragtag.git</code> into ~/.vim/bundle.</p>

<p><code>:h ragtag</code> in vim for help.</p>

<p>When editing a .html file, in insert mode, after input &ldquo;div&rdquo;, press Ctrl-x,Space, it will be convert to &ldquo;<div>|</div>&rdquo;.
If press Ctrl-x,Enter, it will be converted to:</p>

<pre><code>&lt;div&gt;
|
&lt;/div&gt;
</code></pre>

<p>where &ldquo;|&rdquo; marks the cursor position.</p>

<h2>Other plugins</h2>

<p>There are some more powerful plugins for xml/html editing, but they are more complicated.
Like <a href="http://www.vim.org/scripts/script.php?script_id=1697">surround.vim</a>, <a href="http://www.vim.org/scripts/script.php?script_id=13">closetag.vim</a>, and <a href="https://github.com/mattn/emmet-vim">emmet-vim</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用python发送各种形式的邮件]]></title>
    <link href="http://leetschau.github.io/blog/2011/01/12/153209/"/>
    <updated>2011-01-12T15:32:09+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/01/12/153209</id>
    <content type="html"><![CDATA[<p>分别是发送纯文本邮件、html格式邮件，以及带附件的html格式邮件。纯文本邮件消息体是普通字符串，html格式邮件中消息体是MIMEText型对象，这种对象的特点是不能加附件；带附件的html格式邮件中消息体是MIMEMultipart型对象，正文和附件都用attach()方法添加。</p>

<p>代码如下（红色字体部分是一个html格式文本的示例，可跳过不看）：</p>

<p> import smtplib</p>

<p> from email.mime.text import MIMEText</p>

<p> from email.mime.multipart import MIMEMultipart</p>

<p> if <strong>name</strong>==&lsquo;<strong>main</strong>&rsquo;:</p>

<p>  msg_body=&lsquo;&rsquo;&lsquo; &lt;!DOCTYPE HTML PUBLIC &ldquo;-//W3C//DTD HTML 4.01 Transitional//EN&rdquo;> <html xmlns:lxslt="http://xml.apache.org/xslt" xmlns:stringutils="xalan://org.apache.tools.ant.util.StringUtils"></p>

<p> <head></p>

<p> <META http-equiv="Content-Type" content="text/html; charset=US-ASCII"> <title>BVT Report</title> <style type="text/css"></p>

<p>  body {</p>

<p>   font:normal 68% verdana,arial,helvetica;</p>

<p>   color:#000000;</p>

<p>  }</p>

<p>  table tr td, table tr th {</p>

<p>   font-size: 68%;</p>

<p>  }</p>

<p>  table.details tr th{</p>

<p>   font-weight: bold;</p>

<p>   text-align:left;</p>

<p>   background:#a6caf0;</p>

<p>  }</p>

<p>  table.details tr td{</p>

<p>   background:#eeeee0;</p>

<p>  }</p>

<p>  p {</p>

<p>   line-height:1.5em;</p>

<p>   margin-top:0.5em; margin-bottom:1.0em;</p>

<p>  }</p>

<p>  h1 {</p>

<p>   margin: 0px 0px 5px; font: 165% verdana,arial,helvetica</p>

<p>  }</p>

<p>  h2 {</p>

<p>   margin-top: 1em; margin-bottom: 0.5em; font: bold 125% verdana,arial,helvetica</p>

<p>  }</p>

<p>  h3 {</p>

<p>   margin-bottom: 0.5em; font: bold 115% verdana,arial,helvetica</p>

<p>  }</p>

<p>  h4 {</p>

<p>   margin-bottom: 0.5em; font: bold 100% verdana,arial,helvetica</p>

<p>  }</p>

<p>  h5 {</p>

<p>   margin-bottom: 0.5em; font: bold 100% verdana,arial,helvetica</p>

<p>  }</p>

<p>  h6 {</p>

<p>   margin-bottom: 0.5em; font: bold 100% verdana,arial,helvetica</p>

<p>  }</p>

<p>  .Error {</p>

<p>   font-weight:bold; color:red;</p>

<p>  }</p>

<p>  .Failure {</p>

<p>   font-weight:bold; color:purple;</p>

<p>  }</p>

<p>  .Properties {</p>

<p>   text-align:right;</p>

<p>  }</p>

<p>  </style></p>

<p> </head></p>

<p> <body></p>

<p> <h1>Unit Test Results Summary</h1></p>

<p> <table class="details" border="0" cellpadding="5" cellspacing="2" width="95%"> <tr valign="top"> <th>Tests</th><th>Failures</th><th>Errors</th><th>Success rate</th><th>Time</th> </tr> <tr valign="top" class="Error"> <td>382</td><td>3</td><td>382</td><td>36.0466666667%</td><td>1.65</td></p>

<p> </tr></p>

<p> </table></p>

<p> <hr/></p>

<p> <h1>Diffcount Report</h1></p>

<p> <h2>GODU SERVER</h2></p>

<p> <table class="details" border="0" cellpadding="5" cellspacing="2" width="95%"> <tr valign="top"> <th>LANG</th><th>ADD</th><th>MOD</th><th>DEL</th><th>A&amp;M</th><th>BLK</th><th>CMT</th><th>NBNC</th><th>RATE</th></p>

<p> </tr></p>

<p> <tr valign="top" class="Error"><td>Java</td><td>52774</td><td>0</td><td>0</td><td>52774</td><td>5501</td><td>8036</td><td>39344</td><td>0.41</td></tr><tr valign="top" class="Error"><td>XML</td><td>399</td><td>0</td><td>0</td><td>399</td><td>0</td><td>0</td><td>399</td><td>0.12</td></tr></p>

<p> </table></p>

<p> <h2>GAPI</h2></p>

<p> <table class="details" border="0" cellpadding="5" cellspacing="2" width="95%"> <tr valign="top"> <th>LANG</th><th>ADD</th><th>MOD</th><th>DEL</th><th>A&amp;M</th><th>BLK</th><th>CMT</th><th>NBNC</th><th>RATE</th></p>

<p> </tr></p>

<p> <tr valign="top" class="Error"><td>Java</td><td>52774</td><td>0</td><td>0</td><td>52774</td><td>5501</td><td>8036</td><td>39344</td><td>0.41</td></tr><tr valign="top" class="Error"><td>XML</td><td>399</td><td>0</td><td>0</td><td>399</td><td>0</td><td>0</td><td>399</td><td>0.12</td></tr></p>

<p> </table></p>

<p> <h2>GODU WEB</h2></p>

<p> <table class="details" border="0" cellpadding="5" cellspacing="2" width="95%"> <tr valign="top"> <th>LANG</th><th>ADD</th><th>MOD</th><th>DEL</th><th>A&amp;M</th><th>BLK</th><th>CMT</th><th>NBNC</th><th>RATE</th></p>

<p> </tr></p>

<p> <tr valign="top" class="Error"><td>Java</td><td>52774</td><td>0</td><td>0</td><td>52774</td><td>5501</td><td>8036</td><td>39344</td><td>0.41</td></tr><tr valign="top" class="Error"><td>XML</td><td>399</td><td>0</td><td>0</td><td>399</td><td>0</td><td>0</td><td>399</td><td>0.12</td></tr></p>

<p> </table></p>

<p> </body></p>

<p> </html></p>

<p> &lsquo;&rsquo;&#8217;</p>

<p>  mail_server = smtplib.SMTP(&lsquo;124.127.106.5&rsquo;) # use &lsquo;smtp.163.com&rsquo; to send email with 163</p>

<p>  mail_server.set_debuglevel(1)</p>

<p>  mail_server.login(&lsquo;lichao1&rsquo;, &lsquo;abaqus67&rsquo;)</p>

<p>  #发送纯文本邮件</p>

<p>  #from_addr = &lsquo;LiChao<a href="&#x6d;&#x61;&#105;&#x6c;&#x74;&#x6f;&#58;&#108;&#105;&#99;&#x68;&#x61;&#x6f;&#x31;&#x40;&#x62;&#111;&#x63;&#x6f;&#x2e;&#99;&#111;&#109;&#x2e;&#x63;&#x6e;">&#x6c;&#105;&#99;&#x68;&#x61;&#111;&#49;&#64;&#x62;&#x6f;&#x63;&#x6f;&#x2e;&#99;&#x6f;&#109;&#x2e;&#x63;&#110;</a>&rsquo;</p>

<p>  #to_addr = &lsquo;LiChao<a href="&#109;&#97;&#105;&#x6c;&#x74;&#111;&#58;&#x6c;&#105;&#x63;&#104;&#x61;&#111;&#49;&#64;&#x62;&#111;&#99;&#x6f;&#46;&#x63;&#111;&#x6d;&#x2e;&#x63;&#x6e;">&#108;&#105;&#x63;&#x68;&#97;&#x6f;&#x31;&#64;&#x62;&#111;&#99;&#x6f;&#x2e;&#x63;&#111;&#109;&#46;&#99;&#110;</a>&rsquo;</p>

<p>  #subj = &lsquo;hello&rsquo;</p>

<p>  #date = datetime.datetime.now().strftime(&ldquo;%d/%m/%Y %H:%M&rdquo;)</p>

<p>  #msg = &ldquo;From: %s\nTo: %s\nSubject: %s\nDate: %s\n\n%s&rdquo; % (from_addr, to_addr, subj, date, message_body)</p>

<p>  #mail_server.sendmail(from_addr, to_addr, msg)</p>

<p>  #发送html格式邮件</p>

<p>  #msg = MIMEText (msg_body, &lsquo;html&rsquo;)</p>

<p>  #msg[&lsquo;From&rsquo;] = &lsquo;LiChao<a href="&#109;&#97;&#105;&#108;&#x74;&#111;&#58;&#108;&#105;&#x63;&#x68;&#x61;&#x6f;&#x31;&#64;&#x62;&#x6f;&#99;&#111;&#46;&#x63;&#x6f;&#109;&#46;&#99;&#x6e;">&#108;&#105;&#99;&#104;&#x61;&#111;&#49;&#x40;&#x62;&#111;&#99;&#x6f;&#46;&#99;&#111;&#x6d;&#x2e;&#x63;&#x6e;</a>&rsquo;</p>

<p>  #msg[&lsquo;To&rsquo;] = &lsquo;LiChao<a href="&#109;&#97;&#105;&#108;&#x74;&#111;&#x3a;&#108;&#x69;&#x63;&#104;&#97;&#x6f;&#x31;&#64;&#x62;&#111;&#x63;&#111;&#x2e;&#99;&#111;&#x6d;&#x2e;&#99;&#x6e;">&#x6c;&#x69;&#x63;&#104;&#97;&#x6f;&#x31;&#x40;&#x62;&#111;&#x63;&#111;&#46;&#99;&#x6f;&#109;&#x2e;&#99;&#x6e;</a>&rsquo;</p>

<p>  #msg[&lsquo;Subject&rsquo;] = &lsquo;hello&rsquo;</p>

<p>  #mail_server.sendmail(&lsquo;LiChao<a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#58;&#x6c;&#105;&#x63;&#x68;&#97;&#111;&#x31;&#x40;&#x62;&#x6f;&#99;&#111;&#46;&#x63;&#111;&#109;&#x2e;&#99;&#110;">&#108;&#105;&#x63;&#104;&#97;&#x6f;&#x31;&#x40;&#x62;&#x6f;&#99;&#111;&#46;&#x63;&#x6f;&#109;&#x2e;&#99;&#x6e;</a>&rsquo;, &lsquo;LiChao<a href="&#109;&#x61;&#105;&#108;&#x74;&#x6f;&#x3a;&#x6c;&#x69;&#99;&#x68;&#x61;&#111;&#x31;&#x40;&#98;&#x6f;&#99;&#x6f;&#x2e;&#x63;&#111;&#x6d;&#x2e;&#x63;&#110;">&#x6c;&#x69;&#x63;&#x68;&#97;&#x6f;&#49;&#64;&#x62;&#x6f;&#x63;&#111;&#46;&#99;&#111;&#x6d;&#46;&#99;&#110;</a>&rsquo;, msg.as_string())</p>

<p>  #发送带附件的html格式邮件</p>

<p>  msg = MIMEMultipart ()</p>

<p>  part2 = MIMEText(msg_body, &lsquo;html&rsquo;)</p>

<p>  msg. attach (part2)</p>

<p>  att = MIMEText(open(&lsquo;e:\BVT\GODU-BVT\GCIF\build\2011-01-12\GAPI\build\result\junit\junit-noframes.html&rsquo;, &lsquo;rt&rsquo;).read())</p>

<p>  att[&ldquo;Content-Type&rdquo;] = &lsquo;application/octet-stream&rsquo;</p>

<p>  att[&ldquo;Content-Disposition&rdquo;] = &lsquo;attachment; filename=&ldquo;JUnitReport.html&rdquo;&rsquo;</p>

<p>  msg. attach (att)</p>

<p>  msg[&lsquo;From&rsquo;] = &lsquo;LiChao<a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#108;&#105;&#99;&#x68;&#x61;&#x6f;&#49;&#64;&#98;&#111;&#99;&#111;&#x2e;&#x63;&#x6f;&#109;&#46;&#x63;&#x6e;">&#108;&#105;&#x63;&#x68;&#97;&#111;&#x31;&#64;&#x62;&#x6f;&#x63;&#x6f;&#46;&#99;&#x6f;&#x6d;&#x2e;&#99;&#110;</a>&rsquo;</p>

<p>  msg[&lsquo;To&rsquo;] = &lsquo;LiChao<a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x6c;&#105;&#x63;&#104;&#x61;&#x6f;&#49;&#64;&#98;&#x6f;&#99;&#111;&#x2e;&#x63;&#x6f;&#x6d;&#46;&#x63;&#x6e;">&#108;&#x69;&#99;&#104;&#x61;&#x6f;&#x31;&#x40;&#x62;&#x6f;&#x63;&#111;&#x2e;&#x63;&#x6f;&#x6d;&#46;&#99;&#110;</a>&rsquo;</p>

<p>  msg[&lsquo;Subject&rsquo;] = &lsquo;hello&rsquo;</p>

<p>  mail_server.sendmail(&lsquo;LiChao<a href="&#109;&#x61;&#x69;&#108;&#x74;&#111;&#x3a;&#108;&#x69;&#x63;&#104;&#97;&#x6f;&#x31;&#64;&#98;&#111;&#99;&#x6f;&#x2e;&#x63;&#111;&#109;&#x2e;&#x63;&#x6e;">&#108;&#x69;&#x63;&#104;&#x61;&#x6f;&#x31;&#64;&#x62;&#111;&#99;&#111;&#x2e;&#99;&#111;&#x6d;&#46;&#x63;&#110;</a>&rsquo;, &lsquo;LiChao<a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#x6c;&#105;&#x63;&#104;&#x61;&#x6f;&#x31;&#x40;&#x62;&#111;&#99;&#x6f;&#46;&#99;&#x6f;&#x6d;&#46;&#99;&#x6e;">&#108;&#x69;&#x63;&#104;&#x61;&#111;&#x31;&#x40;&#x62;&#111;&#x63;&#x6f;&#x2e;&#x63;&#111;&#x6d;&#46;&#x63;&#x6e;</a>&rsquo;, msg.as_string())</p>

<p>  mail_server.quit()</p>

<p> 注意：sendmail()发送邮件时，如果收件人有多个，必须放在一个list中作为参数，如果是字符串，则只发给第一个人，似乎只有python2.6要求是list型参数。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用lxml模块解析JUnit生成的测试报告]]></title>
    <link href="http://leetschau.github.io/blog/2011/01/11/100823/"/>
    <updated>2011-01-11T10:08:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/01/11/100823</id>
    <content type="html"><![CDATA[<p>JUnit的测试结果首先保存在xml文档中，然后生成html格式的测试报告，这份报告中的数据是用一段javascript代码根据 xml文档的数据 计算出来的，因此我们要获取测试结果数据，就只能分析html文档，这方面lxml模块（codespeak.net/lxml/）的功能比较令人满意，利用lxml的xpath语法可以方便地得到某个标签的内容，下面是一个分析样例文本：</p>

<p> &lt;!DOCTYPE HTML PUBLIC &ldquo;-//W3C//DTD HTML 4.01 Transitional//EN&rdquo;></p>

<p> <html xmlns:lxslt="http://xml.apache.org/xslt" xmlns:stringutils="xalan://org.apache.tools.ant.util.StringUtils"></p>

<p> <head></p>

<p> <META http-equiv="Content-Type" content="text/html; charset=US-ASCII"></p>

<p> <title>Unit Test Results.</title></p>

<p> <script type="text/javascript" language="JavaScript"></p>

<p> &hellip;(1000多行)</p>

<p> </script></p>

<p> </head></p>

<p> <body></p>

<p> <a name="top"></a></p>

<p> <h1>Unit Test Results.</h1></p>

<p> <table width="100%"></p>

<p> <tr></p>

<p> <td align="left"></td><td ....</td></p>

<p> </tr></p>

<p> </table></p>

<p> <hr size="1"></p>

<p> <h2>Summary</h2></p>

<p> <table class="details" border="0" cellpadding="5" cellspacing="2" width="95%"></p>

<p> <tr valign="top"></p>

<p> <th>Tests</th><th>Failures</th><th>Errors</th><th>Success rate</th><th>Time</th></p>

<p> </tr></p>

<p> <tr valign="top" class="Error"></p>

<p> <td>24</td><td>0</td><td>24</td><td>0.00%</td><td>0.155</td></p>

<p> </tr></p>

<p> </table></p>

<p> <table ...></p>

<p> <tr ...></p>

<p> </tr></p>

<p> </table></p>

<p> &hellip;</p>

<p> </body></p>

<p> </html></p>

<p>效果见下图：</p>

<p>解析html的目的是取出文本中黑体字表示的数据。</p>

<p>解析函数是：</p>

<p> from lxml import html</p>

<p> def parseJUnitReport(html_filename):</p>

<p> html_doc = html.parse(html_filename).getroot()</p>

<p> res_tbl = html_doc.xpath(&ldquo;//html//body//table&rdquo;)[1]</p>

<p> test_item_names = [k.text for k in res_tbl.xpath(&lsquo;.//tr//th&rsquo;)] # list comprehension</p>

<p> test_datasets = [k.text for k in res_tbl.xpath(&lsquo;.//tr//td&rsquo;)]</p>

<p> return dict(zip(test_item_names,test_datasets))</p>

<p>测试代码：</p>

<p> aa = &lsquo;e:\BVT\GODU-BVT\GCIF\build\GAPI\build\result\junit\junit-noframes.html&rsquo;</p>

<p> print build.parseJUnitReport(aa)</p>

<p>运行结果如下：</p>

<p> {&lsquo;Failures&rsquo;: &lsquo;0&rsquo;, &lsquo;Tests&rsquo;: &lsquo;24&rsquo;, &lsquo;Errors&rsquo;: &lsquo;24&rsquo;, &lsquo;Success rate&rsquo;: &lsquo;0.00%&rsquo;, &lsquo;Time&rsquo;: &lsquo;0.155&rsquo;}</p>

<p>从解析函数可以看到：</p>

<p>导入lxml.html后，其parse方法的参数是一个文件路径字符串，用xpath()方法得到的是一个包含<body>内所有的<table>的list，由于目标table位于第二位，所以取[1]得到table对象res_tbl，然后在它的下面取<tr>里的<th>，得到标题行，对于每个得到的节点，需要用它的text属性得到文本内容，这里使用了list的comprehension功能，用一行代码就取到每个元素的text属性并组成了新的list（test_item_names和test_datasets），然后用zip方法将两个list组合成了一个list，再用dict方法将list转换成了字典。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[由chm文件生成txt文件]]></title>
    <link href="http://leetschau.github.io/blog/2010/04/14/113452/"/>
    <updated>2010-04-14T11:34:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/04/14/113452</id>
    <content type="html"><![CDATA[<ol>
<li>将chm文件转为htm文件
ChmDecoder（正式名称为CHM Encoder），文件位置：E:\Software\chmdecoder\chmdecoder.exe</li>
<li>将htm文件转为txt文件
TextForever，文件位置：E:\Software\TextForever168\TextForever.exe
【Html->Text】标签页中点击【典型中文HTML】，不勾选【输出链接文字】</li>
<li>合并txt文件
TextForever【文件合并】标签页中，根据情况设置后【开始合并】。</li>
</ol>

]]></content>
  </entry>
  
</feed>
