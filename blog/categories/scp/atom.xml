<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Scp | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/scp/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-18T20:42:59+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Create Shortcut for SSH Hosts]]></title>
    <link href="http://leetschau.github.io/blog/2013/08/28/181723/"/>
    <updated>2013-08-28T18:17:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/08/28/181723</id>
    <content type="html"><![CDATA[<p>You frequently visit host 10.0.7.141 for example. It&rsquo;s a waste to type &ldquo;ssh <a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#103;&#99;&#112;&#64;&#49;&#x30;&#46;&#x30;&#x2e;&#x37;&#x2e;&#x31;&#x34;&#49;">&#x67;&#99;&#112;&#x40;&#x31;&#48;&#x2e;&#x30;&#x2e;&#x37;&#46;&#x31;&#52;&#x31;</a>&rdquo; every time you connect it. So you can create a file ~/.ssh/config, and add follow lines to it:</p>

<pre><code>Host 141 
Hostname 10.0.7.141 
User gcp 
[Port 22]
[IdentityFile ~/.ssh/id_rsa.pub]
</code></pre>

<p>Now you can use &ldquo;ssh 141&rdquo; to connect to this host.
Or use &ldquo;scp user@141:/home/user/&rdquo; to copy files.</p>

<p>With key authorization (see note &ldquo;Login SSH Server without Password&rdquo;), you can connect to this host without inputing password. You can copy local file to remote host with &ldquo;scp myfile 141:/target/path&rdquo;, and copy file on remote host to local folder with &ldquo;scp 141:/source/path/to/file /target/folder&rdquo;.</p>

<p>Note: IdentifyFile is the shortcut of &ldquo;-i /path/to/public-key&rdquo; option of &ldquo;ssh&rdquo; command;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用scp命令实现自动部署]]></title>
    <link href="http://leetschau.github.io/blog/2012/10/23/145637/"/>
    <updated>2012-10-23T14:56:37+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/10/23/145637</id>
    <content type="html"><![CDATA[<p>scp指令通过服务器上的SSH账号上传/下载文件，相当于基于SSH的FTP。下面ant脚本将打包好的目录上传到测试服务器上，省去了手工上传、解压、配置的麻烦：</p>

<p> <property name="deploy_host" value="10.0.2.75" />
 <property name="deploy_user" value="user" />
 <property name="deploy_pwd" value="pwd" />
 <property name="deploy_dir" value="/home/godu/godu2.3" />
 <target name="deploy" depends="create_zip">
  <scp todir="${deploy_user}:${deploy_pwd}@${deploy_host}:${deploy_dir}" trust="true">
   <fileset dir="${build.dir}">
    <exclude name="**/*.zip"/>
   </fileset>
  </scp>
 </target></p>

<p>注：</p>

<ul>
<li><p>Ant的classpath中要包含jsch-0.1.31.jar，否则scp指令会运行失败；</p></li>
<li><p>其中的trust=&ldquo;true&#8221;不可省略，否则报“reject HostKey”错误；</p></li>
<li><p>scp指令将fileset中的所有目录和文件（不包含fileset目录自身）拷贝到todir目录下，todir必须已经存在，其中重名的目录和文件将被覆盖；</p></li>
<li><p>不要忘写主机地址和目录之间的冒号；</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
