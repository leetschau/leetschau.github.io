<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Copy | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/copy/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-11-28T08:48:37+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Copy Files From PC to Huawei Pad]]></title>
    <link href="http://leetschau.github.io/blog/2014/07/10/160427/"/>
    <updated>2014-07-10T16:04:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/07/10/160427</id>
    <content type="html"><![CDATA[<p>MediaPad是android3.2平台，支持USB MTP功能，能与PC互相拷贝文件而无需mount，USB MTP的使用方法如下：</p>

<ol>
<li>在Window XP系统下，需要预装Windows MediaPlay11，Win7系统无需安装</li>
<li>PC第一次连接MediaPad时会提示自动安装Hisuit软件，安装完成后MTP驱动已随软件安装。</li>
<li>在MediaPad的右下角状态栏会显示USB已经连接的图标，点击后选择“MTP initiator connected”</li>
<li>出现一个android usb的界面，enable之后就可以在PC上看到多出一个“mediapad”的移动磁盘，可以看到并复制拷贝存储/SD卡上的文件。</li>
</ol>


<p>参考：
<a href="http://bbs.huaweifan.com/shouji-4017.html#52877">http://bbs.huaweifan.com/shouji-4017.html#52877</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copy Full Path Name of a File in Ranger]]></title>
    <link href="http://leetschau.github.io/blog/2013/08/16/174647/"/>
    <updated>2013-08-16T17:46:47+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/08/16/174647</id>
    <content type="html"><![CDATA[<p>After version 1.4.0, ranger add a command &ldquo;yp&rdquo; to copy full path name of a file with xsel. So you have to install xsel (apt-get install xsel), then use middle-button of the mouse to paste it somewhere else (both console and GUI apps, and if you are using laptop, you can only paste to console with <code>xsel -o</code>). Because xsel is a &ldquo;global clipboard&rdquo;, you can use yp of ranger in one console, and get the path with middle button or <code>xsel -o</code> in another console.</p>

<p>Note: see man page of xsel for the concept of 3 different clipboard PRIMARY, SECONDARY and CLIPBOARD of X windows.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cygwin与Windows间的Copy/Paste]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/29/101709/"/>
    <updated>2012-12-29T10:17:09+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/29/101709</id>
    <content type="html"><![CDATA[<h1>命令行状态下</h1>

<p>首先将Cygwin设为左键选择后自动复制，右键粘贴；然后就可以把Cygwin当成一个普通的Windows应用了；</p>

<h1>vi窗口中</h1>

<p>根据<a href="http://vim.wikia.com/wiki/Using_the_Windows_clipboard_in_Cygwin_Vim%E7%9A%84%E4%BB%8B%E7%BB%8D%EF%BC%8C%E5%B0%86%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E6%8B%B7%E8%B4%9D%E5%88%B0cygwin%E7%9A%84$HOME/.vimrc%E4%B8%AD%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%94%A8\y%E6%8B%B7%E8%B4%9D%EF%BC%8C\p%E7%B2%98%E8%B4%B4%E4%BA%86%E3%80%82">http://vim.wikia.com/wiki/Using_the_Windows_clipboard_in_Cygwin_Vim%E7%9A%84%E4%BB%8B%E7%BB%8D%EF%BC%8C%E5%B0%86%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%E6%8B%B7%E8%B4%9D%E5%88%B0cygwin%E7%9A%84$HOME/.vimrc%E4%B8%AD%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%94%A8\y%E6%8B%B7%E8%B4%9D%EF%BC%8C\p%E7%B2%98%E8%B4%B4%E4%BA%86%E3%80%82</a></p>

<p> function! Putclip(type, &hellip;) range
  let sel_save = &amp;selection
  let &amp;selection = &ldquo;inclusive&rdquo;
  let reg_save = @@
  if a:type == &lsquo;n&rsquo;
  silent exe a:firstline . &ldquo;,&rdquo; . a:lastline . &ldquo;y&rdquo;
  elseif a:type == &lsquo;c&rsquo;
  silent exe a:1 . &ldquo;,&rdquo; . a:2 . &ldquo;y&rdquo;
  else
  silent exe &ldquo;normal! <code>&lt;" . a:type . "</code>>y&rdquo;
  endif
  &ldquo;call system(&lsquo;putclip&rsquo;, @@)
  &#8220;As of Cygwin 1.7.13, the /dev/clipboard device was added to provide
  &#8220;access to the native Windows clipboard. It provides the added benefit
  &#8220;of supporting utf-8 characters which putclip currently does not. Based
  &#8220;on a tip from John Beckett, use the following:
  call writefile(split(@@,&rdquo;\n&#8221;), &lsquo;/dev/clipboard&rsquo;)
  let &amp;selection = sel_save
  let @@ = reg_save
 endfunction
 vnoremap <silent> <leader>y :call Putclip(visualmode(), 1)<CR>
 nnoremap <silent> <leader>y :call Putclip(&lsquo;n&rsquo;, 1)<CR>
 function! Getclip()
  let reg_save = @@
  &ldquo;let @@ = system(&lsquo;getclip&rsquo;)
  &#8220;Much like Putclip(), using the /dev/clipboard device to access to the
  &#8220;native Windows clipboard for Cygwin 1.7.13 and above. It provides the
  &#8220;added benefit of supporting utf-8 characters which getclip currently does
  &#8220;not. Based again on a tip from John Beckett, use the following:
  let @@ = join(readfile(&lsquo;/dev/clipboard&rsquo;), &rdquo;\n&#8221;)
  setlocal paste
  exe &lsquo;normal p&rsquo;
  setlocal nopaste
  let @@ = reg_save
 endfunction
 nnoremap <silent> <leader>p :call Getclip()<CR></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python的目录文件拷贝]]></title>
    <link href="http://leetschau.github.io/blog/2011/05/10/135056/"/>
    <updated>2011-05-10T13:50:56+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/05/10/135056</id>
    <content type="html"><![CDATA[<p>Python中进行目录（包括其中所有的文件和子目录）的拷贝时，如果使用shutil 模块，有两个方法，分别是copy()和copytree()方法，copy只能拷贝单个文件，copytree虽然可以拷贝整个目录，但要求目标目录必须不存在。当需要把多个源目录中的文件、子目录拷贝到一个目标目录下时，不能用这个方法，解决的方法是使用distutils.dir_util 模块的copy_tree方法。示例代码如下：</p>

<p> from distutils.dir_util import copy_tree</p>

<p> copy_tree(&lsquo;e:\GODU_SERVER_2.2\bin&rsquo;, &lsquo;e:\bvt_build\2011-05-10\GODU_SERVER_2.2\bin&rsquo;)</p>

<p> copy_tree(&lsquo;e:\GODU_SERVER_2.2\conf&rsquo;, &lsquo;e:\bvt_build\2011-05-10\GODU_SERVER_2.2\conf&rsquo;)</p>

<p>详见用户手册。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python中两种拷贝目录方法的比较]]></title>
    <link href="http://leetschau.github.io/blog/2011/01/04/103251/"/>
    <updated>2011-01-04T10:32:51+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/01/04/103251</id>
    <content type="html"><![CDATA[<p>首先是用python自己的api：
shutil.copytree(&lsquo;./build/tested/doc&rsquo;, &lsquo;./build/tested/build/doc&rsquo;)</p>

<p>优点是改变平台时不需要修改代码，缺点是doc文件夹下所有的东西都会被拷贝，包括隐藏目录；
 其次是使用windows的api：
result = subprocess.call([&lsquo;xcopy&rsquo;, &lsquo;.\build\tested\doc&rsquo;, &lsquo;.\build\tested\build\doc&rsquo;,&lsquo;/I&rsquo;])</p>

<p>与上面的优缺点正好相反。</p>
]]></content>
  </entry>
  
</feed>
