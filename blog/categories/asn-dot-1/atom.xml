<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: asn.1 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/asn-dot-1/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-08-05T17:36:08+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Compile ASN Module 25331-690 With Erlang]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/20/194453/"/>
    <updated>2014-05-20T19:44:53+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/20/194453</id>
    <content type="html"><![CDATA[<ol>
<li><p>Split the origin ASN file(25331-690.txt): there are 5 modules in this file, so we need split it into 5 modules:</p></li>
<li><p>Class-definitions.asn</p></li>
<li>PDU-definitions.asn</li>
<li>InformationElements.asn</li>
<li>Constant-definitions.asn</li>
<li>Internode-definitions.asn</li>
</ol>


<p>Each has the same structure:</p>

<pre><code>&lt;module-name&gt; DEFINITIONS AUTOMATIC TAGS ::=
BEGIN
...
END
</code></pre>

<ol>
<li><p>Compile modules according their dependencies. The order is:</p>

<p> Constant-definitions -> InformationElements -> PDU-definitions -> Class-definitions -> Internode-definitions</p></li>
</ol>


<p>The compile method is: in erlang shell(<code>$ erl</code>), run &ldquo;asn1ct:compile("PDU-definitions&rdquo;, [per, verbose]).&ldquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some ASN.1 Java Resouces]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/12/145833/"/>
    <updated>2014-05-12T14:58:33+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/12/145833</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="http://sourceforge.net/projects/bnotes/">BinaryNotes</a></p></li>
<li><p><a href="http://sourceforge.net/projects/jac-asn1/">JAC</a></p></li>
<li><p><a href="http://sourceforge.net/projects/asn1forj/">ASN.1 for java</a></p></li>
<li><p><a href="http://sourceforge.net/projects/basn/">Better ASN</a></p></li>
</ul>


<p>Both poor documents. Some do not support PER.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Encode and Decode ASN.1 in Erlang]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/12/142038/"/>
    <updated>2014-05-12T14:20:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/12/142038</id>
    <content type="html"><![CDATA[<p>Firstly a template asn file (PP.asn here) was created. Then it&rsquo;s be used to encode some text, creating a segment binary data(stored in variable Bin), then Bin was decoded based on PP.asn. We can also store binaries into a file, then read from it.</p>

<pre><code>$ cat PP.asn
PP DEFINITIONS AUTOMATIC TAGS ::=
BEGIN
  TGSN ::=    INTEGER (0..14)
  Persons ::= SEQUENCE {
    name PrintableString,
    location INTEGER {home(0),field(1),roving(2)},
    age INTEGER OPTIONAL
  }
END
$ erl
Erlang/OTP 17 [erts-6.0] [source-07b8f44] [smp:2:2] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V6.0  (abort with ^G)
1&gt; asn1ct:compile("PP", [ber, verbose]).
Erlang ASN.1 compiler 3.0
Compiling: "PP.asn"
Options: [ber,verbose,{i,"."}]
--{generated,"PP.asn1db"}--
--{generated,"PP.hrl"}--
--{generated,"PP.erl"}--
ok
2&gt; Rockstar = {'Persons',"Some Name",roving,50}.
{'Persons',"Some Name",roving,50}
3&gt; {ok,Bin} = 'PP':encode('Persons',Rockstar).    
{ok,&lt;&lt;48,17,128,9,83,111,109,101,32,78,97,109,101,129,1,
      2,130,1,50&gt;&gt;}
4&gt; {ok,Persons} = 'PP':decode('Persons',Bin).  
{ok,{'Persons',"Some Name",roving,50}}
5&gt; file:write_file("test", Bin).
ok
6&gt; {ok, Bin2} = file:read_file("test").
{ok,&lt;&lt;48,17,128,9,83,111,109,101,32,78,97,109,101,129,1,
      2,130,1,50&gt;&gt;}
7&gt; {ok,Persons} = 'PP':decode('Persons',Bin2).
{ok,{'Persons',"Some Name",roving,50}}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASN.1 Tools]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/06/144953/"/>
    <updated>2014-05-06T14:49:53+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/06/144953</id>
    <content type="html"><![CDATA[<h1>pyasn1</h1>

<pre><code>$ pip install pyasn1
</code></pre>

<p>Ref: <a href="pyasn1.sourceforge.net">ASN.1 for Python</a>.</p>
]]></content>
  </entry>
  
</feed>
