<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mongodb | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/mongodb/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T14:51:43+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用aggregate方法处理MongoDB数据]]></title>
    <link href="http://leetschau.github.io/blog/2016/06/08/092636/"/>
    <updated>2016-06-08T09:26:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/06/08/092636</id>
    <content type="html"><![CDATA[<p>下面的aggregate方法对Fair0606 collection做如下处理：</p>

<p>用<code>$match</code>（类似于filter）筛选出recurrence长度不小于2的document (fair).</p>

<p><a href="http://bit.ly/1X9uhLY">$unwind</a>类似于flatmap,
将每一个recurrence数组中的元素变成一个document;</p>

<p><a href="http://bit.ly/1UE0BTQ">$project</a>类似于map,去掉原document的<code>_id</code>,
保留nameZHCN, website，
创建新字段time，值为recurrence.timeStart,
以及address，值为recurrence.address
（路径的写法是路径名前面加$，详见Field Path and System Variables in
<a href="http://bit.ly/1YdER3X">Aggregation Pipeline Quick Reference</a>）.</p>

<p>如果希望保留recurrence.timeStart的结构，写成<code>"recurrence.timeStart": 1,</code>.</p>

<p><code>$limit</code>要求只转换20个document, <code>$out</code>指定输出collection.</p>

<pre><code>db.Fair0606.aggregate([
  {$match: {'recurrence.1': {$exists: true}}},
  {$unwind: "$recurrence"},
  {$project: {
    _id: 0,
    nameZHCN: 1,
    website: 1,
    time: "$recurrence.timeStart",
    address: "$recurrence.address"}},
  {$limit: 20},
  {$out: "out1"}])
</code></pre>

<p>通过unwind和project，可以实现对MongoDB schema的转换，下一步可以导出为csv
进行更复杂的数据分析，例如使用<a href="http://incanter.org/">Incanter</a>.</p>

<pre><code>mongoexport --type=csv -d test -c out1 \
--fields nameZHCN,website,time,address -o fairs.csv
</code></pre>

<p>参考：</p>

<p><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/">https://docs.mongodb.com/manual/reference/operator/aggregation/</a></p>

<p><a href="https://github.com/clojuredatascience">Clojure for Data Science</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Schema Analysis]]></title>
    <link href="http://leetschau.github.io/blog/2016/03/29/183444/"/>
    <updated>2016-03-29T18:34:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/03/29/183444</id>
    <content type="html"><![CDATA[<p>Use <a href="https://github.com/variety/variety-cli">variety/variety-cli</a> to
analysis mongodb schema.</p>

<h1>Install with npm</h1>

<p><code>npm install variety-cli -g</code>
If the command <code>variety</code> is conflict with
<a href="http://peterlevi.com/variety/">Variety the Wallpaper Changer</a>,
add <code>alias variety='/home/leo/apps/node-v5.4.1-linux-x64/bin/variety'</code>
into ~/.bash_aliases.</p>

<p>The production database is connected with
<code>mongo 192.168.10.89:27017/production -u user -p password</code>.
To analyze it, run:</p>

<pre><code class="bash">variety production/Fair --host 192.168.10.89 --port 27017 --username user --password password
</code></pre>

<p>Note you can&rsquo;t use <code>-u</code> instead of <code>--username</code> above.</p>

<h1>Run with mongo</h1>

<p>Download variety.js from it&rsquo;s repo and run:</p>

<pre><code class="bash">mongo 192.168.10.89:27017/production -u user -p password --eval "var collection = 'Fair'" variety.js
+------------------------------------------------------------------------------------------------------------------------------+
| key                                              | types                              | occurrences | percents               |
| ------------------------------------------------ | ---------------------------------- | ----------- | ---------------------- |
| _id                                              | String                             |        9316 | 100.000000000000000000 |
| recurrence.XX._id                                | String                             |        9276 |  99.570631172176902624 |
| recurrence.XX.timeStart                          | String (9180),Date (116)           |        9275 |  99.559896951481320571 |
</code></pre>

<p>Verify it with mongo shell:</p>

<pre><code class="bash">mongo 192.168.10.89:27017/production -u dba -p password
&gt; db.Fair.count()
9316
&gt; db.Fair.find({'recurrence._id': {$exists: true}}).count()
9276
&gt; db.Fair.find({$and: [{'recurrence': {$exists: true}}, {'recurrence._id': {$exists: false}}]}).count()
40      // 9316 - 9276
&gt; db.Fair.find({'recurrence.timeStart': {$exists: true}}).count()
9275    // 
&gt; db.Fair.find({$and: [{'recurrence._id': {$exists: true}}, {'recurrence.timeStart': {$exists: false}}]}).count()
1       // 9276 - 9275
&gt; db.Fair.find({'recurrence.timeStart': {$type: 2 }}).count()
9180
&gt; db.Fair.find({'recurrence.timeStart': {$type: 9}}).count()
116
&gt; db.Fair.find({$and: [{'recurrence.timeStart': {$exists: true}}, {'recurrence.timeStart': {$not: {$type: 2}}}, {'recurrence.timeStart': {$not: {$type: 9}}}]}).count()
0      // there's no other data type, all you need to do is converting String to Date
</code></pre>

<p>For type number, 2 means String, 9 means Date.
See their definitions in <a href="https://docs.mongodb.org/manual/reference/operator/query/type/">$type in MongoDB doc</a>.</p>

<p>Why 9180 + 116 > 9275? Because all the numbers here is the counts of fairs.
While in a single fair there are maybe many recurrences.
So if a fair has 2 recurrences, one&rsquo;s timeStart type is String,
and the other&rsquo;s type is Date,
it will be counted twice, both in 9180 and 116.</p>

<h1>Unify Schema</h1>

<p>We need convert the type of &ldquo;updatedAt&rdquo;, &ldquo;recurrence.$.timeStart&rdquo;
and &ldquo;recurrence.$.timeEnd&rdquo; from String to Date with mongo script below:</p>

<pre><code>db.Fair.find({'recurrence.timeStart': {$type: 2}}).forEach(function(fair) {   
  fair.recurrence.forEach(function(rec) { 
    if (typeof(rec.timeStart) === 'string') {
      rec.timeStart = new Date(rec.timeStart);
    }
  });
  db.Fair.save(fair);
});
db.Fair.find({'recurrence.timeEnd': {$type: 2}}).forEach(function(fair) {   
  fair.recurrence.forEach(function(rec) {
    if (typeof(rec.timeEnd) === 'string') {
      rec.timeEnd = new Date(rec.timeEnd);
    }
  });
  db.Fair.save(fair);
});
db.Fair.find({'updatedAt': {$type: 2}}).forEach(function(fair) {
  fair.updatedAt = new Date(fair.updatedAt);
  db.Fair.save(fair);
});
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Client]]></title>
    <link href="http://leetschau.github.io/blog/2015/11/22/212852/"/>
    <updated>2015-11-22T21:28:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/11/22/212852</id>
    <content type="html"><![CDATA[<h1>MongoChef</h1>

<p><a href="http://3t.io/mongochef/">MongoChef</a> is a cross platform MongoDB GUI client.
Its free version only for non-commercial use.
It&rsquo;s the best choice I found so far.</p>

<h1>RockMongo</h1>

<h2>Install and Setup</h2>

<p><a href="http://rockmongo.com/">RockMongo</a> is a PHP MongoDB client.</p>

<p>It can&rsquo;t update complicated (nested) data structure, useless.</p>

<p>Install bitnami Nginx Stack;</p>

<p>Run <code>$STACK_HOME/php/bin/pecl install mongo</code>;</p>

<p>Add <code>extension=mongo.so</code> into <code>$STACK_HOME/php/etc/php.ini</code>;</p>

<p>Run <code>mkdir $STACK_HOME/apps/rockmongo</code>;</p>

<p>Download rockmongo-1.1.7.zip, extract to <code>$STACK_HOME/apps/rockmongo</code>;
and <code>mv rockmongo-1.1.7 htdocs</code>;</p>

<p>In folder <code>$STACK_HOME/apps</code>, run <code>cp -r demo/conf rockmongo/</code>;</p>

<p>In folder <code>$STACK_HOME/apps</code>, replace all <code>demo</code> in <code>rockmongo/conf/nginx-prefix.conf</code>
to <code>rockmongo</code>;</p>

<p>Add <code>include "/home/leo/apps/nginxstack-1.9.7-0/apps/rockmongo/conf/nginx-prefix.conf";</code>
into <code>$STACK_HOME/nginx/conf/bitnami/bitnami-apps-prefix.conf</code>;</p>

<p>Modify mongodb connection parameters in <code>$STACK_HOME/apps/rockmongo/htdocs/config.php</code>:
modify &ldquo;mongo_name&rdquo;, &ldquo;mongo_host&rdquo; and &ldquo;mongo_port&rdquo; as your target value,
modify &ldquo;mongo_auth&rdquo; and &ldquo;ui_hide_system_collections&rdquo; to &ldquo;true&rdquo;.</p>

<p>Start nginx server: <code>$STACK_HOME/ctlscript.sh start</code>;</p>

<p>Open &ldquo;localhost:8080/rockmongo&rdquo; in your browser, login with your mongodb auth params.</p>

<p>You can add a new mongodb with codes below in apps/rockmongo/htdocs/config.php:</p>

<pre><code>$MONGO["servers"][$i]["mongo_name"] = "AliDB";
$MONGO["servers"][$i]["mongo_host"] = "123.57.188.18";
$MONGO["servers"][$i]["mongo_port"] = "15515";
$MONGO["servers"][$i]["mongo_auth"] = true;
$MONGO["servers"][$i]["ui_hide_system_collections"] = true;
$i ++;
</code></pre>

<p>And validate with <code>./ctlscript.sh restart nginx</code>.</p>

<p>Note:</p>

<ol>
<li><p>The nginx listening port (here is 8080) is defined in
<code>$STACK_HOME/nginx/conf/bitnami/bitnami.conf</code>;</p></li>
<li><p>If you logged in with a previous user in browser, click &ldquo;logout&rdquo; button
in upper-right corner to logout. Specify target username, passowrd and database
in login page.</p></li>
</ol>


<h2>Usage</h2>

<p>You have to write regex query in this way: <code>{ "chnName": { "$regex": "98" } }</code>,
and it didn&rsquo;t accept this form: <code>{ "chnName": /98/ }</code>.</p>

<p>Specify which fields will be shown in the results at the &ldquo;Fields&rdquo; dropdown list
below the query box.</p>

<h1>UMongo</h1>

<p><a href="http://edgytech.com/umongo/">UMongo</a> can only setup 1 connection,
and if the user is not root, it will give a auth failed error.</p>

<h1>MongoVUE</h1>

<p>Only for Windows. I tested v1.6.9 on Windows 7 64bit.
It can&rsquo;t connect to mongo replica set. (Always auth failed).
When connected with a local mongodb server,
searching and &ldquo;copy as json text&rdquo; function is ok.
But crash and quit when copy a part in a document.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Synchronize Data From MongoDB to Elasticsearch]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/31/011200/"/>
    <updated>2015-10-31T01:12:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/31/011200</id>
    <content type="html"><![CDATA[<p>Your mongo replica set and elasticsearch are hosted on 2 servers.
The mongo server is on &ldquo;mip:mport&rdquo;.
The ES server is on &ldquo;esip:esport&rdquo;.</p>

<p>On another server, install <a href="https://github.com/mongodb-labs/mongo-connector">mongo-connector</a>
with <code>pip install mongo-connector</code>.
If there are some errors, it may be caused by absence of gcc.
On Ubuntu, install them with <code>sudo apt-get install build-essential python-dev</code>.</p>

<pre><code>mongo-connector -m mip:mport -t esip:esport -d elastic_doc_manager --admin-username root --password rootPwd
</code></pre>

<p>That&rsquo;s it!
Now when you insert documents into MongoDB,
you can see it on elasticsearch.</p>

<p>We&rsquo;ve studied Mongo River and Mongoosatic, neither is better than this.</p>

<p>Note 1 (2015.11.15):</p>

<p>阿里云服务器上，用普通用户es启动es服务(<code>bin/elasticsearch</code>)，同一用户启动mongo-connector后，报
&ldquo;AttributeError: &lsquo;IndicesClient&rsquo; object has no attribute &lsquo;delete_mapping&rsquo;"错误，
es版本为2.0，mongo-connector版本为2.1，将es版本改为1.7，mongo-connector改为1.3后，
仍然出现这一错误，原因是MongoDB中删除了test库中的一个Collection，但ES中仍然有，就会出现这个错误，
解决方法是清空ES的test重新同步一遍：
<code>curl -XDELETE http://123.57.188.18:9322/test</code>.
Ref: <a href="https://github.com/mongodb-labs/mongo-connector/issues/349">https://github.com/mongodb-labs/mongo-connector/issues/349</a></p>

<p>Note 2:</p>

<p>Use root to sync is unsafe.
We create an user with &ldquo;clusterManager&rdquo; role to do this work.
Login with root, and run:</p>

<pre><code>use admin
db.createUser(
    {
      user: "clustermgr",
      pwd: "cmpwd",
      roles: [ "clusterManager" ]
    }
)
</code></pre>

<p>But run the command
<code>mongo-connector -m 119.254.211.28:15515 -t localhost:9200 -d elastic_doc_manager --admin-username clustermgr --password cmpwd</code>
will be the error <code>OperationFailure: database error: not authorized for query on local.oplog.rs</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch River for MongoDB]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/30/131706/"/>
    <updated>2015-10-30T13:17:06+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/30/131706</id>
    <content type="html"><![CDATA[<p>According to <a href="https://www.elastic.co/blog/deprecating-rivers">Deprecating Rivers</a>,
river is not supported any more.</p>

<h1>Mongo River</h1>

<p><a href="http://backslash451.github.io/articles/Running-ElasticSearch-with-MongoDB-and-Kibana/">http://backslash451.github.io/articles/Running-ElasticSearch-with-MongoDB-and-Kibana/</a></p>

<p>Buy a mongodb on <a href="https://www.qingcloud.com/">QingCloud</a>.
Connect to database with
<code>mongo 119.254.211.28:15515 --authenticationDatabase admin -u root -p nodeJS@2015</code>.
and run <code>rs.status()</code> to verify the replica set is working.</p>

<h2>Setup Elasticsearch</h2>

<p>See note &ldquo;Elasticsearch Notes&rdquo;.</p>

<h2>Setup Kibana</h2>

<p>See note &ldquo;Kibana Notes&rdquo;.</p>

<h2>Install River Plugin</h2>

<p>Follow <a href="https://github.com/richardwilly98/elasticsearch-river-mongodb">ichardwilly98/elasticsearch-river-mongodb</a>.</p>

<p>Run <code>bin/plugin install com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/2.0.9</code>
at $ES_HOME.</p>

<p>List plugins: <code>bin/plugin list</code>.
Get help: <code>bin/plugin -h</code>.</p>

<p>When install in 2.0.0, there is an error:
<code>ERROR: Could not find plugin descriptor 'plugin-descriptor.properties' in plugin zip</code>.
For now, use elasticsearch 1.7.3 with river.</p>

<p>List plugins in v1.7.3: <code>sudo /usr/share/elasticsearch/bin/plugin --list</code>.</p>
]]></content>
  </entry>
  
</feed>
