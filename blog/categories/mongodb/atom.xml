<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mongodb | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/mongodb/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-02-21T11:06:40+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MongoDB Client]]></title>
    <link href="http://leetschau.github.io/blog/2015/11/22/212852/"/>
    <updated>2015-11-22T21:28:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/11/22/212852</id>
    <content type="html"><![CDATA[<h1>MongoChef</h1>

<p><a href="http://3t.io/mongochef/">MongoChef</a> is a cross platform MongoDB GUI client.
Its free version only for non-commercial use.
It&rsquo;s the best choice I found so far.</p>

<h1>RockMongo</h1>

<h2>Install and Setup</h2>

<p><a href="http://rockmongo.com/">RockMongo</a> is a PHP MongoDB client.</p>

<p>It can&rsquo;t update complicated (nested) data structure, useless.</p>

<p>Install bitnami Nginx Stack;</p>

<p>Run <code>$STACK_HOME/php/bin/pecl install mongo</code>;</p>

<p>Add <code>extension=mongo.so</code> into <code>$STACK_HOME/php/etc/php.ini</code>;</p>

<p>Run <code>mkdir $STACK_HOME/apps/rockmongo</code>;</p>

<p>Download rockmongo-1.1.7.zip, extract to <code>$STACK_HOME/apps/rockmongo</code>;
and <code>mv rockmongo-1.1.7 htdocs</code>;</p>

<p>In folder <code>$STACK_HOME/apps</code>, run <code>cp -r demo/conf rockmongo/</code>;</p>

<p>In folder <code>$STACK_HOME/apps</code>, replace all <code>demo</code> in <code>rockmongo/conf/nginx-prefix.conf</code>
to <code>rockmongo</code>;</p>

<p>Add <code>include "/home/leo/apps/nginxstack-1.9.7-0/apps/rockmongo/conf/nginx-prefix.conf";</code>
into <code>$STACK_HOME/nginx/conf/bitnami/bitnami-apps-prefix.conf</code>;</p>

<p>Modify mongodb connection parameters in <code>$STACK_HOME/apps/rockmongo/htdocs/config.php</code>:
modify &ldquo;mongo_name&rdquo;, &ldquo;mongo_host&rdquo; and &ldquo;mongo_port&rdquo; as your target value,
modify &ldquo;mongo_auth&rdquo; and &ldquo;ui_hide_system_collections&rdquo; to &ldquo;true&rdquo;.</p>

<p>Start nginx server: <code>$STACK_HOME/ctlscript.sh start</code>;</p>

<p>Open &ldquo;localhost:8080/rockmongo&rdquo; in your browser, login with your mongodb auth params.</p>

<p>You can add a new mongodb with codes below in apps/rockmongo/htdocs/config.php:</p>

<pre><code>$MONGO["servers"][$i]["mongo_name"] = "AliDB";
$MONGO["servers"][$i]["mongo_host"] = "123.57.188.18";
$MONGO["servers"][$i]["mongo_port"] = "15515";
$MONGO["servers"][$i]["mongo_auth"] = true;
$MONGO["servers"][$i]["ui_hide_system_collections"] = true;
$i ++;
</code></pre>

<p>And validate with <code>./ctlscript.sh restart nginx</code>.</p>

<p>Note:</p>

<ol>
<li><p>The nginx listening port (here is 8080) is defined in
<code>$STACK_HOME/nginx/conf/bitnami/bitnami.conf</code>;</p></li>
<li><p>If you logged in with a previous user in browser, click &ldquo;logout&rdquo; button
in upper-right corner to logout. Specify target username, passowrd and database
in login page.</p></li>
</ol>


<h2>Usage</h2>

<p>You have to write regex query in this way: <code>{ "chnName": { "$regex": "98" } }</code>,
and it didn&rsquo;t accept this form: <code>{ "chnName": /98/ }</code>.</p>

<p>Specify which fields will be shown in the results at the &ldquo;Fields&rdquo; dropdown list
below the query box.</p>

<h1>UMongo</h1>

<p><a href="http://edgytech.com/umongo/">UMongo</a> can only setup 1 connection,
and if the user is not root, it will give a auth failed error.</p>

<h1>MongoVUE</h1>

<p>Only for Windows. I tested v1.6.9 on Windows 7 64bit.
It can&rsquo;t connect to mongo replica set. (Always auth failed).
When connected with a local mongodb server,
searching and &ldquo;copy as json text&rdquo; function is ok.
But crash and quit when copy a part in a document.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Synchronize Data From MongoDB to Elasticsearch]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/31/011200/"/>
    <updated>2015-10-31T01:12:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/31/011200</id>
    <content type="html"><![CDATA[<p>Your mongo replica set and elasticsearch are hosted on 2 servers.
The mongo server is on &ldquo;mip:mport&rdquo;.
The ES server is on &ldquo;esip:esport&rdquo;.</p>

<p>On another server, install <a href="https://github.com/mongodb-labs/mongo-connector">mongo-connector</a>
with <code>pip install mongo-connector</code>.
If there are some errors, it may be caused by absence of gcc.
On Ubuntu, install them with <code>sudo apt-get install build-essential python-dev</code>.</p>

<pre><code>mongo-connector -m mip:mport -t esip:esport -d elastic_doc_manager --admin-username root --password rootPwd
</code></pre>

<p>That&rsquo;s it!
Now when you insert documents into MongoDB,
you can see it on elasticsearch.</p>

<p>We&rsquo;ve studied Mongo River and Mongoosatic, neither is better than this.</p>

<p>Note 1 (2015.11.15):</p>

<p>阿里云服务器上，用普通用户es启动es服务(<code>bin/elasticsearch</code>)，同一用户启动mongo-connector后，报
&ldquo;AttributeError: &lsquo;IndicesClient&rsquo; object has no attribute &lsquo;delete_mapping&rsquo;"错误，
es版本为2.0，mongo-connector版本为2.1，将es版本改为1.7，mongo-connector改为1.3后，
仍然出现这一错误，原因是MongoDB中删除了test库中的一个Collection，但ES中仍然有，就会出现这个错误，
解决方法是清空ES的test重新同步一遍：
<code>curl -XDELETE http://123.57.188.18:9322/test</code>.
Ref: <a href="https://github.com/mongodb-labs/mongo-connector/issues/349">https://github.com/mongodb-labs/mongo-connector/issues/349</a></p>

<p>Note 2:</p>

<p>Use root to sync is unsafe.
We create an user with &ldquo;clusterManager&rdquo; role to do this work.
Login with root, and run:</p>

<pre><code>use admin
db.createUser(
    {
      user: "clustermgr",
      pwd: "cmpwd",
      roles: [ "clusterManager" ]
    }
)
</code></pre>

<p>But run the command
<code>mongo-connector -m 119.254.211.28:15515 -t localhost:9200 -d elastic_doc_manager --admin-username clustermgr --password cmpwd</code>
will be the error <code>OperationFailure: database error: not authorized for query on local.oplog.rs</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch River for MongoDB]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/30/131706/"/>
    <updated>2015-10-30T13:17:06+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/30/131706</id>
    <content type="html"><![CDATA[<p>According to <a href="https://www.elastic.co/blog/deprecating-rivers">Deprecating Rivers</a>,
river is not supported any more.</p>

<h1>Mongo River</h1>

<p><a href="http://backslash451.github.io/articles/Running-ElasticSearch-with-MongoDB-and-Kibana/">http://backslash451.github.io/articles/Running-ElasticSearch-with-MongoDB-and-Kibana/</a></p>

<p>Buy a mongodb on <a href="https://www.qingcloud.com/">QingCloud</a>.
Connect to database with
<code>mongo 119.254.211.28:15515 --authenticationDatabase admin -u root -p nodeJS@2015</code>.
and run <code>rs.status()</code> to verify the replica set is working.</p>

<h2>Setup Elasticsearch</h2>

<p>See note &ldquo;Elasticsearch Notes&rdquo;.</p>

<h2>Setup Kibana</h2>

<p>See note &ldquo;Kibana Notes&rdquo;.</p>

<h2>Install River Plugin</h2>

<p>Follow <a href="https://github.com/richardwilly98/elasticsearch-river-mongodb">ichardwilly98/elasticsearch-river-mongodb</a>.</p>

<p>Run <code>bin/plugin install com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/2.0.9</code>
at $ES_HOME.</p>

<p>List plugins: <code>bin/plugin list</code>.
Get help: <code>bin/plugin -h</code>.</p>

<p>When install in 2.0.0, there is an error:
<code>ERROR: Could not find plugin descriptor 'plugin-descriptor.properties' in plugin zip</code>.
For now, use elasticsearch 1.7.3 with river.</p>

<p>List plugins in v1.7.3: <code>sudo /usr/share/elasticsearch/bin/plugin --list</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Share One Users Collection Between Multiple Meteor Apps]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/11/123934/"/>
    <updated>2015-08-11T12:39:34+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/11/123934</id>
    <content type="html"><![CDATA[<p>We are running a website and a backend data management system,
both are meteor web servers.</p>

<p>The backend needs fetch data from the website.
So they have to share one database, and the same &ldquo;users&rdquo; collection for both.
That means one can register on the website and login to the backend,
which is obviously unacceptable.</p>

<p>To distinguish users of the website and the backend,
I choose package <a href="https://github.com/alanning/meteor-roles">alanning/meteor-roles</a>.</p>

<p>All the backend users will have roles <code>['backend', 'admin']</code>,
while website users haven&rsquo;t.</p>

<p>In &ldquo;safe&rdquo; environment, backend has its own user registration entry.
Users registered there will be given above roles automatically.</p>

<p>Put the following codes into server side JavaScript files to achieve above goal
(based on examples/rolesWithAccountsUI on meteor-roles):</p>

<pre><code>var ROLE_NAME = 'editor';
var GROUP_NAME = 'backend';

Meteor.publish('mallData', function(){
  if (Roles.userIsInRole(this.userId, ROLE_NAME, GROUP_NAME)) {
    console.log('pass check');
    return Mall.find();
  } else {
    console.log('not pass check');
    this.stop();
    return;
  }
});

Meteor.startup(function () {
  Accounts.onCreateUser(function (options, user) {
    Roles.setRolesOnUserObj(user, ROLE_NAME, GROUP_NAME);
    if (options.profile) {
      user.profile = options.profile
    }
    return user;
  });
});

Roles.setRolesOnUserObj = function (users, roles, group) {
  if (!users) throw new Error ("Missing 'users' param")
  if (!roles) throw new Error ("Missing 'roles' param")
  if (group) {
    if ('string' !== typeof group)
      throw new Error ("Roles error: Invalid parameter 'group'. Expected 'string' type")
    if ('$' === group[0])
      throw new Error ("Roles error: groups can not start with '$'")

    // convert any periods to underscores
    group = group.replace(/\./g, '_')
  }

  // ensure arrays to simplify code
  if (!_.isArray(users)) users = [users]
  if (!_.isArray(roles)) roles = [roles]


  // remove invalid roles
  roles = _.reduce(roles, function (memo, role) {
    if (role
        &amp;&amp; 'string' === typeof role
        &amp;&amp; role.trim().length &gt; 0) {
      memo.push(role.trim())
    }
    return memo
  }, [])

  // if roles is empty, quit
  if (roles.length === 0) return

  // ensure all roles exist in 'roles' collection
  existingRoles = _.reduce(Meteor.roles.find({}).fetch(), function (memo, role) {
    memo[role.name] = true
    return memo
  }, {})
  _.each(roles, function (role) {
    if (!existingRoles[role]) {
      Roles.createRole(role)
    }
  })

  // ensure users is an array of objects
  _.each(users, function (user) {
    if ('object' !== typeof user) {
      throw new Error("Expected 'users' argument to be an object or array of objects")
    }
  })


  // Set the roles on the actual user object

  if (group) {

    // roles is a key/value dict object

    _.each(users, function (user) {
      user.roles = {}
      user.roles[group] = roles
    })

  } else {

    // roles is an array of strings

    _.each(users, function (user) {
      user.roles = roles
    })

  }

}
</code></pre>

<p>Now any user outside &lsquo;backend&rsquo; group, or without &lsquo;editor&rsquo; role, can&rsquo;t get any data from server.</p>

<p>Unfortunately Internet is unsafe at all.
So the registration entry has to be removed from the accounts-ui:</p>

<pre><code>Meteor.startup(function () {
  Accounts.config({
    forbidClientAccountCreation : true
  });
});
</code></pre>

<p>Now if you want give a website personnel rights to edit data through backend,
first he should register on the website,
then you define his role manually in mongo console:</p>

<pre><code>&gt; db.users.find({ "emails.0.address":"user@123.com" }, { "emails":1 })
&gt; db.users.update({_id: "PM36t6eRmuC9oELdu"}, { $set: { roles: {"backend": [ "editor" ]} } })
</code></pre>

<p>First find the id of the user (here is &ldquo;<a href="&#109;&#x61;&#x69;&#108;&#116;&#111;&#x3a;&#x75;&#x73;&#101;&#x72;&#x40;&#49;&#50;&#x33;&#x2e;&#99;&#111;&#x6d;">&#117;&#115;&#x65;&#114;&#x40;&#x31;&#x32;&#51;&#46;&#x63;&#x6f;&#109;</a>&rdquo;) by his email address.
Then add group and roles to the user (say the id of the user is &ldquo;PM36t6eRmuC9oELdu&rdquo;).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB数据管理平台产品定义和选型]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/08/170530/"/>
    <updated>2015-06-08T17:05:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/08/170530</id>
    <content type="html"><![CDATA[<h1>目标定位和用户定义</h1>

<p>数据管理平台是商业网站的产品数据支持系统，它的用户是企业的业务人员，没有技术背景，
无法使用MongoDB的命令行工具以及GUI客户端（如Robomongo等）操作数据。
需要通过浏览器维护产品数据，对数据进行增删改查操作，</p>

<h1>功能需求</h1>

<ul>
<li><p>数据管理平台的用户是网站数据的维护者，与商业网站的用户完全不同；</p></li>
<li><p>数据管理平台是一个Web服务;</p></li>
<li><p>每个用户有自己的权限，包括能够访问哪些collection，以及这个collection中的哪些documents；</p></li>
<li><p>目前这个系统只针对MongoDB;</p></li>
<li><p>能够通过Web界面对目标MongoDB进行数据的增删改查操作；</p></li>
</ul>


<h1>实现方法</h1>

<p>使用Meteor作为Web框架；</p>

<p>系统是一个独立的Meteor项目，而不是一个package；</p>

<h1>系统选型</h1>

<p>目前试用了两个Meteor package，两个node.js包，均不符合要求。</p>

<ul>
<li><p><a href="https://github.com/yogiben/meteor-admin">yogiben/meteor-admin</a>: 登录界面上的注册(sign-up)功能有问题，
点击"Register"按钮界面僵死;登录后版式混乱重叠；</p></li>
<li><p><a href="https://github.com/gterrono/houston">Houston</a>: 安装简单，添加包后就可以使用了，
主要问题是使用产品库的Users表，与网站用户混在了一起；
添加数据页面不能根据数据的Schema定义，只能模仿库里现有的document的结构；</p></li>
<li><p><a href="http://keystonejs.com/">KeyStoneJS</a>: Nodejs包，部署和使用相对比较方便，主要问题见<a href="http://stackoverflow.com/questions/30661456/mongodb-content-management-web-app-for-non-technical-guys">我的问题</a>;</p></li>
<li><p><a href="https://github.com/andzdroid/mongo-express">mongo-express</a>: nodejs包，启动后浏览器访问时报404错误，原因未知；</p></li>
</ul>


<h1>其他说明</h1>

<p>系统不是使用MongoDB的GUI客户端，是因为使用这些客户端需要了解MongoDB语句，不符合用户定义。</p>
]]></content>
  </entry>
  
</feed>
