<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Layout | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/layout/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-02T09:35:25+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meteor Development Styles]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/26/174649/"/>
    <updated>2015-01-26T17:46:49+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/26/174649</id>
    <content type="html"><![CDATA[<h1>Naming Styles</h1>

<ul>
<li><p>Template, class, enum name use BigCamelCase;</p></li>
<li><p>File, identifier, function name use smallCamelCase;</p></li>
<li><p>CSS class name: css-class-name;</p></li>
<li><p>Constant value name: CONSTANT_VALUES_LIKE_THIS;</p></li>
</ul>


<p>Ref:</p>

<p><a href="https://github.com/meteor/meteor/wiki/Meteor-Style-Guide">Meteor Style Guide</a></p>

<p><a href="https://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml#Naming">Googe JavaScript Naming rules</a>:
use functionNamesLikeThis, variableNamesLikeThis, ClassNamesLikeThis, EnumNamesLikeThis, methodNamesLikeThis, CONSTANT_VALUES_LIKE_THIS, foo.namespaceNamesLikeThis.bar, and filenameslikethis.js.</p>

<p><a href="https://github.com/airbnb/javascript">Airbnb JavaScript Style Guide</a></p>

<h1>Small Project Structure with Iron Router</h1>

<p>The following is the file structure of small meteor app,
which put all files into root folder, to simplify file editing and browsing.</p>

<ul>
<li><p>head.html: contains &ldquo;<head> &hellip; </head>&rdquo;;</p></li>
<li><p>layout.html: defines layouts of the app, each in a &ldquo;<template>&rdquo;, you can put multiple layouts in this file;</p></li>
<li><p>router.js: defines all routes and layouts. Put all javascript codes starting with &ldquo;Router.&rdquo; (such as Router.route, Router.configure) into this file;</p></li>
<li><p>collections.js: define persistent collections, or models of application;</p></li>
<li><p>style.css: defines global css styles here;</p></li>
<li><p>comTemp.html: defines global common templates here;</p></li>
<li><p>page triad: consists of a view (html), a controller (js) and a formatter (css).
  So the home page triad consists of home.html, home.js and home.css;</p></li>
</ul>


<h1>Large Project Structures</h1>

<p><a href="https://github.com/DiscoverMeteor/Microscope">Microscope</a> of <a href="https://www.discovermeteor.com/">Discover Meteor</a> is a good example:</p>

<p>$ git clone <a href="https://github.com/DiscoverMeteor/Microscope.git">https://github.com/DiscoverMeteor/Microscope.git</a>
$ cd Microscope
$ tree -L 3
.
├── client
│   ├── helpers
│   │   ├── config.js
│   │   ├── errors.js
│   │   └── handlebars.js
│   ├── main.html
│   ├── main.js
│   ├── stylesheets
│   │   └── style.css
│   └── templates
│       ├── application
│       ├── comments
│       ├── includes
│       ├── notifications
│       └── posts
├── lib
│   ├── collections
│   │   ├── comments.js
│   │   ├── notifications.js
│   │   └── posts.js
│   ├── permissions.js
│   └── router.js
├── LICENSE.txt
├── README.markdown
├── README.nitrous.md
└── server
    ├── fixtures.js
    └── publications.js</p>

<p>Ref:</p>

<p><a href="http://docs.meteor.com/#/full/structuringyourapp">Structuring your application in Meteor Docs</a></p>

<p><a href="https://github.com/EventedMind/iron-router/blob/devel/Guide.md">iron-router official guide</a></p>

<p>google &ldquo;iron router layout&rdquo;;</p>

<p><a href="http://www.manuel-schoebel.com/blog/iron-router-tutorial">Iron-Router Tutorial</a></p>

<p><a href="http://stackoverflow.com/questions/21824045/meteor-iron-router-layout-template">Meteor Iron Router layout template</a></p>

<p><a href="http://stackoverflow.com/questions/19909945/meteor-iron-router-layout-rendering">Meteor Iron-Router Layout Rendering</a></p>

<p><a href="http://robertdickert.com/blog/2014/05/09/set-up-navigation-with-iron-router-and-bootstrap/">Set Up Navigation With Iron Router and Bootstrap</a></p>

<p><a href="http://meteortips.com/tutorial/iron-router-part-1/">A Beginner’s Guide to Iron Router, Part 1</a> on <a href="http://meteortips.com/">Meteor Tips</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定制Gradle的项目文件目录结构]]></title>
    <link href="http://leetschau.github.io/blog/2013/05/09/100304/"/>
    <updated>2013-05-09T10:03:04+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/05/09/100304</id>
    <content type="html"><![CDATA[<p>参考Gradle文档chapter 23: The Java Plugin, 23.4: Project Layout, 23.4.1: Changing the project layout。
根据此说明，基于文档自带的$GRADLE-1.5_HOME\samples\java\quickstart进行的一个实验：</p>

<p>首先将原示例的项目文件结构修改为如下形式：</p>

<pre><code>$ tree 
. 
|-- build.gradle 
|-- conf 
| `-- db.properties 
|-- src 
| `-- org 
|  `-- gradle 
|   `-- Person.java 
`-- test 
 `-- org 
  `-- gradle 
   `-- PersonTest.java 
</code></pre>

<p>然后在build.gradle中增加如下对sourceSets的定制：</p>

<pre><code>... 
apply plugin: 'eclipse' 
sourceSets { 
    main { 
        java { 
            srcDir 'src' 
        } 
        resources { 
            srcDir 'conf' 
        } 
    } 
    test { 
        java { 
            srcDir 'test' 
        } 
    } 
} 
sourceCompatibility = 1.5 
... 
</code></pre>

<p>然后就可以用gradle build或者gradle uploadArchives执行构建任务了。</p>

<hr />

<p>2014-8-11更新：</p>

<p>基于Grale 2.0，创建一个新Java项目的方法是在一个空文件夹中运行<code>gradle init --type basic</code>，然后修改build.gradle文件，去掉其中的全文注释，添加&#8221;apply plugin: &lsquo;eclipse&rsquo;&ldquo;和目录结构定义，然后运行<code>gradle eclipse</code>，并在Eclipse中导入这个项目。如果是为一个已有(Eclipse)项目增加Gradle管理，则只要在项目根目录下创建build.gradle文件，然后就可以用<code>gradle build</code>等命令构建项目了。</p>

<p>与在Eclipse中安装Gradle插件，然后完全在Eclipse中完成Grale构建相比，这种方法不需要在Eclipse中安装Gradle插件，在命令行中进行项目的构建，Eclipse只是一个代码编写和调试环境，相对更灵活一些。</p>
]]></content>
  </entry>
  
</feed>
