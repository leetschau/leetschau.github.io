<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Entrypoint | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/entrypoint/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T15:03:30+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[保证Docker的输入参数可执行]]></title>
    <link href="http://leetschau.github.io/blog/2016/10/25/110137/"/>
    <updated>2016-10-25T11:01:37+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/10/25/110137</id>
    <content type="html"><![CDATA[<p>写Docker的entrypoint时有个问题是：
Docker启动后如果用户的cmd参数以可执行命令开头，
这个命令覆盖entrypoint中的可执行命令，否则执行的是<code>entrypoint cmd</code>。</p>

<p>怎样实现entrypoint对cmd是否可执行的判断？</p>

<p><a href="https://github.com/appropriate/docker-curl">appropriate/docker-curl</a>中的
latest/entrypoint.sh脚本给出了一种实现方法：</p>

<pre><code>#!/bin/sh
set -e

# Prepend "curl" if the first argument is not an executable
if ! type -- "$1" &amp;&gt; /dev/null; then
  set -- curl "$@"
fi

exec "$@"
</code></pre>

<p>这段脚本的功能是：如果用户在run这个image时，cmd是以可执行命令（或者文件）开头
（例如cmd是<code>curl www.google.com</code>），那么执行这个cmd，否则
（例如cmd是<code>www.google.com</code>）给这个cmd前面加上<code>curl</code>再执行。</p>

<p>根据<a href="http://linuxcommand.org/lc3_man_pages/seth.html">set manpage</a>，
上面脚本第2行<code>set -e</code>的意思是如果执行过程中出现错误直接退出。</p>

<p>第5行用于判断cmd的第一部分是否为可执行命令，如果是跳到最后一行直接执行cmd整体，
否则在<code>$@</code>前面加上<code>curl</code>，然后再执行。</p>

<p>第5行中的<code>--</code>的作用是避免<code>$1</code>以横杠开头时干扰<code>type</code>的判断，在bash中做如下实验：</p>

<pre><code>$ type ls &amp;&gt; /dev/null         # return 0
$ type -p ls &amp;&gt; /dev/null     # return 0
$ type -- -p ls &amp;&gt; /dev/null  # return 1
</code></pre>

<p>可以看到，当cmd是<code>-p ls</code>时（第2条语句），如果不加<code>--</code>，
整个<code>type -p ls</code>的返回结果是0（因为<code>-p</code>被当成了<code>type</code>的选项），
但<code>-p</code>显然不是可执行命令，所以<code>--</code>是必需的。</p>

<p><code>&amp;</code>将命令变为后台运行，<code>&gt; /dev/null</code>去掉所有输出，二者组合起来的意思是：
不要任何输出，只告诉我命令执行是否成功了（返回值0表示成功，否则表示失败）。
做如下实验（假设当前目录下有<code>docs</code>子目录，没有<code>aaa</code>子目录）：</p>

<pre><code>cd docs
cd docs &amp;
cd docs &amp;&gt;/dev/null
cd aaa
cd aaa &amp;
cd aaa &amp;&gt;/dev/null
</code></pre>
]]></content>
  </entry>
  
</feed>
