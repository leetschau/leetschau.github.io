<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 插件 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/cha-jian/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-08-27T14:11:47+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Eclipse插件安装方法]]></title>
    <link href="http://leetschau.github.io/blog/2010/09/01/142409/"/>
    <updated>2010-09-01T14:24:09+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/09/01/142409</id>
    <content type="html"><![CDATA[<p>Eclipse SDK 3.7支持在dropins文件夹中安装插件，解压后的目录格式为：$ECLIPSE_DIR/dropins/<plugin_name>/plugins(features)，如下图所示：</p>

<p>$ECLIPSE_DIR/dropins</p>

<pre><code>|__IvyDE

| |__plugins

| |__features

|__Terracotta

  |__plugins
</code></pre>

<p>以上方法在Eclipse SDK 3.7下安装ivyde和terracotta两个插件成功。</p>

<p>下面是旧版Eclipse的安装方法，供参考。</p>

<p>Eclipse Galileo安装插件主要有3中方式：直接解压、菜单和外部插件。直接解压就是将插件中plugins和features目录中的文件解压到eclipse对应的目录中，这显然不是好办法，一旦插件要升级或者不想用了，卸载会变得及其困难。菜单方法就是用elipse菜单【Help->Install New Software】装插件，试了一下似乎不好用，插件管理确实是eclipse需要加强的地方（也或许是开发者认为做这个功能没必要？）。外部插件就是写link文件，比较而言这种方法是最好的，想卸载的时候只要去掉link文件就行了。</p>

<p>过程如下：</p>

<p>1、解压插件。确定插件解压目录，如f:\warez\IDEs\EclipsePlugins\，将插件解压到这个目录下，目录结构如下：</p>

<p> f:\warez\IDEs\EclipsePlugins\language\eclipse\plugins\</p>

<p>f:\warez\IDEs\EclipsePlugins\language\eclipse\features\</p>

<p>也就是保证每一个插件目录（这里是 language ）下是 eclipse，再下面是 plugins和features。</p>

<p> 2、在 eclipse解压目录 下新建文件夹   links（也就是links与eclipse.exe处在相同目录下），例如：</p>

<p> f:\warez\IDEs\Eclipse0901\eclipse.exe与f:\warez\IDEs\Eclipse0901\links\；</p>

<p> 3、在  links   下新建一个   link   文件，比如   language.start  ， 后缀名可以任意取，如   .link,.ini,.txt   等等   ,   只要 link 文件名和插件文件安装目录中的最后文件夹名一致即可， 在这里我的插件安装目录结构为  f:\warez\IDEs\EclipsePlugins\language\， 所以   link   文件名就命名为 language.start， 如果你的插件安装目录结构为 D:\eclipse\myPlugins\languagepack,   则 link   文件名应为 languagepack.start 。</p>

<p> 4、在 language.start 中写入如下一句话：path=F:/warez/IDEs/EclipsePlugins/language， 即 path= 你的插件安装目录（ 路径字符串中要用/代替\ ， language后面不要写“/” ）；</p>

<p> 5、启动 eclipse：在 f:\warez\IDEs\Eclipse0901下运行 eclipse -clean；</p>

<p> 如果发现查件没有安装成功，按下面的步骤debug：</p>

<p> 1、确认配置好插件启动eclipse时一定要用eclipse -clean的方法启动，这样eclipse会重新检查、加载一遍插件，之后再启动eclipse就不需要-clean参数了。  2、若还不行，删除 f:\warez\IDEs\Eclipse0901\configuration下的org.eclipse.update目录（这是一个记录插件更新情况的文件夹），删除掉这个文件夹后，   eclipse   会重新扫描所有的插件；</p>

<p> 3、若还不行，最有效的办法是分析工作目录下 .metadata目录下的.log文件（如 d:\workspace.metadata.log），如果插件未能正确加载，会在目录里给出加载插件失败的信息；</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TotalCommander的两款目录插件]]></title>
    <link href="http://leetschau.github.io/blog/2010/08/22/155159/"/>
    <updated>2010-08-22T15:51:59+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/08/22/155159</id>
    <content type="html"><![CDATA[<p>CatalogMaker 与 DiskDir Extended 是两个用于生成文件夹目录的totalCmd插件。 将指定目录下所有文件、文件夹以指定格式存储在一个文本文件中，可作为EverCD+的轻量级替代品。
安装：
在TotalCmd中双击zip文件，tc会提示是否安装插件，确认后一路按默认安装即可。</p>

<p>使用：
选中要生成目录结构的文件夹，按alt+F5，【压缩格式】中在下拉框里选lst，然后点【配置】，设置输出格式后确认，在对面目录下生成一个lst文件，实际就是一个纯文本文件。</p>

<p>二者比较：</p>

<p>catalogmaker生成的目录更易读，但diskdirextended能够读出压缩包里的文件列表，二者各有优缺点。</p>
]]></content>
  </entry>
  
</feed>
