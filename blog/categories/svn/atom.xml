<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Svn | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/svn/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-08-05T17:36:08+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Convert a CVS Repo to SVN Repo]]></title>
    <link href="http://leetschau.github.io/blog/2015/03/10/102817/"/>
    <updated>2015-03-10T10:28:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/03/10/102817</id>
    <content type="html"><![CDATA[<p>Download cvs2svn-2.4.0.tar.gz from <a href="http://cvs2svn.tigris.org/">cvs2svn</a> and extract it.
We get a folder named &ldquo;cvs2svn-2.4.0&rdquo;.</p>

<p>The cvs repo to be converted is at $HOME/Desktop/goat.
There&rsquo;s a &ldquo;CVSROOT&rdquo; and &ldquo;dev/GOAT&rdquo; folder in it.</p>

<p>Change CWD to cvs2svn-2.4.0 and run <code>./cvs2svn --encoding=GBK --fallback-encoding=utf8 -s ~/Desktop/goatsvn ~/Desktop/goat</code>.</p>

<p>After convertion, you get your subversion repo at $HOME/Desktop/goatsvn.</p>

<p>Check it with <code>svn ls file://$HOME/Desktop/goatsvn</code>, and <code>svn log HEAD file://$HOME/Desktop/goatsvn</code>
and <code>svn cat file://$HOME/Desktop/goatsvn/...</code>.</p>

<p>If you encouter this error: &ldquo;ERROR: A CVS repository cannot contain both repo/path/file.txt,v and repo/path/Attic/file.txt,v&rdquo;:
<code>./cvs2svn --retain-conflicting-attic-files --encoding=GBK --fallback-encoding=utf8 -s ~/Desktop/dev2SVN ~/Desktop/ARENA/dev2</code></p>

<p>Next add this repo to a existing repository:</p>

<p>Ref:</p>

<p>Google for &ldquo;subversion format 5&rdquo;.</p>

<p><a href="http://serverfault.com/questions/277441/difference-between-the-format-and-db-format-files-in-a-subversion-repository">http://serverfault.com/questions/277441/difference-between-the-format-and-db-format-files-in-a-subversion-repository</a></p>

<p><a href="http://stackoverflow.com/questions/3420741/cvs-comma-v-files-in-attic-and-directory">http://stackoverflow.com/questions/3420741/cvs-comma-v-files-in-attic-and-directory</a></p>

<p><a href="http://cvs2svn.tigris.org/faq.html#atticprob">http://cvs2svn.tigris.org/faq.html#atticprob</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Svn检出文件名中含中文文件失败问题解决方法]]></title>
    <link href="http://leetschau.github.io/blog/2014/02/27/163511/"/>
    <updated>2014-02-27T16:35:11+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/02/27/163511</id>
    <content type="html"><![CDATA[<p>有时使用svn检出时遇到这样的错误：</p>

<p>svn: Can&rsquo;t convert string from &lsquo;UTF-8&rsquo; to native encoding: &hellip;</p>

<p>这是可能是由于svn所在主机的当前字符集不支持Unicode造成的，确认方法是：运行"locale"指令，输出为：</p>

<pre><code>LANG=en_US.UTF-8
LANGUAGE=
LC_CTYPE="en_US"
LC_NUMERIC="en_US"
LC_TIME="en_US"
LC_COLLATE="en_US"
LC_MONETARY="en_US"
LC_MESSAGES="en_US"
LC_PAPER="en_US"
LC_NAME="en_US"
LC_ADDRESS="en_US"
LC_TELEPHONE="en_US"
LC_MEASUREMENT="en_US"
LC_IDENTIFICATION="en_US"
LC_ALL=en_US
</code></pre>

<p>&ldquo;en_US"后面没有&rdquo;.UTF-8"，/etc/default/locale文件的内容是：</p>

<pre><code>LC_ALL="en_US"
</code></pre>

<p>也没有".UTF-8"，解决方法很简单，在后面加上".UTF-8"，变为</p>

<pre><code>LC_ALL="en_US.UTF-8"
</code></pre>

<p>这时再运行locale命令，结果如下：</p>

<pre><code>LANG=en_US.UTF-8
LANGUAGE=
LC_CTYPE="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_COLLATE="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_MESSAGES="en_US.UTF-8"
LC_PAPER="en_US.UTF-8"
LC_NAME="en_US.UTF-8"
LC_ADDRESS="en_US.UTF-8"
LC_TELEPHONE="en_US.UTF-8"
LC_MEASUREMENT="en_US.UTF-8"
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=en_US.UTF-8
</code></pre>

<p>这时再检出中文文件名文件就不报错了。</p>

<p>在CentOS上，对应的locale文件是/etc/sysconfig/i18n。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Subversion Backup and Restore]]></title>
    <link href="http://leetschau.github.io/blog/2013/10/31/174404/"/>
    <updated>2013-10-31T17:44:04+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/10/31/174404</id>
    <content type="html"><![CDATA[<h1>Backup Specified Revision</h1>

<ol>
<li><p>Backup specified revision (here is 20):</p>

<pre><code> $ cd /opt/svnRepo
 $ svnadmin dump deployTest/ -r 20 &gt; deploy-r20.dump
</code></pre></li>
<li><p>Restore backup:</p>

<pre><code> $ mv deploy-r20.dump /opt/Gcp/tmp
 $ cd /opt/Gcp/tmp
 $ svnadmin create deploy20
 $ svnadmin load deploy20 &lt; deploy-r20.dump
</code></pre></li>
</ol>


<h1>Verify</h1>

<ol>
<li><p>Get revision 20 of &ldquo;deploy.exp&rdquo; in original repository</p>

<pre><code> $ svn cat -r 20 file:///opt/svnRepo/deployTest/CalcServer/deploy.exp &gt; r20
</code></pre></li>
<li><p>Get &ldquo;deploy.exp&rdquo; in restored repository</p>

<pre><code> $ svn cat file:///opt/Gcp/tmp/deploy20/CalcServer/deploy.exp &gt; restore20
</code></pre></li>
<li><p>Compare them:</p>

<pre><code> $ diff r20 restore20
</code></pre>

<p> They are identical.</p></li>
<li><p>Compare logs:</p>

<pre><code> [root@cloud141 /opt/svnRepo]$ svn log -r 20 file:///opt/svnRepo/deployTest/ 
 ------------------------------------------------------------------------ 
 r20 | bvt | 2013-08-30 17:30:03 +0800 (Fri, 30 Aug 2013) | 1 line 
 remove unittest in source file 
 -------------------------------------------------------- 
 [root@cloud141 /opt/svnRepo]$ svn log file:///opt/Gcp/tmp/deploy20 
 ------------------------------------------------------------------------ 
 r1 | bvt | 2013-08-30 17:30:03 +0800 (Fri, 30 Aug 2013) | 1 line 
 remove unittest in source file 
 ------------------------------------------------------------------------ 
</code></pre></li>
</ol>


<p>So you can see the restored repository is identical to that part of original repository <strong>except</strong> the revision number.</p>

<h1>Backup Specified Revisions</h1>

<pre><code>    $ svnadmin dump deployTest/ -r 10:20 &gt; deploy-r20.dump
</code></pre>

<h1>Incremental Backup</h1>

<ol>
<li><p>Backup:</p>

<pre><code> $svnadmin dump myrepos -r 0:1000 &gt; 0-1000.dumpfile 
 $svnadmin dump myrepos -r 1001:2000 --incremental &gt; 1001-2000.dumpfile 
 $svnadmin dump myrepos -r 2001:3000 --incremental &gt; 2001:3000.dumpfile 
</code></pre></li>
<li><p>Restore:</p>

<pre><code> $svnadmin load myrepos &lt; 0-1000.dumpfile 
 $svnadmin load myrepos &lt; 1001-2000.dumpfile 
 $svnadmin load myrepos &lt; 2001:3000.dumpfile 
</code></pre></li>
</ol>


<h2>Experiment on incremental dump</h2>

<ol>
<li><p>Create a incremental backup:</p>

<pre><code> [root@cloud141 /opt/svnRepo]$ svnadmin dump deployTest/ --incremental -r 9:11 &gt; r9-11.dump 
</code></pre></li>
<li><p>Create a full backup:</p>

<pre><code> [root@cloud141 /opt/svnRepo]$ svnadmin dump deployTest/ -r 9:11 &gt; backup9-11.dump 
</code></pre></li>
<li><p>Compare the size of these two dump files, full backup is obviously larger than the incremental counterpart:</p>

<pre><code> [root@cloud141 /opt/svnRepo]$ ll 
 total 984 
 -rw-r--r-- 1 root root 997105 Oct 31 19:08 backup9-11.dump 
 drwxr-xr-x 6 root root 4096 Aug 22 18:09 deployTest 
 -rw-r--r-- 1 root root 2509 Oct 31 19:07 r9-11.dump 
</code></pre></li>
<li><p>Restore a incremental backup in a fresh repository:</p>

<pre><code> [root@cloud141 /opt/svnRepo]$ mv r9-11.dump ../Gcp/tmp 
 [root@cloud141 /opt/Gcp/tmp]$ svnadmin create new9 
 [root@cloud141 /opt/Gcp/tmp]$ svnadmin load new9 &lt; r9-11.dump 
 &lt;&lt;&lt; Started new transaction, based on original revision 9 
 svnadmin: File not found: transaction '0-0', path 'CalcServer/src/com/boco/deploy/ConfigLoader.java' 
   * editing path : CalcServer/src/com/boco/deploy/ConfigLoader.java ...[root@ 
</code></pre>

<p> You can see the restore failed.</p></li>
<li><p>Restore a incremental backup (revision 9~11) in a &ldquo;root&rdquo; repository (restored from revision 8) :</p>

<pre><code> [root@cloud141 /opt/Gcp/tmp]$ svnadmin load backup8 &lt; r9-11.dump 
 ... 
 [root@cloud141 /opt/Gcp/tmp]$ svn log file:///opt/Gcp/tmp/backup8 
 ------------------------------------------------------------------------ 
 r4 | bvt | 2013-08-30 16:35:10 +0800 (Fri, 30 Aug 2013) | 1 line 
 initial import project 
 ------------------------------------------------------------------------ 
 r3 | bvt | 2013-08-30 15:31:47 +0800 (Fri, 30 Aug 2013) | 1 line 
 make new project basedir 
 ------------------------------------------------------------------------ 
 r2 | bvt | 2013-08-29 14:32:15 +0800 (Thu, 29 Aug 2013) | 1 line 
 remove unittest in source file to pass compile without junit 
 ------------------------------------------------------------------------ 
 r1 | bvt | 2013-08-29 14:31:10 +0800 (Thu, 29 Aug 2013) | 1 line 
 remove unittest in source file to pass compile without junit 
 ------------------------------------------------------------------------ 
</code></pre>

<p> Now the restore succeed.</p></li>
</ol>


<h2>Summary</h2>

<p>Backup a huge repository in the following steps:</p>

<ol>
<li><p>Execute a full backup at a revision. If the revision n is not 0, you will lose all revisions from 0 to n-1;</p></li>
<li><p>Execute incremental backups weekly, use the revision arrange as file name: &ldquo;inc-rev-from-to.dump&rdquo;, like &ldquo;inc-rev-35-46.dump&rdquo;;</p></li>
<li><p>When original repository corrupts, first load the full backup, then load the incremental ones according to their revision numbers;</p></li>
</ol>


<p>Ref:</p>

<ul>
<li><p><a href="http://blog.csdn.net/windone0109/article/details/2908133">SVN版本库的备份、还原、移植（初级篇、中级篇和高级篇）</a></p></li>
<li><p><a href="http://greyshine.blog.51cto.com/1003856/415113">SVN备份及其还原——dump/load方法</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove All Subversion Unversoned Files and Directories Automatically]]></title>
    <link href="http://leetschau.github.io/blog/2013/10/22/113552/"/>
    <updated>2013-10-22T11:35:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/10/22/113552</id>
    <content type="html"><![CDATA[<p>svn status | grep ^\? | cut -c9- | xargs -d \n rm -r</p>

<p>Ref: <a href="http://stackoverflow.com/questions/239340/automatically-remove-subversion-unversioned-files">http://stackoverflow.com/questions/239340/automatically-remove-subversion-unversioned-files</a></p>

<p>Note:</p>

<ol>
<li><p>In &ldquo;cut -c9-&rdquo;, &ldquo;-c&rdquo; means character, &ldquo;9-&rdquo; means retaining all characters from the 9th to the end of each line of input file;</p></li>
<li><p>In &ldquo;xargs -d \n&hellip;&rdquo;, -d specifies the delimiter, here it&rsquo;s the carriage return(\n);</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copy, Tag and Branch of Subversion]]></title>
    <link href="http://leetschau.github.io/blog/2013/08/30/180938/"/>
    <updated>2013-08-30T18:09:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/08/30/180938</id>
    <content type="html"><![CDATA[<p>Tag and branch are the same from the point of view of svn server. They are both the &ldquo;copy&rdquo; operation (this is why they use the same menu item in TortoiseSVN, they are actually the &ldquo;svn copy&rdquo; command). Copy operation of svn server will create a link to original revision. So create tag or branch will not double the disk space usage. The disk space usage is actually related with how many files are modified based on a specific revision.</p>

<p>What is the difference of tag and branch? When you create a &ldquo;tag&rdquo;, you mean you will save this link at a &ldquo;baseline area&rdquo; where it&rsquo;s prohibited to do checkout-modify-checkin operation. On the contrary, if you create a &ldquo;branch&rdquo;, you will do checkout-modify-checkin operation in the future for new feature development or bug fix.</p>

<p>Use &ldquo;svn help copy&rdquo; for explanations.</p>
]]></content>
  </entry>
  
</feed>
