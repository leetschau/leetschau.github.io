<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bat | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/bat/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-30T15:40:38+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bat脚本中%~dp0含义解释]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/11/173112/"/>
    <updated>2012-12-11T17:31:12+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/11/173112</id>
    <content type="html"><![CDATA[<p>在Windows脚本中，%i类似于shell脚本中的$i，%0表示脚本本身，%1表示脚本的第一个参数，以此类推到%9，在%和i之间可以有“修饰符”（完整列表可通过&#8221;for /?&ldquo;指令查看），表示对%i进行各种处理，其中d表示盘符，p表示除盘符外的路径，n表示文件名，x表示扩展名，f表示全路径（路径+文件名），s表示8.3格式的全路径，修饰符可以组合，所以%~dp0的意思是：脚本本身（%0）的路径（盘符d+路径p）。下面是实例演示，在F:\ghost\tmpFiles\下新建aa.bat文件，内容如下：</p>

<p> @echo off
 echo %%0 = %0
 echo %%1 = %1
 echo %%2 = %2
 echo %%~0 = %~0
 echo %%~1 = %~1
 echo %%~2 = %~2
 echo %%~d0 = %~d0
 echo %%~p0 = %~p0
 echo %%~dp0 = %~dp0
 echo %%~n0 = %~n0
 echo %%~x0 = %~x0
 echo %%~nx0 = %~nx0
 echo %%~f0 = %~f0
 echo %%~s0 = %~s0
 echo %%~fs0 = %~fs0
 echo %%~dp1 = %~dp1
 echo %%~nx1 = %~nx1
 echo %%~fs1 = %~fs1
 echo %%~dp2 = %~dp2
 echo %%~nx2 = %~nx2
 echo %%~f2 = %~f2
 echo %%~s2 = %~s2
 echo %%~fs2 = %~fs2</p>

<p>然后加两个附加参数运行这个文件： &ldquo;aa.bat f:\CMDTest.zip f:\warez\Develop\C\codeblocks-12.11mingw-setup.zip&#8221;，运行结果如下：</p>

<p> %0 = aa.bat
 %1 = f:\CMDTest.zip
 %2 = f:\warez\Develop\C\codeblocks-12.11mingw-setup.zip
 %~0 = aa.bat
 %~1 = f:\CMDTest.zip
 %~2 = f:\warez\Develop\C\codeblocks-12.11mingw-setup.zip
 %~d0 = F:
 %~p0 = \ghost\tmpFiles\
 %~dp0 = F:\ghost\tmpFiles\
 %~n0 = aa
 %~x0 = .bat
 %~nx0 = aa.bat
 %~f0 = F:\ghost\tmpFiles\aa.bat
 %~s0 = F:\ghost\tmpFiles\aa.bat
 %~fs0 = F:\ghost\tmpFiles\aa.bat
 %~dp1 = f:\
 %~nx1 = CMDTest.zip
 %~fs1 = f:\CMDTest.zip
 %~dp2 = f:\warez\Develop\C\
 %~nx2 = codeblocks-12.11mingw-setup.zip
 %~f2 = f:\warez\Develop\C\codeblocks-12.11mingw-setup.zip
 %~s2 = f:\warez\Develop\C\CODEBL~1.ZIP
 %~fs2 = f:\warez\Develop\C\CODEBL~1.ZIP</p>

<p>参考<a href="http://stackoverflow.com/questions/5034076/what-does-dp0-mean-and-how-does-it-work">What does %~dp0 mean, and how does it work?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bat脚本的非阻塞调用]]></title>
    <link href="http://leetschau.github.io/blog/2012/04/20/083747/"/>
    <updated>2012-04-20T08:37:47+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/04/20/083747</id>
    <content type="html"><![CDATA[<p>例如现在要启动3个Server，每个都监听一个端口，因此需要在调用脚本之外的进程里运行，这就需要start命令：</p>

<p> start F:\Software\Python27\python.exe blocking-server/slowpoetry.py &ndash;port 10000 poetry/ecstasy.txt &ndash;num-bytes 30
start F:\Software\Python27\python.exe blocking-server/slowpoetry.py &ndash;port 10001 poetry/fascination.txt
start F:\Software\Python27\python.exe blocking-server/slowpoetry.py &ndash;port 10002 poetry/science.txt</p>

<p>如果用call取代start，脚本会阻塞在第一个调用中，直到第一个调用返回才启动第二个。</p>

<p>使用set为变量赋值时，注意等号左右不要留空格，否则变量名和变量值会包括这些空格。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Multiple Jar Files Into Classpath]]></title>
    <link href="http://leetschau.github.io/blog/2012/04/16/170053/"/>
    <updated>2012-04-16T17:00:53+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/04/16/170053</id>
    <content type="html"><![CDATA[<p>运行java程序的脚本经常要将conf文件夹和lib文件夹中所有jar包加入到classpath里，送给java命令的-cp参数，当使用JDK6及以上版本时，可以写成：</p>

<p> java -cp lib/*:conf com.boco.nep.Server</p>

<p>其中<em>代表</em>.jar或者*.JAR，参考&#8221;<a href="http://stackoverflow.com/questions/219585/setting-multiple-jars-in-java-classpath">http://stackoverflow.com/questions/219585/setting-multiple-jars-in-java-classpath</a>&#8220;；</p>

<p>如果上面的方法无效，也可以采用遍历方法加入jar包：</p>

<h1>bash on Unix (start.sh in $APP_HOME/bin folder)</h1>

<p> JARS=&ldquo;./conf&rdquo;
 for i in <code>ls ./lib/*.jar</code>; do
  JARS=&ldquo;$JARS&rdquo;:$i
 done
 exec &ldquo;${JAVA_HOME}/bin/java&rdquo; -cp $JARS com.boco.nep.Server</p>

<h1>Windows (start.bat in $APP_HOME\bin folder)</h1>

<p> @echo off
 cd ../lib
 set jars=
 SETLOCAL ENABLEDELAYEDEXPANSION
 for /f %%i in (&lsquo;dir /b *.jar&rsquo;) do set jars=%%i;!jars!</p>

<p> call java -cp %jars% com.boco.nes.mina.Server</p>

<p>注意jar包文件中不能有空格，否则jars中只有空格前的那一部分文件名；</p>

<h2>语法解释</h2>

<p>&ldquo;dir /b *.jar&#8221;以紧凑格式列出lib文件夹下所有的jar包文件（不包括文件大小、修改时间等信息）；</p>

<p>%%i是声明的循环变量（bat脚本中循环变量以%%开头加一个字母组成）；</p>

<p>&ldquo;for /f <var_name> in (set) do <command>&#8220;循环执行set中的每一个元素（详细语法可在命令行中指令&#8221;for /?&#8221;查看）；</p>

<p>&ldquo;SETLOCAL ENABLEDELAYEDEXPANSION&#8221;与&rdquo;!jars!&ldquo;配合实现变量jars的延迟赋值，其作用参考<a href="http://www.jb51.net/article/29323.htm">批处理中setlocal enabledelayedexpansion的作用详细整理</a>。</p>

<p>Windows版中使用语法的含义可参考<a href="http://topmanopensource.iteye.com/blog/506634">Windows bat命令编写大全</a>；for命令的用法；</p>

<h1>多层目录遍历</h1>

<p>Windows多层目录遍历可以用&#8221;for /r&#8221;或者&#8221;for /f %%i (&lsquo;dir /ad dir_name&rsquo;) do command&#8221;，其中&#8221;dir /ad&#8221;表示只列出目录，参考<a href="http://ss64.com/nt/for_d.html">FOR /D</a>。</p>
]]></content>
  </entry>
  
</feed>
