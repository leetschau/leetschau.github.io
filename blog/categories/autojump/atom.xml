<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Autojump | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/autojump/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-10-29T20:16:11+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install and Update Autojump and Oh-my-zsh Behind a Firewall]]></title>
    <link href="http://leetschau.github.io/blog/2013/10/22/095622/"/>
    <updated>2013-10-22T09:56:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/10/22/095622</id>
    <content type="html"><![CDATA[<h1>Brief installation steps:</h1>

<ol>
<li><p>Install git and zsh via yum;</p></li>
<li><p>&lsquo;git clone&rsquo; autojump and oh-my-zsh from an internet-connected host;</p></li>
<li><p>Install autojump and oh-my-zsh manually according to the instructions on their websites.</p></li>
</ol>


<h1>Install</h1>

<pre><code># yum install zsh
# yum install git
$ ssh-copy-id chad@10.21.3.31 (run "ssh-keygen" if have no key)
$ git clone chad@10.21.3.31:/home/chad/.oh-my-zsh
$ cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
$ git clone chad@10.21.3.31:/home/chad/docs/tmp/autojump (you need 'git clone' from internet on host 31 beforehand)
$ cd autojump;./install.sh   (after installation, add some text into ~/.zshrc according to its prompt)
add "autojump" into "plugins" of ~/.zshrc
$ chsh -s /bin/zsh
restart zsh
</code></pre>

<h1>Update</h1>

<p>The server 10.0.2.74 is behind firewall, and the auto-update is blocked. The oh-my-zsh on laptop 10.21.3.139 is updated. To enable auto-update on server 74, modify update target repo: modify ~/.oh-my-zsh/.git/config: [remote &ldquo;origin&rdquo;] -> url from</p>

<pre><code>https://github.com/robbyrussell/oh-my-zsh.git 
</code></pre>

<p>to</p>

<pre><code>lichao@10.21.3.139:/home/lichao/.oh-my-zsh/.git
</code></pre>

<p>Now you can update oh-my-zsh automatically or manually:</p>

<pre><code>$ cd
$ upgrade_oh_my_zsh
</code></pre>

<p>Note:</p>

<ol>
<li><p>You must copy public key of 74 to 139:</p>

<p> ssh-copy-id <a href="&#x6d;&#97;&#105;&#108;&#x74;&#111;&#58;&#108;&#x69;&#99;&#104;&#x61;&#x6f;&#x40;&#x31;&#x30;&#46;&#x32;&#x31;&#x2e;&#x33;&#46;&#49;&#x33;&#57;">&#108;&#105;&#x63;&#x68;&#97;&#111;&#64;&#49;&#x30;&#46;&#x32;&#x31;&#x2e;&#x33;&#x2e;&#x31;&#51;&#57;</a></p></li>
<li><p>You can&rsquo;t add &ldquo;ssh://&rdquo; before &ldquo;lichao@&hellip;&rdquo;. It complains &ldquo;ssh could not resolve hostname 10.21.3.139&rdquo; , Why?</p></li>
<li><p>On internet-connected Ubuntu host, you can install autojump with &lsquo;apt-get install autojump&rsquo;.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes About Zsh]]></title>
    <link href="http://leetschau.github.io/blog/2013/07/06/103233/"/>
    <updated>2013-07-06T10:32:33+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/07/06/103233</id>
    <content type="html"><![CDATA[<h1>Setup</h1>

<p>Install zsh: <code>apt-get install zsh</code>;</p>

<p>Install <a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a> with &ldquo;git clone &hellip;&rdquo;;</p>

<p>Now you can change color and prompt style by changing the value of &ldquo;ZSH_THEME&rdquo; in .zshrc;</p>

<p>Install autojump plugin with <code>apt-get install autojump</code>.
Add it to &ldquo;plugins&rdquo; variable in .zshrc to enable it (add it after &ldquo;git&rdquo;):</p>

<pre><code>plugin=(git, autojump)
</code></pre>

<p>Set zsh as default shell: <code>chsh -s /bin/zsh</code>;</p>

<p>In ~/.zshrc, add:</p>

<pre><code>ZSH=$HOME/.oh-my-zsh
ZSH_THEME=rkj
</code></pre>

<h1>Usage</h1>

<h2>path navigation</h2>

<p>The tab-completion function of bash can only auto-complete one path name at a time.
While that of zsh auto complete multi-levels path at a time.
So if you want go to ~/dir1/SubDir2/SubSubdir3/Target,
instead of type &ldquo;cd blah blah blah&rdquo;,
just type &ldquo;~/d/s/s/t<tab><cr>&rdquo; and you got there.
Note that path recognition in zsh is <strong>not</strong> case sensitive,
so no need to care about capital letters.
This make path navigation really fast and meaningful.</p>

<p>You can ommit &ldquo;cd&rdquo; command before change current directory (make sure option AUTO_CD is turned on).
So if you want go to parent folder, &ldquo;..&rdquo; is ok.
If you want come back, &ldquo;-&rdquo; or &ldquo;1&rdquo;.
If you want go to ./apps/eclipse-java-juno-SR2-linux-gtk/p2/org.eclipse.equinox.p2.core/cache/binary,
just type: &ldquo;apps<tab>&rdquo; then a list will be displayed and you can use <tab> to select among them.</p>

<p>Use &ldquo;Alt+Backspace&rdquo; to delete a path name (not a character).</p>

<p>Use d to list all visited folders.
Use 1~9 to navigate to folders in the recent visited list.
Because 0 is always the current folder, you can just use &ldquo;1&rdquo; to switch between two folders.</p>

<p>With autojump, you can use &ldquo;j partial_folder_name&rdquo; to jump to a directory you have previously visited.
For example: &ldquo;j gaia&rdquo; will jump to &ldquo;/home/bvt/.jenkins/jobs/GAIA&rdquo;,
or &ldquo;j gaia/works&rdquo; to &ldquo;/home/bvt/.jenkins/jobs/GAIA/workspace&rdquo;.
Use <code>autojump -s</code> or <code>j -s</code> to show all entries in autojump database with their weight.
Use &ldquo;j&rdquo; to jump to the item with highest weight.
So you can have a &ldquo;favorite list&rdquo; based on the weight.</p>

<p>If you want change a item to another folder,
say the old destination of <code>j work</code> is to ~/docs/jshome/workspace,
and now you want it to ~/docs/haskell/workspace.
For now the weight of jshome is 122.3, and that of the haskell is 90.4.
So this can be achieved by decrease the weight of jshome less than that of haskell:</p>

<pre><code>j -d 50 work
</code></pre>

<p>This makes the weight of jshome to 72.3.
See <code>j -h</code> or <code>autojump --help</code> for details.</p>

<h2>find files</h2>

<p>use &ldquo;ls <em><em>/</em>.zip&rdquo; instead of &ldquo;find . -name </em>.zip&rdquo;;</p>

<h2>edit files</h2>

<p>use &ldquo;vi <strong>/gaia/</strong>/build.xml&rdquo; instead of giving the actual path of the file;</p>

<h2>command history search</h2>

<p>use &ldquo;Ctrl + R&rdquo; to activate command search mode;</p>

<h2>other type-saving tricks</h2>

<p>&ldquo;less REMDME&rdquo; -> &ldquo;&lt;README&rdquo;</p>

<h2>open file in zsh</h2>

<p><code>alias -s pdf=exo-open</code> will use exo-open to open pdf files.
Now you can use ./book.pdf to open it in Document Viewer as if it&rsquo;s a executable command.</p>

<p><code>alias -s pdf=evince</code> has the same effect with previous &ldquo;exo-open&rdquo; method on Ubuntu,
except that pdf application (Document Viewer, or evince) runs in foreground,
which means zsh hangs when evince runs.
So &ldquo;exo-open&rdquo; is a better choice for it acts like double click file in GUI file manager (like Thunar).</p>

<p>But on Ubuntu, evince is builtin app, while exo-open not.</p>

<p>If you only want this in a session, define it in command line. If you want system remember this, add it into .zshrc.</p>

<p>To open all file associations already defined in system, put the following lines in .zshrc:</p>

<pre><code>autoload -U zsh-mime-setup

zsh-mime-setup
</code></pre>

<p>Ref: <a href="http://www.bash2zsh.com/essays/essay1_file_manager.html">Replacing the File Manager in Zsh</a></p>

<p>Use <code>alias -s</code> to list all file extension associations defined.</p>

<p>Use <code>unalias -s pdf</code> to remove the association (or remove alias command from .zshrc).</p>

<h2>Cheatsheet</h2>

<ul>
<li><p>take: &ldquo;take myfolder&rdquo; equals to &ldquo;mkdir myfolder;cd myfolder&rdquo;;</p></li>
<li><p>x: extract some file, including zip, tar, gz, bz2, tgz, 7z, etc file;</p></li>
<li><p>zsh_stats: print top 20 frequently used commands under zsh;</p></li>
<li><p>upgrade_oh_my_zsh: upgrade Oh-my-zsh;</p></li>
<li><p>uninstall_oh_my_zsh: uninstall Oh-my-zsh;</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
