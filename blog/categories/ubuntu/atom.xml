<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-10-05T15:23:42+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running Meteor and Node App on Ubuntu 14.04 VPS]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/22/082040/"/>
    <updated>2015-07-22T08:20:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/22/082040</id>
    <content type="html"><![CDATA[<h1>Setup Environment with MUP</h1>

<p>On your laptop, install mup with <code>npm install -g mup</code>.
In a new directory, create a mup project with <code>mup init</code>.
Set &ldquo;setupMongo&rdquo;, &ldquo;setupNode&rdquo; and &ldquo;setupPhantom&rdquo; to &ldquo;true&rdquo; in mup.json,
and run <code>mup setup</code>.</p>

<h1>Run Apps</h1>

<p>To install the <strong>first</strong> Meteor app, <code>mup deploy</code>.</p>

<p>To install the second (there has been a Meteor app is running) or more,
set &ldquo;setupMongo&rdquo;, &ldquo;setupNode&rdquo; and &ldquo;setupPhantom&rdquo; to &ldquo;false&rdquo; in mup.json,
change &ldquo;appname&rdquo;, &ldquo;app&rdquo; and values in &ldquo;env&rdquo; accordingly.
Finally run <code>mup deploy</code>.</p>

<p>For Node app, first get the source code with git,
then run it with forever, which is installed by mup:</p>

<pre><code>aptitude install git
git clone ... projHome
cd projHome
npm install
# confirm port number in config.js
forever start app.js  # when the main script is "app.js"
</code></pre>

<p>Get the app status with <code>forever list</code>.
If the app can&rsquo;t start, print logs with <code>forever logs 1</code>
(if the target app&rsquo;s index in <code>forever list</code> is 1).</p>

<h1>Setup Routes</h1>

<p>Note: MUP requires Node v0.10.36 or later.
So do NOT install node with <code>aptitude install nodejs</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tmux Configurations for Unity Desktop]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/18/112729/"/>
    <updated>2015-06-18T11:27:29+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/18/112729</id>
    <content type="html"><![CDATA[<p>Verified on Ubuntu 14.04, 2015-6-18.</p>

<h1>Prefix</h1>

<p><code>M-f</code> will activate the Unity HUB, so use <code>M-q</code> as tmux prefix:
<code>set -g prefix M-q</code>.</p>

<h1>Get Help</h1>

<ul>
<li><p>List all shortcuts: prefix ?</p></li>
<li><p>List all commands: <code>tmux list-commands</code></p></li>
</ul>


<h1>Open a new Window/Pane</h1>

<p>bind -n M-/ split-window -h
bind -n M&ndash; split-window -v
bind -n M-n new-window</p>

<h1>Resize Pane in a Window</h1>

<p>Use Ctrl- arrow key to resize pane:</p>

<pre><code>bind -n -r ^Left resize-pane -L 5
bind -n -r ^Down resize-pane -D 5
bind -n -r ^Up resize-pane -U 5
bind -n -r ^Right resize-pane -R 5
</code></pre>

<p>Use <code>M-z</code> to maximize/restore a pane:
<code>bind -n M-z resize-pane -Z</code>.</p>

<h1>Rotate Panes in a Window</h1>

<p>Use default settings: prefix + Space</p>

<h1>Jump between Window and Pane</h1>

<p>Alt-(1~9): jump between windows;</p>

<p>Alt-h/j/k/l: jump between panes;</p>

<pre><code>bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R
</code></pre>

<h1>Move Window</h1>

<p>Moving window behaves different with i3wm.
If the target window exists, you have to use <code>join-pane</code>, otherwise <code>break-pane</code>.</p>

<p>I use <code>if-shell</code> to test if the target window exists.</p>

<p>Then add target window number provided by user (%1, which means the first user-input parameter)
after &ldquo;-t&rdquo; option of <code>join-pane</code>.
The default target format is <code>#{session_name}:#{window_index}.#{pane_index}</code>.
See <code>man tmux</code> for details.</p>

<pre><code>bind -n M-i command-prompt -p "move current pane to window:" "if-shell 'tmux list-windows |grep \"^%1\":' 'join-pane -t:\"%1\"' 'break-pane'"
</code></pre>

<h1>Other helpful resources</h1>

<p>Use <code>^A</code> to represent &ldquo;Ctrl-A&rdquo;.</p>

<p>Shutdown visual alerts:</p>

<pre><code>setw -g monitor-activity on
set -g visual-activity off
</code></pre>

<h2>Commands</h2>

<ul>
<li><code>clock-mode</code>: display a large clock on the terminal</li>
</ul>


<h2>Shortcuts</h2>

<pre><code>bind -n M-a command-prompt
bind -n M-r command-prompt -p "rename window name to:" "rename-window '%%'"
bind r source-file ~/.tmux.conf \; display "Reloaded!"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video Player on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/10/153142/"/>
    <updated>2015-06-10T15:31:42+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/10/153142</id>
    <content type="html"><![CDATA[<h1>SMPlayer</h1>

<p>9/0: volume down/up;</p>

<p>Ctrl-P: preferences;</p>

<p>Ctrl-L: toogle play list;</p>

<p>,/.: play previous/next (need modify)</p>

<p>Customize hotkeys: Options -> Preferences -> Hotkeys</p>

<h1>VLC</h1>

<p>Ctrl-P: preferences;</p>

<p>Ctrl-L: toogle play list;</p>

<p>Customize hotkeys: Preferences -> Hotkeys</p>

<p>Hotkeys:</p>

<p>f: toogle full screen;
t: show time;
m: toogle mute;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 14.04中通过ADSL连接网络]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/10/114719/"/>
    <updated>2015-06-10T11:47:19+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/10/114719</id>
    <content type="html"><![CDATA[<p>有时不方便使用无线网络，需要通过有线连接的方式通过ADSL上网。
下面的方法在Ubuntu 14.04上验证通过（2015年6月10日于百万庄15楼）。</p>

<h1>Unity桌面环境</h1>

<p>在Ubuntu 14.04的Unity桌面上，右上角点击网络图标，弹出菜单上点击最后一项：Edit Connections&hellip;
弹出"Network Connections"对话框，点击"Add"按钮，
&ldquo;Choose a Connection Type"中选择"Hardware -> DSL"，点击"Create"按钮，
在弹出的"Edit DSL &hellip;"对话框中，在"Connection name"里填上连接名称，比如"MyDSL"，
然后在"DSL"标签页中，"Username"和"Password"分别填上ADSL的帐号名和密码，
"Service"项留空，点击"Save"按钮。</p>

<p>确认网线已插入，点击桌面右上角网络图标，网络列表里可以看到"MyDSL"，点击之，就连接上了ADSL网络。</p>

<p>参考：<a href="https://www.youtube.com/watch?v=Dx-G-Sn6IhY">How to create DSL (PPPoE) connection on Ubuntu - YouTube</a></p>

<h1>i3wm命令行环境下</h1>

<p>首先运行<code>pppoeconf</code>（注意不是pppconfig），输入ADSL的用户名和密码，其他选型都使用默认值。
安装完成后运行<code>ip addr</code>可以看到多了一个"ppp0"网卡，用<code>plog</code>可以查询状态。
用<code>ps aux|grep ppp</code>可以看到多了一个pppd服务。</p>

<p>配置好后，再次连接ADSL网络时，
使用<code>pon dsl-provider</code>启动服务，可以在输入<code>pon</code>后使用<Tab>键列出可用的选项。
使用<code>sudo poff</code>断开ADSL网络。</p>

<p>参考：<a href="https://help.ubuntu.com/community/ADSLPPPoE">ADSLPPPoE</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Define Key Binding With Xbindkeys on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2014/10/16/154329/"/>
    <updated>2014-10-16T15:43:29+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/10/16/154329</id>
    <content type="html"><![CDATA[<p>On ArchLinux:</p>

<ol>
<li><p>Install xbindkeys: <code>pacman -S xbindkeys</code> or <code>apt-get install xbindkeys</code>;</p></li>
<li><p>Start xbindkeys when X startup: add &ldquo;xbindkeys&rdquo; <strong>before</strong> &ldquo;exec i3&rdquo; in ~/.xinitrc;</p></li>
<li><p>Get a template: <code>xbindkeys -d &gt; ~/.xbindkeysrc</code>;</p></li>
<li><p>Detect key definition: <code>xbindkeys -k</code>;</p></li>
<li><p>Add output from last command to ~/.xbindkeysrc;</p></li>
<li><p>Reload new configs: <code>pkill xbindkeys; xbindkeys</code>;</p></li>
<li><p>Verify the setup.</p></li>
</ol>


<p>Ref:</p>

<ul>
<li><p><a href="https://wiki.archlinux.org/index.php/Xbindkeys">Xbindkeys</a></p></li>
<li><p><a href="http://www.butlerpc.net/blog/2011/01/using-xbindkeys-on-ubuntu-linux-to-remap-key-commands/">http://www.butlerpc.net/blog/2011/01/using-xbindkeys-on-ubuntu-linux-to-remap-key-commands/</a></p></li>
</ul>


<p>In i3 on Ubuntu, install them with <code>sudo aptitude install xbindkeys xbacklight</code>. Others are the same.</p>

<p>As an example,
add the following lines into ~/.xbindkeysrc, to increase and decrease LCD brightness of Thinkpad T440p:</p>

<pre><code>"xbacklight -dec 10"
    XF86MonBrightnessDown

"xbacklight -inc 10"
    XF86MonBrightnessUp
</code></pre>
]]></content>
  </entry>
  
</feed>
