<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vidalia | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/vidalia/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T14:51:43+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[基于Tor网络的HTTP代理搭建过程]]></title>
    <link href="http://leetschau.github.io/blog/2012/02/02/174801/"/>
    <updated>2012-02-02T17:48:01+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/02/02/174801</id>
    <content type="html"><![CDATA[<p>使用工具： Vidalia , Tor and Polipo ；</p>

<p>用Tor连接tor网络，vidalia是tor的图形化配置界面，但tor只提供socks5代理，需要用polipo将socks5转为http代理，以供其他程序使用，下面是搭建过程。</p>

<p>第一步：安装Polipo，下载安装包（polipo-1.0.4.1-forbidden-1-win32.exe），运行之，安装在f:\Software\Polipo下，然后写配置文件（f:\Software\Polipo\polipo.conf）：</p>

<p> socksParentProxy = &ldquo;localhost:9050&rdquo;</p>

<p> socksProxyType = socks5</p>

<p> diskCacheRoot=&ldquo;&rdquo;</p>

<p> #disableLocalInterface=true</p>

<p>第二步：下载 Tor Browser Bundle ，里面包括了Tor, Vidalia和一个便携版的Firefox，解压后运行Start Tor Browser.exe，出现vidalia界面：</p>

<p>Vidalia Control Panal -> Settings -> General -> Proxy Application下勾选“Start a proxy &hellip;”，下面写上polipo.exe的路径，Application Arguments下面写： -c <polipo conf file path> ，如下图：</p>

<p>配好后重启vidalia，验证tor和polipo运行成功的方法是命令行中运行： netstat -ano|findstr 9050 和 netstat -ano|findstr 8123 ，其中9050是tor绑定的端口，8123是polipo绑定的端口；</p>

<p>第三步：配置要使用http代理的软件。</p>

<p>以GreenBrowser为例：在【工具->代理->设置代理】里新建一个名为polipo，地址为 <a href="http://127.0.0.1:8123">http://127.0.0.1:8123</a> 的代理，【工具->代理】下会多一个【polipo】项，选中它，在地址栏中输入 www.facebook.com , bingo!</p>

<p>主要参考文章：</p>

<p> Tor, Polipo &amp; Vidalia</p>

<p>应用实例1：calibre的代理设置。</p>

<p>在windows系统中设置一个名为 HTTP_PROXY 的环境变量，值为 <a href="http://127.0.0.1:8123">http://127.0.0.1:8123</a> ，然后在calibre安装目录下运行</p>

<p>calibre-debug -c &ldquo;from calibre import get_proxies; print get_proxies()&rdquo;</p>

<p>如果出现 Using proxies: {&lsquo;http&rsquo;: &lsquo;127.0.0.1:8123&rsquo;} 说明配置成功，启动calibre，在Preference->Miscellaneous里可以看到代理已启动。</p>

<p>应用实例2：iTunes的代理设置。</p>

<p>iTunes使用IE的代理设置，所以只要在IE里设置好polipo的信息（ 127.0.0.1:8123 ）就OK了，但要注意Evernote也使用IE的代理设置，所以不需要iTunes联网时不要开启IE的代理。</p>

<p>应用实例3：Eclipse的代理设置。</p>

<p>Active Provider: Manual;</p>

<p>HTTP -> Edit, Host: 127.0.0.1, Port: 8123，如下图：</p>
]]></content>
  </entry>
  
</feed>
