<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dump | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/dump/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-30T16:21:37+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Import Subversion Repository From Subversion Dump File]]></title>
    <link href="http://leetschau.github.io/blog/2014/06/18/111355/"/>
    <updated>2014-06-18T11:13:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/06/18/111355</id>
    <content type="html"><![CDATA[<h1>Overall steps</h1>

<ol>
<li><p>Get dump file from <a href="FTP:">FTP:</a></p></li>
<li><p>Build repository based on the dump file;</p></li>
<li><p>Authorize user of this repository.</p></li>
</ol>


<h1>Operation details</h1>

<h2>On Windows</h2>

<pre><code># get dump file with TotalCmd;
cd K:\svn
svnadmin create ALARM
svnadmin load ALARM &lt; f:\tmp\ALARM-dumpfile
# add the following text into file "c:\Program Files\Apache Group\Apache2\svnaccessfile"
    ALARM-dev=user1,user2,user3
    ####
    [ALARM:/Development-Area]
    @ALARM-dev = rw
    @QA = rw
    @Manager = r
    bvt_common = r
    * = 
    [ALARM:/Management-Area]
    @ALARM-dev = rw
    @QA = rw
    @Manager = r
    * = 
    [ALARM:/Release-Area]
    @ALARM-dev = rw
    @Manager = r
    @QA = rw
    test = r
    * = 
    [ALARM:/Test-Area]
    @ALARM-dev = r
    @QA = rw
    @Manager = r
    * = 
# add following text into file "c:\Program Files\Apache Group\Apache2\passwd"
    user1:pwd1
    user2:pwd2
    user3:pwd3
</code></pre>

<h2>On Linux</h2>

<pre><code>ftp 123.xxx.xxx.xxx
&gt; get ALARM-dumpfile
&gt; bye
cd $SVN_REPO_HOME
svnadmin create ALARM
svnadmin load ALARM &lt; ~\ALARM-dumpfile
# edit file svnaccessfile &amp; passwd the same way with in Windows
</code></pre>

<p>Note:</p>

<p>The default auth rule is &ldquo;everyone can access everything&rdquo; like the following text in svnaccessfile:</p>

<pre><code>[/] 
* = r
@Manager = rw
@QA = rw
@Dev = rw
@TEST-all = rw
</code></pre>

<p>then define more detailed rules to override the default one, notice the last line:</p>

<pre><code>[ALARM:/Development-Area]
@ALARM-dev = rw
...
* = 
</code></pre>

<p>But we can define auth rules in another way:</p>

<pre><code>[/]
* =
[ALARM:/Development-Area]
@ALARM-dev = rw
...
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[通过dump文件分析Java程序运行状态]]></title>
    <link href="http://leetschau.github.io/blog/2012/05/19/144904/"/>
    <updated>2012-05-19T14:49:04+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/05/19/144904</id>
    <content type="html"><![CDATA[<p>Java程序的快照（dump）分为两种：thread dump, heap dump。前者记录了进程（process）中各线程（Thread）（在CPU中的）运行状态主要用来解决死锁（deadlock）问题，后者记录了Java堆的情况，主要用来分析内存泄露问题。</p>

<p> 生成堆dump（heapdump）文件方法
1. 在启动Java程序时添加参数：-XX:+HeapDumpOnCtrlBreak -XX:HeapDumpPath=<my_dump_path>，完整示例见文末；</p>

<ol>
<li><p>启动程序；</p></li>
<li><p>用jps或者ps指令找到此程序pid，例如17992；</p></li>
<li><p>运行kill -3 <pid>；</p></li>
<li><p>在my_dump_path下可以找到生成的dump文件，文件名为java_pid<pid>.hprof.&lt;date.time>，例如：java_pid17992.hprof.20120519.141323</p></li>
</ol>


<p>启动程序的完整脚本：</p>

<h1>!/bin/sh</h1>

<p>JARS=&ldquo;&rdquo;
for i in ./*.jar; do
 JARS=&ldquo;$JARS&rdquo;:$i
done
JAVA_OPTS=&ldquo;-XX:+HeapDumpOnCtrlBreak -XX:HeapDumpPath=$HOME/backup&rdquo;
exec &ldquo;${JAVA_HOME}/bin/java&rdquo; ${JAVA_OPTS} -cp $JARS com.leechau.mina.echoServer.EchoServer
 分析dump文件</p>
]]></content>
  </entry>
  
</feed>
