<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-04-09T20:50:36+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Build a Website With Phoenix]]></title>
    <link href="http://leetschau.github.io/blog/2016/03/02/223258/"/>
    <updated>2016-03-02T22:32:58+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/03/02/223258</id>
    <content type="html"><![CDATA[<p>按照 <a href="http://www.phoenixframework.org/docs/up-and-running%EF%BC%8C">http://www.phoenixframework.org/docs/up-and-running%EF%BC%8C</a>
运行<code>mix phoenix.new hello_world</code>后询问是否安装依赖，选择Y，
mix执行<code>running mix deps.get</code>时长时间没有响应。
Ctrl-C中断，进入hello_world文件夹后运行<code>mix deps.get</code>，一段时间后报超时错误，
加代理后重新执行顺利完成。</p>

<p>在Ubuntu上安装PostgreSQL，安装后，
根据"config/prod.secret.exs"，可知要创建数据库"hello_world_prod &ldquo;：</p>

<pre><code>su - postgres
psql
create database hello_world_prod owner postgres;
</code></pre>

<p>安装后用<code>sudo passwd postgres</code>将用户postgres密码设置为postgres，</p>

<pre><code>sudo chown leo:leo readable-stream
npm install
mix phoenix.server
</code></pre>

<p>在另一个Console中执行<code>vi web/templates/page/index.html.eex</code>，重启phoenix服务，
可以看到修改后的效果。</p>

<p>Note: <code>mix ecto.create</code>可以跳过。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3月6日演讲提纲]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/21/110422/"/>
    <updated>2016-02-21T11:04:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/21/110422</id>
    <content type="html"><![CDATA[<h1>行业背景</h1>

<ul>
<li><p>会展行业现状：基本角色介绍；</p></li>
<li><p>行业特点：信息不透明，中间环节多，交易成本高，主要靠销售，参展体验差；</p></li>
<li><p>与传统B2C领域的区别：交易量小，单笔金额大，多了展会维度；</p></li>
<li><p>产品愿景：改变行业现状，提升会展效果，airbnb vs taobao</p></li>
</ul>


<h1>技术框架选型</h1>

<h2>外包 vs 自主开发</h2>

<p>成本和质量控制，团队建设，备选方案：Magento, ezshop</p>

<h2>Web框架选型</h2>

<p>SSH, LAMP, .NET, Dart, Flask, Play, MEAN, Meteor</p>

<p>开发者背景：Pascal -> Delphi -> Python -> Java -> Scala (Linux)</p>

<p>Meteor优势：学习成本低（js: web + db），开发效率高，reactivity</p>

<h1>架构演进</h1>

<p>原则：自主开发核心商业逻辑，外围功能尽量外包。</p>

<ul>
<li><p>第一阶段：站内搜索，基于正则匹配的站内搜索，
Deploy: MUP, beta -> production;
单一package，bitbucket，DB + Web Server, 公网IP；</p></li>
<li><p>第二阶段：线上搜索 + 线下撮合，以搜索为中心，增加静态广告，
DB + Web Server + Console，初步的权限管理；</p></li>
<li><p>第三阶段：多品种线上交易，多package，git submodule，
DB Cluster + Web Server + Elasticsearch + MongoConnector +
Wordpress + Phabricator + Console;
AliPay, 私有网络；</p></li>
<li><p>第四阶段：单一商品线上交易，精简数据模型，
Deploy: staging (Phab + Ansible, auto) -> beta -> production;
SSL，AliPay + 银行接入；</p></li>
</ul>


<h1>Meteor待改进的地方</h1>

<ul>
<li><p>静态分析工具不足，难以排查拼写错误；</p></li>
<li><p>Package数量增加后，编译速度变慢，受网速影响大；</p></li>
<li><p>版本兼容性不好；</p></li>
<li><p>多数据源处理复杂；</p></li>
<li><p>第三方package兼容性，持续性良莠不齐；</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB数据管理平台产品定义和选型]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/08/170530/"/>
    <updated>2015-06-08T17:05:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/08/170530</id>
    <content type="html"><![CDATA[<h1>目标定位和用户定义</h1>

<p>数据管理平台是商业网站的产品数据支持系统，它的用户是企业的业务人员，没有技术背景，
无法使用MongoDB的命令行工具以及GUI客户端（如Robomongo等）操作数据。
需要通过浏览器维护产品数据，对数据进行增删改查操作，</p>

<h1>功能需求</h1>

<ul>
<li><p>数据管理平台的用户是网站数据的维护者，与商业网站的用户完全不同；</p></li>
<li><p>数据管理平台是一个Web服务;</p></li>
<li><p>每个用户有自己的权限，包括能够访问哪些collection，以及这个collection中的哪些documents；</p></li>
<li><p>目前这个系统只针对MongoDB;</p></li>
<li><p>能够通过Web界面对目标MongoDB进行数据的增删改查操作；</p></li>
</ul>


<h1>实现方法</h1>

<p>使用Meteor作为Web框架；</p>

<p>系统是一个独立的Meteor项目，而不是一个package；</p>

<h1>系统选型</h1>

<p>目前试用了两个Meteor package，两个node.js包，均不符合要求。</p>

<ul>
<li><p><a href="https://github.com/yogiben/meteor-admin">yogiben/meteor-admin</a>: 登录界面上的注册(sign-up)功能有问题，
点击"Register"按钮界面僵死;登录后版式混乱重叠；</p></li>
<li><p><a href="https://github.com/gterrono/houston">Houston</a>: 安装简单，添加包后就可以使用了，
主要问题是使用产品库的Users表，与网站用户混在了一起；
添加数据页面不能根据数据的Schema定义，只能模仿库里现有的document的结构；</p></li>
<li><p><a href="http://keystonejs.com/">KeyStoneJS</a>: Nodejs包，部署和使用相对比较方便，主要问题见<a href="http://stackoverflow.com/questions/30661456/mongodb-content-management-web-app-for-non-technical-guys">我的问题</a>;</p></li>
<li><p><a href="https://github.com/andzdroid/mongo-express">mongo-express</a>: nodejs包，启动后浏览器访问时报404错误，原因未知；</p></li>
</ul>


<h1>其他说明</h1>

<p>系统不是使用MongoDB的GUI客户端，是因为使用这些客户端需要了解MongoDB语句，不符合用户定义。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[离线保存网页]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/26/173952/"/>
    <updated>2015-01-26T17:39:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/26/173952</id>
    <content type="html"><![CDATA[<p>首先试用了Firefox的"Save as PDF"这个插件，发现对于内容复杂的网页，保存总出错。</p>

<p>又试了"Screengrab!&ldquo;这个插件，把整个网页保存成一改png文件，效果不错，
即使网页超出了一屏，也可以保存为一个完整的图片。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Simple Search Homepage]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/18/142454/"/>
    <updated>2015-01-18T14:24:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/18/142454</id>
    <content type="html"><![CDATA[<p>The key points in this web page is:</p>

<ul>
<li><p>How to position a <div> absolute centering with CSS;</p></li>
<li><p>How to add a footer sticky to page bottom: add <code>background-image: none;</code> into navbar&rsquo;s CSS definitions;</p></li>
<li><p>How to align text centering in a row: <code>text-align: center;</code>;</p></li>
<li><p>How to specify font properties, including font-family, font-size and font-weight;</p></li>
<li><p>How to add a image;</p></li>
</ul>


<p>Now build this page:</p>

<pre><code>$ meteor create searchHome
$ cd searchHome
$ ln -s ../client
$ tree
.
├── searchHome.css
├── searchHome.html
├── searchHome.js
├── client -&gt; ../client
└── public
    └── logo.png
$ tree client
client
├── css
│   └── bootstrap.min.css
└── lib
    └── bootstrap.min.js

$ cat &lt;&lt; EOF &gt; searchHome.html
&lt;head&gt;
  &lt;title&gt;NewFairs&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;div class="container"&gt;
    
    
  &lt;/div&gt;

  &lt;div id="content" class="container"&gt;
    
  &lt;/div&gt;

  &lt;div id="footer"&gt;
    &lt;nav class="navbar navbar-fixed-bottom"&gt;
      &lt;div class="container" &gt;Here is the Footer&lt;/div&gt;
    &lt;/nav&gt;
  &lt;/div&gt;
&lt;/body&gt;

&lt;template name="header"&gt;
  &lt;div class="header" align="right"&gt;
    
    &lt;div class="btn-group"&gt;
      &lt;button type="button" class="btn btn-default"&gt;Action&lt;/button&gt;
      &lt;button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false"&gt;
        &lt;span class="caret"&gt;&lt;/span&gt;
        &lt;span class="sr-only"&gt;Toggle Dropdown&lt;/span&gt;
      &lt;/button&gt;
      &lt;ul class="dropdown-menu" role="menu"&gt;
        &lt;li&gt;&lt;a href="#"&gt;汉语&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;English&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;template name="simpleSearchBox"&gt;
  &lt;div class="fixed-search-form"&gt;
    &lt;div class="row logo"&gt;
      &lt;img src="http://leetschau.github.io/logo.png" alt="logo" /&gt;
      牛展网
    &lt;/div&gt;
    &lt;div class="row"&gt;
      &lt;input type="text"&gt;
      &lt;button&gt;搜索&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;template name="hello"&gt;
  &lt;button id="addline"&gt;Add a line&lt;/button&gt;
  &lt;button id="rmline"&gt;Remove a line&lt;/button&gt;
  &lt;div&gt;
    
      &lt;li&gt;Item No: &lt;/li&gt;
    
  &lt;/div&gt;
&lt;/template&gt;
EOF

$ cat &lt;&lt; EOF &gt; searchHome.css
html {
  position: relative;
  min-height: 100%;
}

#content { padding-bottom: 70px; }

.fixed-search-form {
  margin: auto;
  position: absolute;
  top:0; left:0; bottom:0; right:0;
  height: 60%;
  width: 60%;
  text-align: center;
  font-size: x-large;
  font-family: Verdana,
               "Microsoft YaHei", "微软雅黑",
               "WenQuanYi Micro Hei";
}

.search-form .logo {
  font-size: 200%;
  font-weight: bold;
}

#footer .navbar {
  position: absolute;
  background-image: none;
}
EOF
</code></pre>

<p>Note1: the website logo image logo.png is created online, and download to local disk.
See note &ldquo;创建简单的网站Logo&rdquo; for details.</p>

<p>Note2: in &ldquo;font-family&rdquo;, &ldquo;Verdana&rdquo; is english font, &ldquo;Microsoft YaHei&rdquo; is Chinese font for Windows platform, &ldquo;WenQuanYi Micro Hei&rdquo; for Linux platform.
search and show this font with <code>aptitude search wqy</code>, <code>aptitude show fonts-wqy-microhei</code>.
See note &ldquo;Build Working Environment with i3 and Mint&rdquo; for details of this font on Linux.</p>

<p>Refs:</p>

<ul>
<li><p><a href="http://stackoverflow.com/questions/396145/how-to-vertically-center-a-div-for-all-browsers">How to vertically center a div for all browsers?</a></p></li>
<li><p><a href="http://www.ruanyifeng.com/blog/2014/07/chinese_fonts.html">中文字体网页开发指南</a></p></li>
<li><p><a href="http://www.ruanyifeng.com/blog/2008/06/typography_notes.html">字体笔记</a></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
