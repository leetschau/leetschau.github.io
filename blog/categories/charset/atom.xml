<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Charset | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/charset/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-08-30T17:38:24+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add GBK Charset on Ubuntu Server]]></title>
    <link href="http://leetschau.github.io/blog/2014/02/27/181853/"/>
    <updated>2014-02-27T18:18:53+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/02/27/181853</id>
    <content type="html"><![CDATA[<ol>
<li><p>Add following items into /var/lib/locales/supported.d/local:</p>

<p> zh_CN.GBK GBK
 zh_CN.GB2312 GB2312</p></li>
<li><p>$ sudo dpkg-reconfigure &ndash;force locales</p></li>
</ol>


<p>(or simple use <code>sudo locale-gen zh_CN</code>?)</p>

<p>Verify: <code>locale -a</code>, you can see &ldquo;zh_CN.gb2312&rdquo; and &ldquo;zh_CN.gbk&rdquo; in lists.</p>

<ol>
<li>sudo update-locale LANG=zh_CN</li>
</ol>


<p>That&rsquo;s it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[汉字编码查询的Java实现]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/18/113227/"/>
    <updated>2012-12-18T11:32:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/18/113227</id>
    <content type="html"><![CDATA[<h1>Java代码</h1>

<p> package encoding;
 import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.List;
 public class EncodingProbe {
  public static void main(String[] args) throws UnsupportedEncodingException {
   String name = &ldquo;联通移动&rdquo;;
   List<String> charsets = new ArrayList<String>();
   charsets.add(&ldquo;gbk&rdquo;);
   charsets.add(&ldquo;gb18030&rdquo;);
   charsets.add(&ldquo;unicode&rdquo;);
   charsets.add(&ldquo;utf-8&rdquo;);
   for (String charset : charsets) {
    System.out.println(&ldquo;bytes of &rdquo; + name + &ldquo; in charset &rdquo; + charset
      + &ldquo; is: &rdquo; + bytes2HexString(name.getBytes(charset)));
   }
  }
  public static String bytes2HexString(byte[] b) {
   String ret = &ldquo;&rdquo;;
   for (int i = 0; i &lt; b.length; i++) {
    String hex = Integer.toHexString(b[i] &amp; 0xFF);
    if (hex.length() == 1) {
     hex = &lsquo;0&rsquo; + hex;
    }
    ret += hex;
   }
   return ret;
  }
 }</p>

<h1>Windows平台上的其他方法</h1>

<p>用UltraEdit，保存文件时可以选择编码格式；</p>

<h1>Linux平台上的其他方法</h1>

<p>file指令配合iconv指令。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于ISO8859-1编码]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/17/123944/"/>
    <updated>2012-12-17T12:39:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/17/123944</id>
    <content type="html"><![CDATA[<p>ISO-8859是ASCII编码的扩展规范，能够覆盖大部分欧洲语言。<a href="https://en.wikipedia.org/wiki/ISO_8859-1">ISO/IEC 8859-1</a>是ISO8859的一个最流行的实现方案，是Java的"default default"编码规则，及Java使用系统默认的编码方案失败时使用的编码方案（<a href="http://stackoverflow.com/questions/12659417/why-does-javas-string-getbytes-uses-iso-8859-1%EF%BC%89%E3%80%82">http://stackoverflow.com/questions/12659417/why-does-javas-string-getbytes-uses-iso-8859-1%EF%BC%89%E3%80%82</a></p>

<p>在进行String - byte[]转换时可以像UTF-8, unicode, gbk一样用ISO8859-1引用它，例如：</p>

<p> String result = new String(byteArray, &ldquo;ISO8859-1&rdquo;);</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java的字符编码集]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/14/114124/"/>
    <updated>2012-12-14T11:41:24+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/14/114124</id>
    <content type="html"><![CDATA[<h1>实验步骤</h1>

<ol>
<li>CharSetTest.java文件（内容如下）在Windows下编译为class文件：</li>
</ol>


<p> import java.nio.charset.Charset;
 import java.io.OutputStreamWriter;
 import java.io.ByteArrayOutputStream;
 public class CharSetTest {
  public static void main(String[] args) {
   System.out.println(&ldquo;Default Charset=&rdquo; + Charset.defaultCharset());
   System.setProperty(&ldquo;file.encoding&rdquo;, &ldquo;Latin-1&rdquo;);
   System.out.println(&ldquo;file.encoding=&rdquo; + System.getProperty(&ldquo;file.encoding&rdquo;));
   System.out.println(&ldquo;Default Charset=&rdquo; + Charset.defaultCharset());
   System.out.println(&ldquo;Default Charset in Use=&rdquo; + getDefaultCharSet());</p>

<p>   System.out.println(&ldquo;Default 字符集（在使用中的）=&rdquo; + getDefaultCharSet());
  }
  private static String getDefaultCharSet() {
   OutputStreamWriter writer = new OutputStreamWriter(new ByteArrayOutputStream());
   String enc = writer.getEncoding();
   return enc;
  }
 }</p>

<ol>
<li>ftp到Red Hat Linux上运行：</li>
</ol>


<p>/opt/jdk1.6.0_35/bin/java CharSetTest</p>

<p>Default Charset=UTF-8
file.encoding=Latin-1
Default Charset=UTF-8
Default Charset in Use=UTF8
Default 字符集（在使用中的）=UTF8</p>

<p>/opt/jdk1.6.0_35/bin/java -Dfile.encoding=GBK CharSetTest</p>

<p>Default Charset=GBK
file.encoding=Latin-1
Default Charset=GBK
Default Charset in Use=GBK
Default ؖ·՚ʹԃאµģ©=GBK</p>

<p>（将XShell的显示编码改为GBK后可以正常显示汉字）</p>

<p>/opt/jdk1.6.0_35/bin/java -Dfile.encoding=UTF-8 CharSetTest
Default Charset=UTF-8
file.encoding=Latin-1
Default Charset=UTF-8
Default Charset in Use=UTF8
Default 字符集（在使用中的）=UTF8</p>

<ol>
<li>本地Windows上运行</li>
</ol>


<p>D:\Apps\Java\jdk1.6.0_35\jre\bin\java.exe CharSetTest
Default Charset=GBK
file.encoding=Latin-1
Default Charset=GBK
Default Charset in Use=GBK
Default 字符集（在使用中的）=GBK</p>

<p>D:\Apps\Java\jdk1.6.0_35\jre\bin\java.exe -Dfile.encoding=GBK CharSetTest</p>

<p>Default Charset=GBK
file.encoding=Latin-1
Default Charset=GBK
Default Charset in Use=GBK
Default 字符集（在使用中的）=GBK</p>

<p>D:\Apps\Java\jdk1.6.0_35\jre\bin\java.exe -Dfile.encoding=UTF-8 CharSetTest
Default Charset=UTF-8
file.encoding=Latin-1
Default Charset=UTF-8
Default Charset in Use=UTF8
Default 瀛楃闆嗭紙鍦ㄤ娇鐢ㄤ腑鐨勶級=UTF8</p>

<h1>结果分析</h1>

<p>Java文件使用GBK编码，但class文件中汉字是用UTF-8编码的，47上的测试表明不论-Dfile.encoding的值是什么，只要把与XShell的显示编码保持一致就可以正确显示。</p>

<p>参考文献：</p>

<p> <a href="http://stackoverflow.com/questions/1749064/how-to-find-default-charset-encoding-in-java">http://stackoverflow.com/questions/1749064/how-to-find-default-charset-encoding-in-java</a></p>

<p> <a href="http://stackoverflow.com/questions/2677419/determining-default-character-set-of-platform-in-java">http://stackoverflow.com/questions/2677419/determining-default-character-set-of-platform-in-java</a></p>

<p> <a href="http://stackoverflow.com/questions/5306153/how-to-get-terminals-character-encoding">http://stackoverflow.com/questions/5306153/how-to-get-terminals-character-encoding</a></p>
]]></content>
  </entry>
  
</feed>
