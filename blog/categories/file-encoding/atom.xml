<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: File Encoding | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/file-encoding/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-04-15T10:58:04+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux平台上转换文件编码]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/13/154337/"/>
    <updated>2012-12-13T15:43:37+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/13/154337</id>
    <content type="html"><![CDATA[<p>Linux系统的iconv指令是一个很好的文件编码转换工具，支持的编码范围广，使用方便，例如将一个utf-8编码的文件（名为tic）转换为gbk编码：</p>

<p>iconv -f utf-8 -t gbk tic > ticgbk</p>

<p>可以用"iconv -l"查看系统支持的所有编码列表。</p>

<p>另：用file -i <file_name>可以查看一个文件的编码方式。</p>

<p>下面是一个可以一次转换多个文件的脚本：</p>

<pre><code>mkdir dst
for file in $(find src -type f); do
  iconv -f gbk -t utf-8 $file &gt; dst/$(basename $file)
done
</code></pre>

<p>这里要注意的是，由于重定向的目标文件所在的目录必须已经存在，所以需要首先创建目标目录dst，其次find命令输出的文件列表是以当前目录为基准，所以输出目标必须去掉路径部分，也就是"basename $file"做的，且源目录src中不能有子目录，否则所有目录下的文件会被摊平放在dst下，如果不同子目录下有同名文件，则最后一个会覆盖前面同名文件的内容。</p>

<p>如果确实需要转换包括子目录的所有文件，可以通过一个临时目录中转，完成该过程的脚本"myconv.sh"内容如下：</p>

<pre><code>#!/bin/bash
if [[ $# != 2 ]]; then
    echo Usage: ./myconv.sh src dst
    exit 1
fi
src=$1
dst=$2
mkdir -p tmp
cp -r $src tmp/
for file in $(find $src -type f); do
    #echo iconv from $file to $dst/$file
    iconv -f gbk -t utf-8 $file &gt; tmp/$file
done
mv tmp/$src $dst
rm -rf tmp
</code></pre>
]]></content>
  </entry>
  
</feed>
