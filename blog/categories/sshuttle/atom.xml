<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sshuttle | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/sshuttle/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-06-01T12:52:39+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Penetrate GFW With Sshuttle]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/28/102822/"/>
    <updated>2015-05-28T10:28:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/28/102822</id>
    <content type="html"><![CDATA[<p>Comparing with shadowsocks, <a href="https://github.com/apenwarr/sshuttle">sshuttle</a> is a much lightweight, open source alternative.
All you need is a ssh server outside GFW.
The installation is just <code>git clone</code> its repository on github.
To use it, only run a command on client: <code>./sshuttle --dns -r user@sshServer 0/0</code>.
Here option &ldquo;&ndash;dns&rdquo; is necessary to avoid DNS pollution inside GFW.
Add &ldquo;-v&rdquo; or &ldquo;-vv&rdquo; option ONLY for debug purpose, for it decreases connecting speed a lot.
&ldquo;-r&rdquo; means &ldquo;remote&rdquo;, so add your remote host outside GFW after it.
The last part of this command specifies which connections on client to use this proxy.
&ldquo;0/0&rdquo; means all connections, which is the most common case.</p>
]]></content>
  </entry>
  
</feed>
