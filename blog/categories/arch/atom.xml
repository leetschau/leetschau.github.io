<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Arch | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/arch/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-08-27T13:25:34+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install 32bit Arch Linux]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/03/105044/"/>
    <updated>2014-05-03T10:50:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/03/105044</id>
    <content type="html"><![CDATA[<h1>Partition Disk and Install 32bit Arch Linux</h1>

<ol>
<li><p>Create usb install key:</p>

<p> $ dd bs=4M if=warez/archlinux-2014.04.01-dual.iso of=/dev/sdb &amp;&amp; sync</p></li>
<li><p>Startup laptop with usb key and select &ldquo;Boot Arch Linux (i686)&rdquo;;</p></li>
<li><p>Connect wifi:</p>

<p> # wpa_supplicant -B -i wlp5s0 -c &lt;(wpa_passphrase TP-LINK_PocketAP_8344C2 py25)
 # dhcpcd wlp5s0</p></li>
<li><p>Partition disk:</p>

<p> # sgdisk &ndash;zap-all /dev/sda
 # cgdisk /dev/sda    // create 20G, 50G, 20G, 50G, 20G, 50G, 20G, 50G, 105G, totally 9 partitions
 // This is a gpt partition, where can&rsquo;t install Windows, because Windows only support MBR partition
 # parted /dev/sda print   // print the partition tables
 # mkfs.ext4 /dev/sda1
 # mkfs.ext4 /dev/sda2
 # lsblk -f                // display the current partition layout</p></li>
<li><p>Mount partition:</p>

<p> # mount /dev/sda1 /mnt
 # mkdir /mnt/home
 # mount /dev/sda2 /mnt/home</p></li>
<li><p>Select a mirror:</p>

<p> # vi /etc/pacman.d/mirrorlist</p></li>
<li><p>Install the base system: (so cool~)</p>

<p> # pacstrap -i /mnt base</p></li>
<li><p>Create fstab and chroot:</p>

<p> # genfstab -U -p /mnt >> /mnt/etc/fstab
 # arch-chroot /mnt /bin/bash</p></li>
<li><p>Set locale:</p>

<p> # vi /etc/locale.gen  // uncomment en_US.UTF-8 &amp; zh_CN.UTF-8
 # locale-gen
 # echo LANG=en_US.UTF-8 > /etc/locale.conf
 # export LANG=en_US.UTF-8
 # setfont Lat2-Terminus16 (optional)</p></li>
<li><p>Set time zone:</p>

<p> # ln -s /usr/share/zoneinfo/Hongkong /etc/localtime    // now <code>date</code> command will give corrent time
 # hwclock &ndash;systohc &ndash;utc</p></li>
<li><p>Set hostname:</p>

<p> # echo blackpad > /etc/hostname
 # vi /etc/hosts</p></li>
<li><p>Config wireless:</p>

<p> # pacman -S iw wpa_supplicant dialog wpa_actiond
 # systemctl enable <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#111;&#x3a;&#110;&#x65;&#116;&#99;&#x74;&#x6c;&#45;&#x61;&#x75;&#116;&#111;&#64;&#119;&#108;&#x70;&#53;&#115;&#x30;&#x2e;&#115;&#101;&#x72;&#118;&#x69;&#x63;&#x65;">&#x6e;&#101;&#116;&#x63;&#x74;&#108;&#x2d;&#x61;&#117;&#116;&#x6f;&#64;&#x77;&#108;&#x70;&#x35;&#115;&#x30;&#x2e;&#x73;&#x65;&#114;&#118;&#105;&#99;&#101;</a></p></li>
<li><p>Set root passwd:</p>

<p> # passwd</p></li>
<li><p>Install and configure a bootloader:</p>

<p> # pacman -S gptfdisk
 # pacman -S syslinux     // install syslinux boot loader because we create gpt partition earlier. Install grub will produce an error.
 # syslinux-install_update -i -a -m
 # vi /boot/syslinux/syslinux.cfg     // modify &ldquo;APPEND root=/dev/sda1 rw&rdquo; in &ldquo;LABEL arch&rdquo; section</p></li>
<li><p>Shutdown, unplugged usb key and restart laptop;</p></li>
<li><p>Start wifi connection:</p>

<p> # wifi-menu wlp5s0     // get interface name with <code>iw dev</code></p></li>
</ol>


<p>Choose a SSID, enter the key, press &ldquo;OK&rdquo;, then you can see &ldquo;Interface wlp5s0 is controlled by netctl-auto&rdquo;, use <code>ip addr</code> or <code>ping ...</code> to verify network.</p>

<ol>
<li><p>Install SSH service:</p>

<p> # pacman -Syu openssh
 # systemctl start sshd
 # systemctl enable sshd.service</p></li>
</ol>


<h1>Install the second System</h1>

<ol>
<li><p>Start laptop with YUMI usb key;</p></li>
<li><p>Startup a openSUSE 13.1 live dvd, install system on /dev/sda3 and /dev/sda4, reboot;</p></li>
<li><p>startup laptop, it prints: multiple active partitions, start failed;</p></li>
<li><p>Startup labtop with Arch USB key, delete openSUSE partitions, reboot, Arch is back;</p></li>
<li><p>Startup a CentOS live DVD, install system on /dev/sda3 and /dev/sda4, rebuild boot loader, reboot;</p></li>
<li><p>Startup laptop, only CentOS can start, it print &ldquo;boot error&rdquo; when choose &ldquo;Arch Linux&rdquo; to start;</p></li>
<li><p>Startup labtop with Arch USB key, delete CentOS partitions, reboot, only a GNU Grub command line;</p></li>
</ol>


<p>This experiment failed.</p>

<h1>Install i3</h1>

<pre><code># useradd -m -s /usr/bin/bash chad
# pacman -S xorg-server xorg-server-utils xorg-xinit
# pacman -S dmenu i3
# pacman -S gnome     // this big one (almost 1GB) is necessary, only gnome-shell can't work
# pacman -S xf86-video-intel xf86-input-synaptics
// video and touchpad driver, there will be a "could not open module intel" error without them
// they take effect after installation without reboot
# su - chad
$ echo "exec i3" &gt;  ~/.xinitrc
$ startx
</code></pre>

<h1>Install Chinese IM</h1>

<pre><code># pacman -S ibus-libpinyin
# su - chad
$ ibus-setup
</code></pre>

<p>Then select &ldquo;Chinese - Intelligent Pinyin&rdquo; under &ldquo;Input Method&rdquo; tab, and click &ldquo;Preferences&rdquo; to customize it.
The package &ldquo;ibus-sunpinyin&rdquo; is OK, too.
&ldquo;ibus-pinyin&rdquo; can&rsquo;t work properly.
&ldquo;ibus-rime&rdquo; can only input traditional Chinese.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Package Management on Arch Linux]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/01/121138/"/>
    <updated>2014-05-01T12:11:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/01/121138</id>
    <content type="html"><![CDATA[<p>Search packages:</p>

<pre><code>$ pacman -Ss pkg1 pkg2 ...
</code></pre>

<p>Install packages with updated repo:</p>

<pre><code>$ pacman -Syu pkg1 pkg2 ...
</code></pre>

<p>Remove a package and its dependencies which is not required by other installed packages:</p>

<pre><code>$ pacman -Rs pkg1
</code></pre>

<p>Remove a package and leaving all its dependencies installed:</p>

<pre><code>$ pacman -R pkg1
</code></pre>

<p>Ref: <a href="https://wiki.archlinux.org/index.php/pacman">pacman</a> on Arch Linux.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I3 Window Manager on Arch Linux]]></title>
    <link href="http://leetschau.github.io/blog/2014/05/01/112805/"/>
    <updated>2014-05-01T11:28:05+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/05/01/112805</id>
    <content type="html"><![CDATA[<p>i3 is a good wm(window manager), it&rsquo;s powerful and easy to install. It supports system tray, app like golden-dict will have a icon in system tray after it&rsquo;s closed.</p>

<h1>Install</h1>

<pre><code># pacman -S xorg-server xorg-server-utils
# pacman -S xorg-xinit
# pacman -S dmenu
# pacman -Syu gnome    // use `pacman -Rsc gnome` to remove package and its dependencies
# pacman -S i3
$ echo "exec i3" &gt;  ~/.xinitrc
$ startx
</code></pre>

<h1>Configuration</h1>

<p>Config file: ~/.i3/config.</p>

<p>Define Alt key:</p>

<pre><code>set $mod Mod4
</code></pre>

<p>Define Win key:</p>

<pre><code>set $sup Mod1
</code></pre>

<p>Adjust the font of titlebar:</p>

<pre><code>font pango:Dejavu Sans Mono 11
</code></pre>

<p>Add custom keybindings:</p>

<pre><code>bindsym $sup+x exec /home/chad/apps/idea-IC-135.690/bin/idea.sh
</code></pre>

<h1>Frequently used keybindings</h1>

<p>&ldquo;M&rdquo; means $mod key, &ldquo;S&rdquo; means Shift key.</p>

<ul>
<li><p>M-d: application launcher;</p></li>
<li><p>M-<Enter>: start a termianl;</p></li>
<li><p>M-f: full screen current app;</p></li>
<li><p>M-S-q: quit</p></li>
<li><p>M-S-c: reload config without restart;</p></li>
<li><p>M-2: jump to workspace 2;</p></li>
<li><p>M-S-2: move application to workspace 2;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arch Linux Notes]]></title>
    <link href="http://leetschau.github.io/blog/2014/04/28/201252/"/>
    <updated>2014-04-28T20:12:52+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/04/28/201252</id>
    <content type="html"><![CDATA[<p>按照<a href="https://wiki.archlinux.org/index.php/Beginners%27_guide">Beginners&#8217; guide on Arch LInux</a>在虚拟机上安装了Arch Linux，文档写得非常好，首先从<a href="https://www.arcHlinux.org/download/">Arch Linux Downloads</a>下载的镜像文件archlinux-2014.04.01-dual.iso，然后在VirtualBox中新建虚拟机，加载这个镜像，然后根据&#8221;Beginners&#8217; guide on Arch Linux&#8221;一步一步做完就行了，感觉对Linux的认识又深入了。</p>

<p>其中配置网络部分&#8221;2.9 Configure the network&#8221;没有做，重启之后发现网络不通，又按照dhcp方法用netctl工具重做了这一节，重启后网络可用。</p>

<p>大概两个半小时装好了base系统，163有arch Linux mirror，所以包下载速度很快。然后安装窗口管理器。</p>

<p>首先安装X系统：pacman -S xorg-server xorg-server-utils</p>

<p>然后安装display manager: pacman -S xorg-xinit</p>

<p>然后安装Awesome window manager: pacman -S awesome</p>

<p>安装i3: pacman -S i3</p>

<p>修改.xinitrc文件，登录后执行startx命令就进入了图形界面。</p>

<h1>安装SSH服务</h1>

<pre><code># pacman -S openssh
# systemctl start sshd
# systemctl enable sshd.service
</code></pre>

<p>之后就可以用Kitty连接192.168.1.102:22端口了。</p>

<p>用pacman安装fabric和vagrant都是最新版本，so cool.</p>

<hr />

<p>4月28日更新：</p>

<p>按照<a href="https://wiki.archlinux.org/index.php/USB_Flash_Installation_Media">USB Flash Installation Media</a>介绍的方法，首先把U盘插到机器上，然后用</p>

<pre><code>$ ls -la /dev/sd*
</code></pre>

<p>找到U盘的设备文件名：sdb</p>

<p>然后用下面的命令创建了启动U盘：</p>

<pre><code>$ dd bs=4M if=warez/archlinux-2014.04.01-dual.iso of=/dev/sdb &amp;&amp; sync
</code></pre>

<p>无需使用root帐号。几分钟就OK了，奇怪的是做好的U盘在笔记本（联想V480）上无法启动，在DELL PC机上却能够正常启动。</p>

<p>注意/dev/sd*这个设备后面不能有数字，比如如果of=/dev/sdb1,则做出来的U盘不能启动系统。</p>

<hr />

<p>4月29日更新：</p>

<p>晚上在家折腾Arch Linux，搞定了内核安装，主要是配置无线网络部分花了很多时间：</p>

<p>netctl disable my-network
verify: ls /etc/systemd/system/multi-user.target.wants/
reboot
$ iw dev
=> wlp5s0</p>

<p>$ wpa_supplicant -B -i wlp5s0 -c &lt;(wpa_passphrase TP-LINK_PocketAP_8344C2 py25)
Successfully &hellip;</p>

<p>iw dev wlp5s0 link
凌晨之后尝试多次后又搞定了桌面环境，首先尝试I3，失败，估计是由于很多必须的组件还没有装，然后尝试enlightenment，失败，然后尝试安装完整的GNOME，这次居然成功了：</p>

<pre><code> # pacman -S gnome
 # startx
</code></pre>

<p>如果报startx未找到，说明没装X环境，安装下面的包：</p>

<p>lspci | grep VGA
=> intel
pacman -S xf86-video-intel
pacman -S xorg-server xorg-server-utils
pacman -S xorg-xinit</p>

<hr />

<p>5月1日：</p>

<p>使用Win Key作为i3的Mod1键运行i3系统成功，Win+Enter启动terminal，Win+Shift+E退出i3；</p>

<p>用<code>pacman -S xf86-input-synaptics</code>为K27安装触摸板驱动成功，似乎没有Mint自动装的驱动的鼠标乱跳现象；</p>
]]></content>
  </entry>
  
</feed>
