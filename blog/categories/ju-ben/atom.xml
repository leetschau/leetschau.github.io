<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 剧本 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/ju-ben/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-11-11T14:51:43+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[自动生成srt格式的脚本（Python实现）]]></title>
    <link href="http://leetschau.github.io/blog/2010/12/09/180259/"/>
    <updated>2010-12-09T18:02:59+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/12/09/180259</id>
    <content type="html"><![CDATA[<p>用威力导演制作短片，这个软件有个导入srt字幕的功能，可以写好文本后一次性导入短片的字幕，比手工在威力导演里写快多了，srt文本中，每一条字幕的格式是：
 序号
 起止时间
 字幕内容</p>

<p>例如：
 1
 00:00:08,0 &ndash;> 00:00:13,0
 发展历程</p>

<p> 2
 00:00:13,0 &ndash;> 00:00:18,0
 2006年
 通用产品线正式成立
 &hellip;</p>

<p>这种格式在字幕的条数发生变化时修改起来很麻烦，比如一共有50条字幕，在第3条后加一条新字幕，则后面47条的序号、起止时间点都要修改，简直是噩梦，为此编写了下面的Python脚本，现在只要将字幕写成如下格式，用脚本处理后就能生成上面要求的格式了：</p>

<p> 发展历程</p>

<p> 2006年
 通用产品线正式成立
 &hellip;</p>

<p>其中主要的技术点有（Python 3.1）：
 时间偏移用timedelta对象，时间点用datetime对象，不能用time对象，因为time对象和timedelta对象不能做和； 时间转换为字符串的方法是strftime() 地址字符串要用“/”代替“\”；
将待处理文件保存为ANSI格式文本，在脚本里配好地址（这里是“f:/视频制作”）就可以了。</p>

<p>下面是脚本内容：</p>

<p> #!/usr/bin/env python</p>

<p> from datetime import datetime, timedelta</p>

<p> if <strong>name</strong> == &lsquo;<strong>main</strong>&rsquo;:</p>

<p>  #读原始文件</p>

<p>  oriScript = open(&lsquo;f:/视频制作/rawScript.srt&rsquo;,&lsquo;rt&rsquo;)</p>

<p>  #写目标文件</p>

<p>  destScript = open(&lsquo;f:/视频制作/destScript.srt&rsquo;,&lsquo;wt&rsquo;)</p>

<p>  try:</p>

<p>   block = &lsquo;&rsquo;</p>

<p>   seqNo = 1</p>

<p>   startTime = datetime(1980,1,1,0,0,8)</p>

<p>   for curLine in oriScript:</p>

<pre><code>#print(len(curLine)) 

if curLine.isspace() and len(block)&gt;0: #本行是空行 

 destScript.write(str(seqNo)+'\n') #写字幕序号 

 endTime = startTime+timedelta(seconds=5) 

 #写起止时间： 

 destScript.write(startTime.strftime("%X") + ',0 --&gt; '+ endTime.strftime("%X") + ',0\n') 

 destScript.write(block+'\n') 

 block = '' #清空缓存 

 seqNo = seqNo + 1 #序号递增 

 startTime = endTime #本条的终止时间是下一条的起始时间 

else: 

 block = block + curLine #当前行追加到缓存中 
</code></pre>

<p>  finally:</p>

<p>   oriScript.close()</p>

<p>   destScript.close()</p>
]]></content>
  </entry>
  
</feed>
