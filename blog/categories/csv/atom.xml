<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Csv | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/csv/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-01-23T11:15:02+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Manipulating CSV Files in Command Line]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/05/183154/"/>
    <updated>2015-01-05T18:31:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/05/183154</id>
    <content type="html"><![CDATA[<h1>csvkit</h1>

<p>Here we manipulate csv files with <a href="https://github.com/onyxfish/csvkit">csvkit</a>.
It&rsquo;s developed with Python. So install it with <code>sudo pip install csvkit</code>;</p>

<p>Convert xls, xlsx file into csv file: <code>in2csv input.xlsx &gt; data.csv</code>;</p>

<p>List column titles of a csv file: <code>csvcut -n data.csv</code>;</p>

<p>Print statistic information for each columns in a csv file: <code>csvstat data.csv</code>;</p>

<p>Print the first, second, 11th, 16th column of first 9 records (another one for headline): <code>csvcut -c 1,2,11,16 data.csv|head</code>;</p>

<p>If there are newline characters in records, add &ldquo;-l&rdquo; option to make it clear: <code>csvcut -l -c 1,2,11,16 data.csv|head</code>;</p>

<p>Convert to json file with csvjson: <code>csvcut -c 1,2,11,16 fairData150104.csv|head|csvjson -i 4</code>, &ldquo;-i&rdquo; specify how many indent spaces, default is no indent.</p>

<h1>csvtool</h1>

<p>Install: <code>sudo aptitude install csvtool</code>;</p>

<ul>
<li><p>csvtool sub <n1> <n2> <n3> <n4> data.csv:</p>

<p>  Take a square subset of the CSV, top left at row <n1>, column <n2>,
  which is <n3> deep and <n4> wide.
  <n1> and <n2> count from 1, or from 0 if -z option is given.</p>

<p>  Example: <code>csvtool sub 1 16 1 1 data.csv</code></p></li>
<li><p>csvtool take <n> data.csv: take first <n> rows of the csv, like &ldquo;head&rdquo; in shell;</p></li>
<li><p>csvtool drop <n> data.csv: drop the first <n> rows and return the rest (if any).</p></li>
</ul>


<p>See <code>csvtool -h</code> for details.</p>

<p>To print the <em>n</em>th record easily, add the following function into ~/.bash_alias file:</p>

<pre><code>function ctls(){
  if test $# -eq 3; then
    csvtool drop $2 $1 | csvtool take $3 -
  else
    echo ctls: csvtool list specified record
    echo Synopsis: ctls '&lt;filename&gt; &lt;startNo&gt; &lt;count&gt;'
  fi
}
</code></pre>

<p>Now print the 3rd record of data.csv with <code>ctls data.csv 3 1</code>.</p>

<p>The &ldquo;-&rdquo; in &ldquo;csvtool take&rdquo; means &ldquo;get input from stdin instead of a file&rdquo;.</p>

<h1>Put them together</h1>

<ul>
<li><p>Count the number of records which the 7th field is empty: <code>csvgrep -c 7 -r "^$" data.csv | csvtool height -</code>;</p></li>
<li><p>Count the number of records which the 7th field is NOT empty: <code>csvgrep -c 7 -r "^.+$" data.csv | csvtool height -</code>;</p></li>
<li><p>Print data on screen without line wrap: <code>less -S &lt;filename&gt;</code>;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load Data From Csv File Into Meteor Mongodb]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/08/114328/"/>
    <updated>2014-12-08T11:43:28+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/08/114328</id>
    <content type="html"><![CDATA[<p>Here I use mongoDB&rsquo;s mongoimport tool to import csv file into Meteor app&rsquo;s Mongodb.</p>

<p>First download mongodb package (mongodb-linux-x86_64-2.6.5.tgz) from <a href="http://www.mongodb.org/">mongoDB</a>, extract it into ~/apps folder.</p>

<p>Next start the Meteor app. When the server listening on port 3000, it&rsquo;s mongoDB server listening on port 3001.</p>

<p>Save the following codes into app&rsquo;s $HOME/private folder as importdb.sh:</p>

<pre><code>~/apps/mongodb-linux-x86_64-2.6.5/bin/mongoimport -h localhost:3001 --db meteor --collection fairs --type csv --file fairs.csv --headerline
</code></pre>

<p>Here the source csv file is saved in file private/fairs.csv.</p>

<p>It&rsquo;s headerline (first line of csv file) is also comma-seperated:</p>

<pre><code>Name, Age, Job
Bob, 35, Cooker
Tom, 28, Coder
...
</code></pre>

<p>Now in the Meteor app, add <code>Fairs = new Meteor.Collection("fairs");</code> into js file to use the data.</p>
]]></content>
  </entry>
  
</feed>
