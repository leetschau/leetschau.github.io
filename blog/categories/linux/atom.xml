<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-11-04T11:47:14+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix GUI App Start Failure With No Display Found]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/25/213630/"/>
    <updated>2015-10-25T21:36:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/25/213630</id>
    <content type="html"><![CDATA[<p>When running <code>gitg</code> in Ubuntu terminal, I got errors below:</p>

<blockquote><p><strong> (gitg:29283): WARNING </strong>: Could not open X display</p>

<p>(gitg:29283): Gtk-WARNING **: cannot open display: localhost:10.0</p></blockquote>

<p>Solution: check you $DISPLAY value, if it&rsquo;s not &ldquo;:0.0&rdquo;,
run <code>export DISPLAY=:0.0</code>.</p>

<p>Ref: <a href="http://askubuntu.com/questions/438451/could-not-open-display-null-error-how-can-i-fix-this">http://askubuntu.com/questions/438451/could-not-open-display-null-error-how-can-i-fix-this</a></p>

<p>To test keycode of the same key in different OS,
I ssh to my Linux laptop with Kitty on Windows.
When I run <code>xev</code>, I got an error:
<code>xev: unable to open display ''</code>.</p>

<p>If you ssh to a remote server, and</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor Development Environment on Windows]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/05/131004/"/>
    <updated>2015-10-05T13:10:04+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/05/131004</id>
    <content type="html"><![CDATA[<p>If you want develop Meteor on Windows machine,
it&rsquo;s inconvenient to install meteor, mongodb, vim, etc. on Windows.
My choice is use VM as develop environment.</p>

<p>First install <a href="https://www.virtualbox.org/">VirtualBox</a>, <a href="https://www.vagrantup.com/">Vagrant</a>,
<a href="http://executor.dk/">Executor</a>.</p>

<p>Add the Meteor Dev vagrant box to system <code>vagrant box add meteorBox mybox.box</code>.
The box is based on Ubuntu 14.04 LTS (Trusty), with provisioned Meteor, MongoDB, git, tmux,
vim and its plugins.</p>

<p>Create the VM: <code>vagrant init meteorBox</code>;</p>

<p>There are different SSH clients:</p>

<h1>MobaXterm</h1>

<p>Download <a href="http://mobaxterm.mobatek.net/">MobaXterm</a> and extract it to app folder,
say d:\Apps\MobaXterm_v7.7.</p>

<p>Create a new session in MobaXterm named &ldquo;localvm&rdquo;, with username &ldquo;vagrant&rdquo; and port 2222;</p>

<p>In Executor, add the following keywords:</p>

<pre><code>keyword: vmStart
Command: vagrant
Parameters: up
Start in: e:\Docs\MeteorBox\sysClone\vm

keyword: vmSuspend
Command: vagrant
Parameters: suspend
Start in: e:\Docs\MeteorBox\sysClone\vm

Keyword: vmLogin
Command: MobaXterm_Personal_7.7.exe
Parameters: -bookmark localvm -exitwhendone
Start in: d:\Apps\MobaXterm_v7.7

Keyword: vmStart&amp;Login
Command: vmStart||vmLogin
</code></pre>

<p>Now you can use [win-z, vmStart&amp;Login] to start VM and login.
Before you shutdown Windows machine, remember use [win-z, vmSuspend] to suspend VM
(which is always impossible).</p>

<p>Below is the procedure of getting a project into the VM:</p>

<pre><code>win-z: vmstart
win-z: vmlogin
# in the VM
ssh-keygen
# copy $(cat .ssh/id_rsa.pub) to http://phab.yourdomain.com/settings/panel/ssh
mkdir docs;cd docs
git clone ssh://git@phab.yourdomain.com/diffusion/YOURREPO/yourRepo.git 
cd yourRepo
git submodule init
git submodule update
</code></pre>

<p>Note: to add or edit keywords in Executor, use shortcut [win-z, Ctrl-k],
see Executor documents for details.</p>

<h1>Kitty</h1>

<p>If you prefer Kitty (portable version of Putty) to MobaXterm,</p>

<p>Add a new Session &ldquo;localvm&rdquo; in Kitty:</p>

<pre><code>Host name: localhost
Port: 2222
Connection -&gt; Data -&gt; Auto-login username &amp; password: vagrant
Window -&gt; Behavior: check "Full screen on Alt-Enter"
</code></pre>

<p>The corresponding &ldquo;vmLogin&rdquo; will be:</p>

<pre><code>Keyword: vmLogin
Command: kitty.exe
Parameters: -load localvm
Start in: d:\Apps\Kitty
</code></pre>

<h1>ConEmu + Kitty</h1>

<p>You can even wrap Kitty into <a href="https://github.com/Maximus5/ConEmu">ConEmu</a>,
which is a good Windows console alternative.</p>

<p>In ConEmu, add a task in Settings -> Startup -> Tasks:</p>

<pre><code>Name: Kitty
Hotkey: Win + Alt + X
Task parameters: blank
Commands: d:\Apps\Kitty\kitty.exe -new_console -load "VagrantLinux"
</code></pre>

<p>And set Kitty as the auto startup task:
Set <code>Settings -&gt; Startup -&gt; Startup options -&gt; Specified named task</code> to &ldquo;Kitty&rdquo;.</p>

<p>Add a new Executor keyword for ConEmu:</p>

<pre><code>Keyword: vmLogin
Command: d:\Apps\ConEmu\ConEmu.exe
</code></pre>

<p>(or use [Win + Alt + X] to login to VM manually in ConEmu).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Change SSH Port on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/12/093754/"/>
    <updated>2015-09-12T09:37:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/12/093754</id>
    <content type="html"><![CDATA[<p>Modify /etc/ssh/sshd_config:</p>

<ul>
<li><p>Port 22 -> 222</p></li>
<li><p>PermitRootLogin yes -> no</p></li>
<li><p>PasswordAuthentication yes -> no</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Control Linux Server With Tmux on Windows Client]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/27/085109/"/>
    <updated>2015-06-27T08:51:09+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/27/085109</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve tried Kitty as SSH client.
But under tmux, the right &ldquo;Alt&rdquo; key doesn&rsquo;t work,
while it works good with MobaXterm.</p>

<p>Full screen switch: F11;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor基础知识之系统篇]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/26/174257/"/>
    <updated>2015-05-26T17:42:57+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/26/174257</id>
    <content type="html"><![CDATA[<h1>课程目标</h1>

<ol>
<li><p>理解Meteor的运行环境和安装过程；</p></li>
<li><p>获得Linux；</p></li>
<li><p>能够在Linux系统中进行简单的文件操作；</p></li>
</ol>


<h1>为什么是Linux</h1>

<p>请大家思考一个问题：Windows的知名度、用户数和“易用性”都比Linux高很多，
为什么要选择Linux作为开发和部署环境？</p>

<p>要回答这个问题，首先得搞清楚：操作系统作为人类发明的数不清的工具中的一种，
Windows和Linux各自的定位是什么，或者说它们的目标用户是谁？</p>

<p>回顾二者的历史，不难发现Windows的目标用户是普通计算机用户，
使用计算机主要用来完成日常工作和娱乐；Linux是一群程序员为自己开发的操作系统，
设计目标是为自己和世界提供一个新的选择，一个完全自由、可定制的系统。</p>

<p>本质上，Windows是一件商品，它的首要目标是创造利润（养活生产者），其次是易于使用；
Linux是一件自制工具，它的首要目标是易于制造（方便生产者），其次是易于使用。</p>

<p>这段话似乎比较虚，但你一定要记在心里，因为后续各种差异，都是这个区别的表象，
理解了这个区别，可以帮助你避免无数纠结和口水战，把宝贵的生命用在创造上，而不是选择和争论上。</p>

<p>Windows推崇封闭（为什么？），用户只要用它做事情就好，不需要也不能深入到系统内部，了解它的机制，
Linux推崇开放，所有的东西尽可能公开，用户可以方便地了解它的运行机制，
融入自己的理解，把它变成自己喜欢的样子。</p>

<p>落实到实现层面，Windows喜欢二进制文件，Linux喜欢文本文件（为什么？）
用Gancarz的话说，Linux是基于文本的操作系统，Windows是基于图形的操作系统。</p>

<p>Windows这种风格给许多人造成的一个误解：所有的数据都需要通过某个软件来编辑、展现，
如果你不会用某个软件，那么很遗憾对应的数据你就没法用了。
这显然是很荒谬的，写在磁盘上的数据与写在纸上的数据没有任何区别，
阅读它们唯一需要的是我们的眼睛，
如果某个软件商告诉你还需要借助他们搞出来的某个软件，
那只是他们惯于使用的无中生有创造利润的伎俩而已。</p>

<p>所以，作为一名开发者，你有权利了解你手里的工具是怎么工作的，
你需要把自己培养成赤手空拳也能在森林里活下去的特种兵，
而不是只会用别人给你的工具按部就班生产的流水线工人。</p>

<p>P.S.: 这里的Linux是“基于Linux内核的操作系统”的简称。</p>

<h1>获得Linux</h1>

<p>参考<a href="https://whmeteor.wordpress.com/2015/06/01/win7%E4%B8%8B%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85ubuntu14-04%E5%8F%8A%E7%A1%AC%E7%9B%98%E4%B8%8Bwin7ubuntu-14-04%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/">Win7下在虚拟机中安装Ubuntu14.04及硬盘下win7+Ubuntu 14.04双系统的安装的方法</a>.</p>

<h1>熟悉Linux环境</h1>

<p>首先了解一下Linux与Windows最直观的不同之处：</p>

<ol>
<li><p>Linux只有一个根目录，它没有“盘符”的概念，但仍然可以将多个逻辑分区组织在一起（它是怎样做到的？）</p></li>
<li><p>Linux的文件夹和文件名都区分大小写；</p></li>
<li><p>Linux的命令行（严格来说这货叫shell）是全能选手，Web开发的全部工作都可以在命令行里进行；</p></li>
<li><p>Linux有一个神奇的文本编辑器叫vim，不同于Windows的文本编辑器，比如记事本、Word等等，它会彻底颠覆你对“文本编辑”这件事的理解；</p></li>
</ol>


<p>下面我们结合Meteor的几个命令来初步认识一下你未来的工作环境：</p>

<pre><code class="bash">curl https://install.meteor.com/ | sh
</code></pre>

<ol>
<li><p>命令格式说明；</p></li>
<li><p>管道符的作用和用法；</p></li>
<li><p><code>curl ... | sh</code>是一种常用的远程安装范式；</p></li>
</ol>


<pre><code class="bash">meteor create simple-todos
</code></pre>

<p>复杂命令的格式说明</p>

<h1>Linux的简单文件操作</h1>

<p>数据管理四项基本内容：增删改查。</p>

<ul>
<li><p>ls</p></li>
<li><p>cat</p></li>
<li><p>echo</p></li>
<li><p>mkdir</p></li>
<li><p>cd</p></li>
<li><p>rm</p></li>
<li><p>vi</p></li>
</ul>


<h1>最简vi使用教程</h1>

<p>在领略vi博大精深的文本编辑能力之前，不妨先用记事本的方法使用它：</p>

<ol>
<li><p>按"i"键进入编辑模式；</p></li>
<li><p>当记事本用，但没有鼠标哦，方向键移动光标，Del/Backspace删除；</p></li>
<li><p>编辑完后按"ESC"键返回标准模式；</p></li>
<li><p>按下<code>:x</code>两个键保存内容并退出vi；</p></li>
</ol>


<h1>总结</h1>

<p>掌握了这部分内容，你就初步理解了Meteor的开发和部署环境，
认识了Linux这个有趣的操作系统，
这是成为Meteor开发高手的第一步，难度不大，但需要你改变过去的一些习惯，
刚开始可能会不适应，但随着时间的流逝，你会越来越确信：这些付出是值得的。</p>
]]></content>
  </entry>
  
</feed>
