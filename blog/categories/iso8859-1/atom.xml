<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Iso8859-1 | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/iso8859-1/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-08-27T14:11:47+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于ISO8859-1编码]]></title>
    <link href="http://leetschau.github.io/blog/2012/12/17/123944/"/>
    <updated>2012-12-17T12:39:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2012/12/17/123944</id>
    <content type="html"><![CDATA[<p>ISO-8859是ASCII编码的扩展规范，能够覆盖大部分欧洲语言。<a href="https://en.wikipedia.org/wiki/ISO_8859-1">ISO/IEC 8859-1</a>是ISO8859的一个最流行的实现方案，是Java的&#8221;default default&#8221;编码规则，及Java使用系统默认的编码方案失败时使用的编码方案（<a href="http://stackoverflow.com/questions/12659417/why-does-javas-string-getbytes-uses-iso-8859-1%EF%BC%89%E3%80%82">http://stackoverflow.com/questions/12659417/why-does-javas-string-getbytes-uses-iso-8859-1%EF%BC%89%E3%80%82</a></p>

<p>在进行String - byte[]转换时可以像UTF-8, unicode, gbk一样用ISO8859-1引用它，例如：</p>

<p> String result = new String(byteArray, &ldquo;ISO8859-1&rdquo;);</p>
]]></content>
  </entry>
  
</feed>
