<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Xmodmap | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/xmodmap/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2014-10-03T10:34:30+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Define Keymap on Ubuntu]]></title>
    <link href="http://leetschau.github.io/blog/2013/09/24/193318/"/>
    <updated>2013-09-24T19:33:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2013/09/24/193318</id>
    <content type="html"><![CDATA[<h1>Swap Caps lock and Escape Key</h1>

<p>Write the following text into file swapCapsEsc:</p>

<pre><code>remove Lock = Caps_Lock 
keysym Escape = Caps_Lock 
keysym Caps_Lock = Escape 
add Lock = Caps_Lock
</code></pre>

<p>$ xmodmap swapCapsEsc</p>

<p>Ref: <a href="http://vim.wikia.com/wiki/Map_caps_lock_to_escape_in_XWindows">http://vim.wikia.com/wiki/Map_caps_lock_to_escape_in_XWindows</a></p>

<h1>Swap Ctrl and Alt Key</h1>

<pre><code>remove mod1 = Alt_L Alt_R 
remove control = Control_L Control_R 
keycode 64 = Control_L 
keycode 37 = Alt_L 
keycode 108 = Control_R 
keycode 105 = Alt_R 
add control = Control_L Control_R 
add mod1 = Alt_L Alt_R 
</code></pre>

<p>64, 37, etc are determined by &ldquo;xev&rdquo; command, see below for usage.</p>

<h1>Reset Key Map to Initial State</h1>

<p>setxkbmap -layout us</p>

<h1>Define key swap shortcuts</h1>

<p>It&rsquo;s mainly for emacs operation convenience to swap Ctrl and Alt key, and vi operation convenience to swap Caps Lock and Escape key. When you are not in emacs and vi, swap keys always lead confusions. So it&rsquo;s necessary to switch key definition quickly. The following are some basic method to achieve key swap shortcuts</p>

<ol>
<li><p>Create a file named &ldquo;swapCapsEsc&rdquo; in /home/lichao/docs/swapkeys</p>

<p> remove Lock = Caps_Lock
 keysym Escape = Caps_Lock
 keysym Caps_Lock = Escape
 add Lock = Caps_Lock</p></li>
</ol>


<p>and a file named &ldquo;swapCtrlAlt&rdquo; in /home/lichao/docs/swapkeys:</p>

<pre><code>remove mod1 = Alt_L Alt_R 
remove control = Control_L Control_R 
keycode 64 = Control_L 
keycode 37 = Alt_L 
keycode 108 = Control_R 
keycode 105 = Alt_R 
add control = Control_L Control_R 
add mod1 = Alt_L Alt_R 
</code></pre>

<ol>
<li><p>Create keyboard shortcuts in &ldquo;Application Finder (Alt + F3) -> Preferences -> Custom Actions&rdquo;:</p>

<p> Type: Regular Expression; Pattern: swce; Command: xmodmap /home/lichao/docs/swapkeys/swapCapsEsc
 Type: Regular Expression; Pattern: swca; Command: xmodmap /home/lichao/docs/swapkeys/swapCtrlAlt
 Type: Regular Expression; Pattern: swres; Command: setxkbmap -layout us</p></li>
</ol>


<p>Now you can use [Alt-F2 swce] to swap Caps lock and escape key, use [Alt-F2 swca] to swap Ctrl and Alt key, use [Alt-F2 swres] to make all keys to their original state (If you have swaped ctrl and alt key, the shortcut is [Ctrl-F2 swres]).</p>

<h1>Usage of xev</h1>

<p>Run &ldquo;xev&rdquo; in command line. A little window appear. Make it active window and press some key, the keycode will show in the window.</p>

<h1>Usage of xmodmap</h1>

<p>Run &ldquo;xmodmap -pm&rdquo; we got:</p>

<p>shift  Shift_L (0x32), Shift_R (0x3e)
lock  Caps_Lock (0x42)
control  Control_L (0x25), Control_R (0x69)
mod1  Alt_L (0x40), Alt_R (0x6c), Meta_L (0xcd)
mod2  Num_Lock (0x4d)
mod3
mod4  Super_L (0x85), Super_R (0x86), Super_L (0xce), Hyper_L (0xcf)
mod5  ISO_Level3_Shift (0x5c), Mode_switch (0xcb)</p>

<p>Here the names in the left column (shift, lock, control, etc) are called &ldquo;Modifier Name&rdquo;, while the names in the right column (Shift_L, Caps_Lock, Control_R, Meta_L, etc) are called keysym. Shift_L means left shift key, while Shift_R means right shift key. Every physical key (on keyboard) has a identity (integer number) called keycode. You can use &ldquo;xmodmap -pk&rdquo; to investigate these relationships. And use <code>xmodmap -e "keycode &lt;to_be_modified&gt; = &lt;target_key&gt;"</code> to modify these relationships. For example, the following command make F2 key print &ldquo;m&rdquo; in gedit panel:</p>

<pre><code>xmodmap -e "keycode 68 = m":
</code></pre>

<p>Before command:</p>

<p> 58   0x006d (m)
 68   0xffbf (F2)</p>

<p>(get by &ldquo;xmodmap -pk&rdquo;). After command:</p>

<p> 58   0x006d (m)
 68   0x006d (m)</p>

<p>Use <code>xmodmap -e "keycode 68 = F2"</code> to modify F2 back to F2 key.</p>

<p>The right hand side of this assignment is keysym name. So</p>

<pre><code>xmodmap -e "keycode 16 = 7"
</code></pre>

<p>will map character &ldquo;7&rdquo; to physical key which has keycode 16.</p>

<p>&ldquo;clear <ModifierName>&rdquo; means all keysyms will be detached from this <ModifierName>. So after <code>xmodmap -e "clear control"</code>, all control keys (left and right) are disabled.</p>

<p>&ldquo;remove <ModifierName> = <keysym>&rdquo; means remove <keysym> from the list of current keysym list of the <ModifierName>. So after <code>xmodmap -e "remove Control = Control_R"</code> makes right control key be disabled. When you run <code>xmodmap -e "add Control = Control_R"</code>, the right control key is enabled again. You can use &ldquo;xmodmap -pm&rdquo; to verify.</p>

<p>&ldquo;keysym name1=name2&rdquo; means binding the keys (previous binded to name2) to name1;</p>

<h1>Auto load xmodmap files when system start</h1>

<p>xmodmap ~/.Xmodmap</p>

<p>Ref: <a href="http://earthviaradio.wordpress.com/2012/02/06/swapping-the-left-alt-and-ctrl-keys-in-ubuntu-11-10/">http://earthviaradio.wordpress.com/2012/02/06/swapping-the-left-alt-and-ctrl-keys-in-ubuntu-11-10/</a></p>
]]></content>
  </entry>
  
</feed>
