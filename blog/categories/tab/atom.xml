<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tab | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/tab/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-11-20T11:01:10+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tab and Session Management in Vim]]></title>
    <link href="http://leetschau.github.io/blog/2015/10/14/192323/"/>
    <updated>2015-10-14T19:23:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/10/14/192323</id>
    <content type="html"><![CDATA[<p>Session management is provided by <a href="https://github.com/tpope/vim-obsession">tpope/vim-obsession</a>.
Tab rename function is provided by <a href="https://github.com/gcmt/taboo.vim">gcmt/taboo.vim</a>.</p>

<p>In ~/.vimrc:</p>

<pre><code>" Customize tabline
hi TabLineFill term=bold cterm=bold ctermbg=0
hi TabLine ctermfg=Yellow

" Taboo
set sessionoptions+=tabpages,globals
cabbrev tr TabooRename

" tab switching shortcuts
noremap &lt;leader&gt;1 1gt
noremap &lt;leader&gt;2 2gt
noremap &lt;leader&gt;3 3gt
noremap &lt;leader&gt;4 4gt
noremap &lt;leader&gt;5 5gt
noremap &lt;leader&gt;6 6gt
noremap &lt;leader&gt;7 7gt
noremap &lt;leader&gt;8 8gt
noremap &lt;leader&gt;9 9gt
noremap &lt;leader&gt;0 :tablast&lt;cr&gt;

" Add these into Vundle section
Plugin 'gcmt/taboo.vim'
Plugin 'tpope/vim-obsession'
</code></pre>

<p>Now open file in a new tab with: <code>Ctrl-P</code>, select a file and <code>Ctrl-O, t</code>.
Open file in a virtical split window with: <code>Ctrl-P</code>, select a file and <code>Ctrl-O, v</code>.
Rename tab with: <code>:tr&lt;Space&gt;new name&lt;Enter&gt;</code>.
Jump to the 3rd window with <code>,3</code>.</p>

<p>Note:</p>

<p>I also tried <a href="https://github.com/xolox/vim-session">xolox/vim-session</a>,
but it can&rsquo;t persist tab name created by Taboo.</p>

<p>For tab easy switch, I&rsquo;ve tried <code>noremap &lt;unique&gt; &lt;C-1&gt; 1gt</code> based on
<a href="http://stackoverflow.com/questions/2005214/switching-to-a-particular-tab-in-vim">Switching to a particular tab in VIM</a>,
where changes M-Num to C-Num, because M-Num is assigned to tmux window switch.
However C-Num can&rsquo;t work,
see <a href="http://stackoverflow.com/questions/15849537/vimrc-mapping-for-control-key-not-working">.vimrc mapping for control key not working</a>
for explanations.
So I adopted <code>noremap &lt;leader&gt;1 1gt</code> style based on
<a href="http://superuser.com/questions/410982/in-vim-how-can-i-quickly-switch-between-tabs">In vim, how can I quickly switch between tabs?</a>.</p>

<p>Mapping long Ex commands with <code>cabbrev</code> is a very useful for convenient.
Use <Space> instead of <Tab> to enable abbreviation in <code>cabbrev</code>.
See <code>:h :ca</code>, <a href="http://stackoverflow.com/questions/117150/can-i-re-map-commands-in-vim">Can I (re-) map commands in vim?</a>
and <a href="http://stackoverflow.com/questions/3878692/aliasing-a-command-in-vim">Aliasing a command in vim</a>
for details.</p>

<p>With <code>cabbrev tr TabooRename</code>, you can use <code>:tr&lt;Space&gt;1:tests</code> to rename current tab into &ldquo;1:tests&rdquo;.
Here you have to add tab index manually to make <code>&lt;leader&gt;&lt;number&gt;</code> style switching more convenient.</p>

<p>To make tabline more readable,
I customized the color of it.
See <a href="http://stackoverflow.com/questions/4726882/how-do-you-change-the-background-color-of-the-empty-tab-space-in-vim">How do you change the background color of the empty tab space in vim?</a>
and <a href="http://stackoverflow.com/questions/7238113/customising-the-colours-of-vims-tab-bar">Customising the colours of vim&rsquo;s tab bar</a>
for details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[制表符转换为空格]]></title>
    <link href="http://leetschau.github.io/blog/2011/09/24/174145/"/>
    <updated>2011-09-24T17:41:45+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/09/24/174145</id>
    <content type="html"><![CDATA[<p>由于制表符的不定长特性，在纯文本显示时经常出现不能对齐的问题，因此一般需要转换为空格，Ultraedit有这个功能，但实际上Notepad2也有这个能力：</p>

<p>选中要转换的文字后【Edit->Convert->Untabify Selection】。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[制表符控制与行首缩进]]></title>
    <link href="http://leetschau.github.io/blog/2011/03/29/172327/"/>
    <updated>2011-03-29T17:23:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2011/03/29/172327</id>
    <content type="html"><![CDATA[<p>以Notepad2为例，在【Settings->Tab Settings】中，有"Tabulator"（有些软件叫“Tab Stop Value”）和"Indentation"（有些软件叫“Indent Spaces”）两个值需要设置。tab stop value的意思是：（这里都 假设tab stop设为6，indent space设为3）首先顶格（行首无空格，第1列）输入"a"，然后按tab键，再输入b"，这时"is"将出现在第7列上，再按tab并输入c，这时c将出现在第13列上，再按tab并输入d，d出现在第19列上。也就是tab后面的文字总出现在6*i+1的列上，但如果输入abcdefg，再按tab并输入h，则h出现在第13列上。这说明 tabulator的含义实际上是“列宽” ，一段文字后面的tab将填满列宽的整数倍，以保证下一段文字出现在列宽的倍数上，这样就实现了表格式的对齐。在行首上按tab，发现跳到了第4列，说明 indent spaces指定了行首缩进的宽度是多少 。为了直观地体验tab和indent的含义，打开notepad2，将 tab stop设为6，indent space设为3，输入：a{tab}b{tab}c{tab}d{tab}e{tab}f{enter}a{tab}bc {tab}def {tab}ghijklmn{tab}o{enter}{tab}abcde{tab}fg，效果如下：</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM的窗口和标签页操作]]></title>
    <link href="http://leetschau.github.io/blog/2010/08/03/113116/"/>
    <updated>2010-08-03T11:31:16+08:00</updated>
    <id>http://leetschau.github.io/blog/2010/08/03/113116</id>
    <content type="html"><![CDATA[<h1>窗口</h1>

<p>创建水平/ 垂直 分隔的窗口：:new/:vnew</p>

<p>切换左/右/上/下窗口为当前窗口：ctrl+w, h/l/k/j</p>

<p>切换顶/底部窗口为当前窗口：ctrl+w, t/b</p>

<p>在窗口间跳转（用来在两个窗口间跳转很方便）：ctrl+w, w</p>

<p>交换窗口内容：C-w,C-r 或者 C-w,C-x 前面的更顺手</p>

<p>旋转窗口内容：C-w, r （第1个窗口中的文件显示在第2个窗口中，第2个窗口中文件显示在第3个窗口中，……，最后一个窗口中的文件显示在第1个窗口中）；</p>

<p>移动窗口：（例如原来是两个窗口一上一下，位于下面的窗口向左移动后，将变成左右布局）</p>

<p>ctrl-w H(shift+h)/L/K/J 向左/右/上/下移动窗口</p>

<p>窗口最大化：上下分割窗口情况下，C-w <em>（按住Ctrl再按w，松开ctrl和w，再按</em>） ，左右分割情况下，ctrl+w, |</p>

<p>水平增加窗口尺寸：C-w +；减少窗口尺寸：C-w -</p>

<p>窗口最大化后复原：ctrl+w, =</p>

<p>关闭窗口： :close，简写为:clo，用于关闭但不退出vim的情形；</p>

<p>在新窗口中显示文件：ctrl+w, shift+s（适于对比同一文件的不同部分）</p>

<p>针对所有窗口的操作</p>

<p>:qa (quit all)</p>

<p>:wa (write all)</p>

<p>:wqa (write &amp; quit all)</p>

<p>:qa! (quit all without write)</p>

<p>分隔窗口（用于显示同一个文档中的不同部分）：水平分割：:split，垂直分割：:vsplit</p>

<p>关闭当前窗口：:hide</p>

<h2>shortcut definitions for easier window navigations</h2>

<pre><code>nnoremap &lt;C-J&gt; &lt;C-W&gt;&lt;C-J&gt;
nnoremap &lt;C-K&gt; &lt;C-W&gt;&lt;C-K&gt;
nnoremap &lt;C-L&gt; &lt;C-W&gt;&lt;C-L&gt;
nnoremap &lt;C-H&gt; &lt;C-W&gt;&lt;C-H&gt;
set splitbelow
set splitright
nnoremap &lt;C-o&gt; :vsp&lt;CR&gt;:FufCoverageFile&lt;CR&gt;
</code></pre>

<p>The last one need installation of plugin FuzzyFinder.</p>

<h2>Open existing buffer in a split widnow</h2>

<ol>
<li><p>Get target buffer id: <code>:ls</code>;</p></li>
<li><p>Open it in a horizental window: <code>:sb&lt;n&gt;</code>, where <n> is the window id</p></li>
<li><p>Open it in a vertical window: <code>:vert sb&lt;n&gt;</code>;</p></li>
</ol>


<p>In the result of <code>:ls</code> command, &ldquo;#&rdquo; means alternative buffer, which is the most recently used buffer. &ldquo;a&rdquo; means active buffer. &ldquo;+&rdquo; means this buffer is modified. &ldquo;%&rdquo; means this buffer is in the current window. Run <code>:h :ls</code> to full list.
So you can use <code>:vert sb#</code> to open most recently used buffer in a vertical split window.</p>

<h1>标签页</h1>

<p>创建新标签页：:tabnew</p>

<p>切换到下一个标签页：gt，前一个标签页：gT（前面都没有冒号）</p>

<p>Jump to <n>th tab: <n>gt, for example &ldquo;3gt&rdquo; jump to 3rd tab directly;</p>

<p>关闭标签页：:q</p>

<p>Open multiple files in different tabs in command line:</p>

<pre><code>$ vim -p files*
</code></pre>

<p>Open every existing buffer in a new tab:</p>

<pre><code>:tab all
</code></pre>

<p>or:</p>

<pre><code>:tab sba
</code></pre>

<p>where &ldquo;sba&rdquo; means open all buffer in a new window, and :tab convert the window operation to tab operation;</p>

<p>详见:h tabpage</p>

<p>与多个buffer相关的操作见“buffer-related operations in vim”。</p>
]]></content>
  </entry>
  
</feed>
