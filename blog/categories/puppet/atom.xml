<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Puppet | Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/blog/categories/puppet/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-10-05T15:23:42+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Build Puppet Clusters With Vagrant]]></title>
    <link href="http://leetschau.github.io/blog/2014/03/18/162706/"/>
    <updated>2014-03-18T16:27:06+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/03/18/162706</id>
    <content type="html"><![CDATA[<p>$ cd ~/docs/propuppetex/chapter3
$ cat Vagrantfile
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|</p>

<p>  config.vm.box = &ldquo;centos64&rdquo;</p>

<p>  config.vm.define &ldquo;ppt&rdquo; do |ppt|
    ppt.vm.hostname = &ldquo;puppet.boco.com.cn&rdquo;
    ppt.vm.network &ldquo;private_network&rdquo;, ip: &ldquo;192.168.50.3&rdquo;,
        virtualbox__intnet: &ldquo;gcptest-network&rdquo;
    ppt.vm.provider :virtualbox do |vbox|
      vbox.customize [&ldquo;modifyvm&rdquo;, :id, &ldquo;&ndash;natnet1&rdquo;, &ldquo;10.3/16&rdquo;]
    end
    ppt.vm.provision :shell, path: &ldquo;master.sh&rdquo;
  end</p>

<p>  config.vm.define &ldquo;web&rdquo; do |web|
    web.vm.hostname = &ldquo;web.boco.com.cn&rdquo;
    web.vm.network &ldquo;private_network&rdquo;, ip: &ldquo;192.168.50.4&rdquo;,
        virtualbox__intnet: &ldquo;gcptest-network&rdquo;
    web.vm.provider :virtualbox do |vbox|
      vbox.customize [&ldquo;modifyvm&rdquo;, :id, &ldquo;&ndash;natnet1&rdquo;, &ldquo;10.3/16&rdquo;]
    end
    web.vm.provision :shell, path: &ldquo;web.sh&rdquo;
  end
end</p>

<p>$ cat master.sh
echo &lsquo;<em>&rsquo; > /etc/puppet/autosign.conf
sed -i &lsquo;/[.</em>]/ a \    autosign = true&rsquo; /etc/puppet/puppet.conf # add &ldquo;autosign = true&rdquo; in [main] and [agent]
echo &ldquo;192.168.50.3  puppet.boco.com.cn puppet&rdquo; >> /etc/hosts
echo &ldquo;192.168.50.4  web.boco.com.cn web&rdquo; >> /etc/hosts
mkdir /etc/puppet/manifests
cat > /etc/puppet/manifests/site.pp &lt;<-EOF
node 'web' {
  file { '/home/vagrant/aaa.conf':
    content => &lsquo;this is made by puppet master!&rsquo;,
  }
}
EOF
service iptables stop</p>

<p>$ cat web.sh
sed -i &lsquo;1 a \    master = puppet&rsquo; /etc/puppet/puppet.conf # add &ldquo;master = puppet&rdquo; after the line [main]
echo &ldquo;192.168.50.3  puppet.boco.com.cn puppet&rdquo; >> /etc/hosts
echo &ldquo;192.168.50.4  web.boco.com.cn web&rdquo; >> /etc/hosts
echo &ldquo;proxy=<a href="http://10.21.3.31:8888">http://10.21.3.31:8888</a>&rdquo; >> /etc/yum.conf
service iptables stop</p>

<p>Now run &ldquo;puppet master &ndash;no-daemonize &ndash;verbose&rdquo; on ppt, run &ldquo;puppet agent &ndash;test&rdquo; on web, you can file the file &ldquo;aaa.conf&rdquo; at /home/vagrant.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于gVim的暗色调Puppet书籍翻译写作环境]]></title>
    <link href="http://leetschau.github.io/blog/2014/03/17/163640/"/>
    <updated>2014-03-17T16:36:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/03/17/163640</id>
    <content type="html"><![CDATA[<p>翻译环境包括两个部分，写作部分和电子书，前者用gVim，后者Windows上用SumatraPDF，Linux Mint就用自带的evince。</p>

<h1>Linux</h1>

<p>配置gVim字体和颜色：</p>

<p>$ cat ~/.gvimrc
set go=
set guifont=Monospace\ 12
colo koehler
set et
set ts=2
set sw=2
set cc=0
set wrap</p>

<p>开始写作：gvim <filename></p>

<p>gVim比vim好的地方是按<ESC>切换到标准状态下时，输入法会自动关闭。</p>

<p>evince用Ctrl-i即可切换到黑底白字，用F11切换全屏。</p>

<p>注：不写"set keymap=pinyin"，也能在<ESC>时自动退出中文输入法。</p>

<h1>Windows</h1>

<h2>gVim</h2>

<p>全屏需要使用一个叫做<a href="http://www.vim.org/scripts/script.php?script_id=2596">gvimfullscreen_win32</a>的工具，下载安装包，把gvimfullscreen.dll解压到gvim.exe所在目录下（d:\Apps\Vim\vim72\），然后在_vimrc中加一行：</p>

<p>map <F11> <Esc>:call libcallnr(&ldquo;gvimfullscreen.dll&rdquo;, &ldquo;ToggleFullScreen&rdquo;, 0)<CR></p>

<p>试用后发现全屏状态下输入法和其他提示窗口都不能显示，基本不可用。</p>

<p>最终$MYVIMRC（d:\Apps\Vim_vimrc）的设置是：</p>

<pre><code>set encoding=utf-8
language messages zh_CN.utf-8
map &lt;Right&gt; :bn&lt;CR&gt;
map &lt;F2&gt; :set wrap!&lt;CR&gt;
set go=
colo evening
set noswapfile
set nobackup
set ts=2
set sw=2
set et
set ai
set nu
set clipboard+=unnamed
set guifont=Consolas:h13
cd e:/docs/translate/propuppet
</code></pre>

<p>其中"set encoding"解决打开UTF-8 without BOM格式编码文件时中文字符乱码问题；</p>

<p>language解决提示信息中的中文乱码问题；</p>

<p>set ts=2是专门为Puppet代码格式设置的。</p>

<p>Windows上的gVim不论插入模式和标志模式默认都支持C-s保存文件。</p>

<h2>SumatraPDF</h2>

<p>主菜单 -> 设置 -> 高级选项，在打开的配置文件里将FixedPageUI中TextColor值和BackgroundColor值互换，就实现了黑底白字的效果。</p>

<p>全屏用 [查看 -> 全屏]，快捷键C-S-l。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configure Hosts With Puppet]]></title>
    <link href="http://leetschau.github.io/blog/2014/03/10/182629/"/>
    <updated>2014-03-10T18:26:29+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/03/10/182629</id>
    <content type="html"><![CDATA[<p>According to &ldquo;Pro Puppet&rdquo; 2nd edition, Chapter 2, &ldquo;Creating a Module to Manage SSH&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create Virtual Machines With Vagrant and Puppet]]></title>
    <link href="http://leetschau.github.io/blog/2014/02/18/165937/"/>
    <updated>2014-02-18T16:59:37+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/02/18/165937</id>
    <content type="html"><![CDATA[<p>Create the following puppet manifest and start VM with vagrant, you get a base production environment.</p>

<pre><code>$ pwd
/home/chad/docs/vagrant-prj/gcpserver

$ cat Vagrantfile|grep -v '^\s*#'
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "precise64"
  config.vm.network :public_network
  config.vm.provision "puppet"
end

$ cat manifests/default.pp
package { 'vsftpd':
  ensure =&gt; installed,
}
service { 'vsftpd':
  ensure =&gt; running,
  require =&gt; Package['vsftpd'],
}
user { "gcp":
  ensure     =&gt; "present",
  password   =&gt; 'gcp',
  managehome =&gt; true,
}

$ vagrant init
$ vagrant up
</code></pre>

<p>But the password doesn&rsquo;t work, see <a href="http://www.puppetcookbook.com/posts/managing-user-password-fails.html">User Password Management Fails in Puppet</a> for reason.
You have to modify password for user &lsquo;gcp&rsquo; manually.</p>

<p>The type of network is written as &ldquo;bridged&rdquo; in api version 1 style.</p>

<h1>Create multiple VMs</h1>

<p>To specify hostname, memory size and some other parameters of each VM, modify Vagrantfile like this:</p>

<pre><code>$ cat Vagrantfile|grep -v '^\s*#'
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "precise64"

  config.vm.define "bvtserver" do |bvtserver|
    bvtserver.vm.hostname = "bvt-server"
    bvtserver.vm.network :public_network
    bvtserver.vm.provision :shell, path: "bvtprov.sh"
  end

  config.vm.define "production" do |production|
    production.vm.hostname = "gcp-server"
    production.vm.network :public_network
    production.vm.provision :puppet
    production.vm.provider :virtualbox do |vbox|
      vbox.customize ["modifyvm", :id, "--name", "ProductEnv", "--memory", 1024]
    end
  end
end
</code></pre>

<p>And add a shell script for provisioning of bvt server:</p>

<pre><code>$ cat bvtprov.sh
echo "You can do some provisioning here"
</code></pre>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/16740397/vagrant-network-type-bridged-is-invalid-please-use-a-valid-network-type">http://stackoverflow.com/questions/16740397/vagrant-network-type-bridged-is-invalid-please-use-a-valid-network-type</a>
<a href="http://stackoverflow.com/questions/18700060/seting-up-vm-hostname-undefined-method-hostname">http://stackoverflow.com/questions/18700060/seting-up-vm-hostname-undefined-method-hostname</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Redmine on Virtual Machine With Vagrant]]></title>
    <link href="http://leetschau.github.io/blog/2014/02/11/091423/"/>
    <updated>2014-02-11T09:14:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/02/11/091423</id>
    <content type="html"><![CDATA[<ol>
<li><p>Initialize VM:</p>

<p> chad@typcserver ~/docs/vagrant-prj $ vagrant &ndash;version
 Vagrant 1.4.3
 chad@typcserver ~/docs/vagrant-prj $ vagrant init
 chad@typcserver ~/docs/vagrant-prj $ cat Vagrantfile
 VAGRANTFILE_API_VERSION = &ldquo;2&rdquo;
 Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
   config.vm.box = &ldquo;precise64&rdquo;
   config.vm.box_url = &ldquo;<a href="http://files.vagrantup.com/precise64.box">http://files.vagrantup.com/precise64.box</a>&rdquo;
 end</p></li>
<li><p>Startup VM:</p>

<p> chad@typcserver ~/docs/vagrant-prj $ vagrant up
 chad@typcserver ~/docs/vagrant-prj $ vagrant ssh</p></li>
<li><p>The preinstalled puppet version is 2.7:</p>

<p> vagrant@precise64:~$ puppet &ndash;version
 2.7.19</p></li>
<li><p>Install redmine module:</p>

<p> vagrant@precise64:~$ sudo mkdir -p /etc/puppet/modules
 vagrant@precise64:~$ sudo puppet module install johanek/redmine
 vagrant@precise64:~$ sudo apt-get update
 vagrant@precise64:~$ sudo puppet apply &ndash;modulepath=/etc/puppet/modules -e &ldquo;include stdlib&rdquo;
 vagrant@precise64:~$ sudo puppet apply &ndash;modulepath=/etc/puppet/modules -e &ldquo;include mysql::server&rdquo;
 warning: Could not retrieve fact fqdn</p></li>
</ol>


<p>Then it&rsquo;s stuck. I find there are network traffic with ifstat utility, which probably means puppet is installing mysql. But how can I get the current state of puppet? I can&rsquo;t stop it even with Ctrl-C.</p>

<p>Notes:</p>

<ol>
<li>Uninstall module: <code>puppet module uninstall puppetlabs-mysql</code></li>
</ol>

]]></content>
  </entry>
  
</feed>
