<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-08-01T16:20:42+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chinese Characters Can't Be Displayed Correctly in Git Log]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/31/160627/"/>
    <updated>2015-07-31T16:06:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/31/160627</id>
    <content type="html"><![CDATA[<p>On Ubuntu 14.04, <code>cat</code> can display Chinese characters correctly.
But in <code>vi</code> and <code>less</code> Chinese characters can&rsquo;t display correctly.</p>

<p>Solution:</p>

<p>Run <code>export LC_ALL=en_US.UTF-8</code> before <code>git log</code>.</p>

<p>If it works, add this line into /etc/environment.</p>

<p>If it doesn&rsquo;t work, run <code>export LANG=en_US.UTF-8</code>.</p>

<p>If it doesn&rsquo;t work, run <code>apt-get install language-pack-en-base</code>.</p>

<p>In vim, run <code>set enc=utf-8</code>.</p>

<p>Ref:</p>

<p><a href="http://askubuntu.com/questions/162391/how-do-i-fix-my-locale-issue">http://askubuntu.com/questions/162391/how-do-i-fix-my-locale-issue</a></p>

<p><a href="http://stackoverflow.com/questions/5166652/how-to-view-utf-8-characters-in-vim-or-gvim">http://stackoverflow.com/questions/5166652/how-to-view-utf-8-characters-in-vim-or-gvim</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Development Collaboration With Pull Request]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/23/121622/"/>
    <updated>2015-07-23T12:16:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/23/121622</id>
    <content type="html"><![CDATA[<p>Say your partner is Tom.</p>

<ol>
<li><p>Fork Tom&rsquo;s repository;</p></li>
<li><p>Clone your forked repository to your laptop;</p></li>
<li><p>Commit modificatioins to your laptop repository;</p></li>
<li><p>Push modifications to your forked repository;</p></li>
<li><p>Send a pull request in your forked repository on github website;</p></li>
<li><p>Tom accept your request and merges into his repository;</p></li>
<li><p>In your laptop repository, add upstream repository as a remote source;</p></li>
<li><p>Sync with the upstream repository with <code>git fetch</code> and <code>git merge</code>;</p></li>
</ol>


<p>This is a whole cycle. Repeat above steps to collaborate with Tom.</p>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/7244321/how-to-update-github-forked-repository">How to update GitHub forked repository?</a></p>

<p><a href="https://help.github.com/articles/pushing-to-a-remote/#pushing-a-branch">Pushing to a remote</a></p>

<p><a href="https://help.github.com/articles/syncing-a-fork/">Syncing a fork</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running Meteor and Node App on Ubuntu 14.04 VPS]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/22/082040/"/>
    <updated>2015-07-22T08:20:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/22/082040</id>
    <content type="html"><![CDATA[<h1>Setup Environment with MUP</h1>

<p>On your laptop, install mup with <code>npm install -g mup</code>.
In a new directory, create a mup project with <code>mup init</code>.
Set &ldquo;setupMongo&rdquo;, &ldquo;setupNode&rdquo; and &ldquo;setupPhantom&rdquo; to &ldquo;true&rdquo; in mup.json,
and run <code>mup setup</code>.</p>

<h1>Run Apps</h1>

<p>To install the <strong>first</strong> Meteor app, <code>mup deploy</code>.</p>

<p>To install the second (there has been a Meteor app is running) or more,
set &ldquo;setupMongo&rdquo;, &ldquo;setupNode&rdquo; and &ldquo;setupPhantom&rdquo; to &ldquo;false&rdquo; in mup.json,
change &ldquo;appname&rdquo;, &ldquo;app&rdquo; and values in &ldquo;env&rdquo; accordingly.
Finally run <code>mup deploy</code>.</p>

<p>For Node app, first get the source code with git,
then run it with forever, which is installed by mup:</p>

<pre><code>aptitude install git
git clone ... projHome
cd projHome
npm install
# confirm port number in config.js
forever start app.js  # when the main script is "app.js"
</code></pre>

<p>Get the app status with <code>forever list</code>.
If the app can&rsquo;t start, print logs with <code>forever logs 1</code>
(if the target app&rsquo;s index in <code>forever list</code> is 1).</p>

<h1>Setup Routes</h1>

<p>Note: Meteor requires Node v0.10.36 or later.
So do NOT install node with <code>aptitude install nodejs</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于ionic的移动网页开发]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/18/005622/"/>
    <updated>2015-07-18T00:56:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/18/005622</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/meteoric/meteor-ionic/blob/master/GUIDE.md">meteor-ionic Guide</a>是整体框架的说明。</p>

<p>文档中心：
<a href="http://ionicframework.com/docs/">Ionic Documentation</a>，
常用的包括界面组件<a href="http://ionicframework.com/docs/components/">CSS Components</a>和
图标库<a href="http://ionicons.com/">ionicons</a>（可以输入名称搜索对应图标，如"telephone", &ldquo;home"等）。</p>

<h1>Header, Footer字体太小问题</h1>

<p>在<head>&hellip;</head>里增加下面两行代码：</p>

<pre><code>&lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"&gt;
&lt;link href='http://fonts.googleapis.com/css?family=Roboto:400,300,500' rel='stylesheet' type='text/css'&gt;
</code></pre>

<h1>Header上登录注册按钮覆盖退回按钮问题</h1>

<p>下面的代码不会出现覆盖问题：</p>

<pre><code>  &lt;div class="col text-right"&gt;
    &lt;button class="button button-clear button-stable"&gt;登录&lt;/button&gt;
    &lt;button class="button button-clear button-stable"&gt;注册&lt;/button&gt;
  &lt;/div&gt;
</code></pre>

<p>如果在<code>&lt;div class="col text-right"&gt;</code>外面加上一层<code>&lt;div class="bar bar-header bar-positive"&gt;</code>，
则会覆盖"headerButtonLeft"中定义的返回按钮。</p>

<p>另：`` 中可以添加path（返回指定route）和text（按钮说明文字）属性。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Nodejs App With Forever]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/10/065540/"/>
    <updated>2015-07-10T06:55:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/10/065540</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/foreverjs/forever">forever</a> is</p>

<blockquote><p>A simple CLI tool for ensuring that a given script runs continuously.</p></blockquote>

<p>For now it only supports nodejs scripts.</p>

<p>It provides functions like <code>nohup</code> in shell, but much more.</p>

<p>To start your script, run <code>forever start -w app.js</code> instead of <code>node app.js</code>.
The &ldquo;-w&rdquo; option will watch the file changes.</p>

<p>So update website is simply run <code>git pull ...</code> on your production host,
forever will find the changes in your sources and restart server
(like Meteor app in develop mode).</p>

<p>List all running forever managed scripts with <code>forever list</code>.</p>

<p>Find out their logs location with <code>forever logs</code>.
Then you can use <code>tail -f</code> to watch the log of a script in real time.</p>

<p>Print the log of a script with <code>forever logs &lt;script-index&gt;</code>,
for example:<code>forever logs 0</code>.
You get the index from the output of <code>forever logs</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Transport JavaScript Objects Between Meteor Pages via URI]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/07/103347/"/>
    <updated>2015-07-07T10:33:47+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/07/103347</id>
    <content type="html"><![CDATA[<h1>Tips</h1>

<ul>
<li><p>object -> String -> object:
JSON.stringify -> encodeURI -> | another page | -> decodeURI -> JSON.parse</p></li>
<li><p>Use &ldquo;&amp;&rdquo; to connect multiple query items in uri;</p></li>
</ul>


<h1>Code Demo</h1>

<p>On page 1:</p>

<pre><code>var filterObj = { year: '2016', pos: '中国' };
var filterStr = JSON.stringify(filterObj);
var enc = encodeURI(filterStr);
console.log(enc);
var myRoute = "/results/2015/pages/1?type=basic&amp;filter=" + enc
Router.go(myRoute);
</code></pre>

<p>On page 2:</p>

<pre><code>var queryType = this.params.query.type;
var filterStr = this.params.query.filter;
var dec = decodeURI(filterStr);
var filterObj = JSON.parse(dec);
console.log(filterObj);
</code></pre>

<h1>Ref</h1>

<ul>
<li><p>matejkramny&rsquo;s answer in <a href="http://stackoverflow.com/questions/1086404/string-to-object-in-js">String to object in JS</a>;</p></li>
<li><p><a href="http://www.w3schools.com/jsref/jsref_decodeuri.asp">JavaScript decodeURI() Function</a>;</p></li>
<li><p>vartec&rsquo;s answer in <a href="http://stackoverflow.com/questions/724526/how-to-pass-multiple-parameters-in-a-querystring">How to pass multiple parameters in a querystring</a>;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Resources for Programming Language Theory]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/04/190036/"/>
    <updated>2015-07-04T19:00:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/04/190036</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="http://www.cs.toronto.edu/~hehner/aPToP/">A practical theory of programming</a>;</p></li>
<li><p><a href="https://en.wikipedia.org/wiki/Programming_language_theory">Programming language theory on Wikipedia</a>;</p></li>
<li><p><a href="http://book.douban.com/subject/3743526/">Programming Language Pragmatics by Michael L. Scott</a>;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trace File Change History in Git Repository]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/30/101243/"/>
    <updated>2015-06-30T10:12:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/30/101243</id>
    <content type="html"><![CDATA[<p>The website need hide some menu items under developing,
by comment out the html codes (at line 19~24 in file &ldquo;client/comTemp.html&rdquo;).
But last night we found they reappeared in the newest version.
Apparently someone used the older version (in which they were not commented out)
overwrite the latest version by error (without intention).</p>

<p>How to find out who, at which commit make this mistake?</p>

<p><strong>Step 1</strong>: get the error version.</p>

<pre><code>$ git blame -L 19,24 client/comTemp.html
dc7d385a (Tom     2015-06-26 17:39:28 +0800 19)    &lt;li&gt;
8b64184a (Bob     2015-05-04 19:32:43 +0800 20)      &lt;a href="http://leetschau.github.io/mall"&gt;Mall&lt;/a&gt;
6bb3ba70 (Franky  2015-05-04 15:45:50 +0800 21)    &lt;/li&gt;
6bb3ba70 (Franky  2015-05-04 15:45:50 +0800 22)    &lt;li&gt;
8b64184a (Bob     2015-05-04 19:32:43 +0800 23)      &lt;a href="http://leetschau.github.io/services"&gt;Services&lt;/a&gt;
dc7d385a (Tom     2015-06-26 17:39:28 +0800 24)    &lt;/li&gt;
</code></pre>

<p>Here the line 19 should be <code>&lt;!--&lt;li&gt;</code> and line 24 should be <code>&lt;/li&gt;--&gt;</code>,
to hide &ldquo;Mall&rdquo; and &ldquo;Services&rdquo;, which are under developing.</p>

<p><strong>Step 2</strong>: get the newest right version.</p>

<p>The wrong commit is &ldquo;dc7d385a&rdquo;, so we have to find the nearest change <strong>before</strong> it:</p>

<pre><code>$ git blame -L 19,24 'dc7d385a^' -- client/comTemp.html
96269db1 (Bob     2015-06-10 15:36:31 +0800 19)    &lt;!--&lt;li&gt;
8b64184a (Bob     2015-05-04 19:32:43 +0800 20)      &lt;a href="http://leetschau.github.io/mall"&gt;Mall&lt;/a&gt;
6bb3ba70 (Franky  2015-05-04 15:45:50 +0800 21)    &lt;/li&gt;
6bb3ba70 (Franky  2015-05-04 15:45:50 +0800 22)    &lt;li&gt;
8b64184a (Bob     2015-05-04 19:32:43 +0800 23)      &lt;a href="http://leetschau.github.io/services"&gt;Services&lt;/a&gt;
96269db1 (Bob     2015-06-10 15:36:31 +0800 24)    &lt;/li&gt;--&gt;
</code></pre>

<p>So we know Mall and Services were commented out at commit 96269db1, 2015-06-10,
and uncommented by error at commit dc7d385a, 2015-06-26, by Tom.</p>

<p><strong>Step 3</strong>: show code changes.</p>

<pre><code>$ git show dc7d385a -- client/comTemp.htm
...
-    &lt;!--&lt;li&gt;
+    &lt;li&gt;
       &lt;a href="http://leetschau.github.io/mall"&gt;Mall&lt;/a&gt;
     &lt;/li&gt;
     &lt;li&gt;
       &lt;a href="http://leetschau.github.io/services"&gt;Services&lt;/a&gt;
-    &lt;/li&gt;--&gt;
+    &lt;/li&gt;
...
</code></pre>

<p>It shows in commit dc7d385a,
two lines were deleted: &ldquo;<!--<li>&rdquo; and &ldquo;</li>&ndash;>&rdquo;,
while two lines were added: &ldquo;<li>&rdquo; and &ldquo;</li>&rdquo;.</p>

<p><strong>Step 4 (optional)</strong>: revert the commit</p>

<pre><code>git revert dc7d385a
</code></pre>

<p>Ref: <a href="http://stackoverflow.com/questions/14836696/delete-last-commit-in-bitbucket">http://stackoverflow.com/questions/14836696/delete-last-commit-in-bitbucket</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Control Linux Server With Tmux on Windows Client]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/27/085109/"/>
    <updated>2015-06-27T08:51:09+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/27/085109</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve tried Kitty as SSH client.
But under tmux, the right &ldquo;Alt&rdquo; key doesn&rsquo;t work,
while it works good with MobaXterm.</p>

<p>Full screen switch: F11;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteoric Notes]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/25/102358/"/>
    <updated>2015-06-25T10:23:58+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/25/102358</id>
    <content type="html"><![CDATA[<p>meteor create ionicEx
cd ionicEx
meteor add iron:router fourseven:<a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#115;&#x63;&#115;&#115;&#64;&#x32;&#46;&#48;&#46;&#x30;">&#115;&#99;&#115;&#x73;&#x40;&#50;&#x2e;&#48;&#46;&#x30;</a> meteoric:ionic-sass meteoric:ionicons-sass meteoric:ionic</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tails System]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/19/104111/"/>
    <updated>2015-06-19T10:41:11+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/19/104111</id>
    <content type="html"><![CDATA[<p>Tails 1.4 can <strong>not</strong> be installed with YUMI.
It will cause a &ldquo;setup chroot failure&rdquo;.
There is a bug report on Tails for this:
<a href="https://labs.riseup.net/code/issues/9115">Chroot browsers don&rsquo;t work when Tails is manually installed with YUMI</a>.</p>

<p>After start up with USB key, press <TAB> after the &ldquo;BOOT&rdquo; prompt.
I tried all 3 options. Only &ldquo;menu_486&rdquo; could boot the system.</p>

<p>Once logged in, connect WiFi, use &ldquo;unsafe_browser&rdquo; to check the internet connection.
If it&rsquo;s OK, use Tor browser.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tmux Configurations for Unity Desktop]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/18/112729/"/>
    <updated>2015-06-18T11:27:29+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/18/112729</id>
    <content type="html"><![CDATA[<p>Verified on Ubuntu 14.04, 2015-6-18.</p>

<h1>Prefix</h1>

<p><code>M-f</code> will activate the Unity HUB, so use <code>M-q</code> as tmux prefix:
<code>set -g prefix M-q</code>.</p>

<h1>Get Help</h1>

<ul>
<li><p>List all shortcuts: prefix ?</p></li>
<li><p>List all commands: <code>tmux list-commands</code></p></li>
</ul>


<h1>Open a new Window/Pane</h1>

<p>bind -n M-/ split-window -h
bind -n M&ndash; split-window -v
bind -n M-n new-window</p>

<h1>Resize Pane in a Window</h1>

<p>Use Ctrl- arrow key to resize pane:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bind -n -r ^Left resize-pane -L 5
</span><span class='line'>bind -n -r ^Down resize-pane -D 5
</span><span class='line'>bind -n -r ^Up resize-pane -U 5
</span><span class='line'>bind -n -r ^Right resize-pane -R 5</span></code></pre></td></tr></table></div></figure>


<p>Use <code>M-z</code> to maximize/restore a pane:
<code>bind -n M-z resize-pane -Z</code>.</p>

<h1>Rotate Panes in a Window</h1>

<p>Use default settings: prefix + Space</p>

<h1>Jump between Window and Pane</h1>

<p>Alt-(1~9): jump between windows;</p>

<p>Alt-h/j/k/l: jump between panes;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bind -n M-1 select-window -t 1
</span><span class='line'>bind -n M-2 select-window -t 2
</span><span class='line'>bind -n M-3 select-window -t 3
</span><span class='line'>bind -n M-4 select-window -t 4
</span><span class='line'>bind -n M-5 select-window -t 5
</span><span class='line'>bind -n M-6 select-window -t 6
</span><span class='line'>bind -n M-7 select-window -t 7
</span><span class='line'>bind -n M-8 select-window -t 8
</span><span class='line'>bind -n M-9 select-window -t 9
</span><span class='line'>
</span><span class='line'>bind -n M-k select-pane -U
</span><span class='line'>bind -n M-j select-pane -D
</span><span class='line'>bind -n M-h select-pane -L
</span><span class='line'>bind -n M-l select-pane -R</span></code></pre></td></tr></table></div></figure>


<h1>Move Window</h1>

<p>Moving window behaves different with i3wm.
If the target window exists, you have to use <code>join-pane</code>, otherwise <code>break-pane</code>.</p>

<p>I use <code>if-shell</code> to test if the target window exists.</p>

<p>Then add target window number provided by user (%1, which means the first user-input parameter)
after &ldquo;-t&rdquo; option of <code>join-pane</code>.
The default target format is <code>#{session_name}:#{window_index}.#{pane_index}</code>.
See <code>man tmux</code> for details.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bind -n M-i command-prompt -p "move current pane to window:" "if-shell 'tmux list-windows |grep \"^%1\":' 'join-pane -t:\"%1\"' 'break-pane'"</span></code></pre></td></tr></table></div></figure>


<h1>Other helpful resources</h1>

<p>Use <code>^A</code> to represent &ldquo;Ctrl-A&rdquo;.</p>

<p>Shutdown visual alerts:</p>

<pre><code>setw -g monitor-activity on
set -g visual-activity off
</code></pre>

<h2>Commands</h2>

<ul>
<li><code>clock-mode</code>: display a large clock on the terminal</li>
</ul>


<h2>Shortcuts</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bind -n M-a command-prompt
</span><span class='line'>bind -n M-r command-prompt -p "rename window name to:" "rename-window '%%'"
</span><span class='line'>bind r source-file ~/.tmux.conf \; display "Reloaded!"</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video Player on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/10/153142/"/>
    <updated>2015-06-10T15:31:42+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/10/153142</id>
    <content type="html"><![CDATA[<h1>SMPlayer</h1>

<p>9/0: volume down/up;</p>

<p>Ctrl-P: preferences;</p>

<p>Ctrl-L: toogle play list;</p>

<p>,/.: play previous/next (need modify)</p>

<p>Customize hotkeys: Options -> Preferences -> Hotkeys</p>

<h1>VLC</h1>

<p>Ctrl-P: preferences;</p>

<p>Ctrl-L: toogle play list;</p>

<p>Customize hotkeys: Preferences -> Hotkeys</p>

<p>Hotkeys:</p>

<p>f: toogle full screen;
t: show time;
m: toogle mute;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 14.04中通过ADSL连接网络]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/10/114719/"/>
    <updated>2015-06-10T11:47:19+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/10/114719</id>
    <content type="html"><![CDATA[<p>有时不方便使用无线网络，需要通过有线连接的方式通过ADSL上网。
下面的方法在Ubuntu 14.04上验证通过（2015年6月10日于百万庄15楼）。</p>

<h1>Unity桌面环境</h1>

<p>在Ubuntu 14.04的Unity桌面上，右上角点击网络图标，弹出菜单上点击最后一项：Edit Connections&hellip;
弹出"Network Connections"对话框，点击"Add"按钮，
&ldquo;Choose a Connection Type"中选择"Hardware -> DSL"，点击"Create"按钮，
在弹出的"Edit DSL &hellip;"对话框中，在"Connection name"里填上连接名称，比如"MyDSL"，
然后在"DSL"标签页中，"Username"和"Password"分别填上ADSL的帐号名和密码，
"Service"项留空，点击"Save"按钮。</p>

<p>确认网线已插入，点击桌面右上角网络图标，网络列表里可以看到"MyDSL"，点击之，就连接上了ADSL网络。</p>

<p>参考：<a href="https://www.youtube.com/watch?v=Dx-G-Sn6IhY">How to create DSL (PPPoE) connection on Ubuntu - YouTube</a></p>

<h1>i3wm命令行环境下</h1>

<p>首先运行<code>pppoeconf</code>（注意不是pppconfig），输入ADSL的用户名和密码，其他选型都使用默认值。
安装完成后运行<code>ip addr</code>可以看到多了一个"ppp0"网卡，用<code>plog</code>可以查询状态。
用<code>ps aux|grep ppp</code>可以看到多了一个pppd服务。</p>

<p>配置好后，再次连接ADSL网络时，
使用<code>pon dsl-provider</code>启动服务，可以在输入<code>pon</code>后使用<Tab>键列出可用的选项。
使用<code>sudo poff</code>断开ADSL网络。</p>

<p>参考：<a href="https://help.ubuntu.com/community/ADSLPPPoE">ADSLPPPoE</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB数据管理平台产品定义和选型]]></title>
    <link href="http://leetschau.github.io/blog/2015/06/08/170530/"/>
    <updated>2015-06-08T17:05:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/06/08/170530</id>
    <content type="html"><![CDATA[<h1>目标定位和用户定义</h1>

<p>数据管理平台是商业网站的产品数据支持系统，它的用户是企业的业务人员，没有技术背景，
无法使用MongoDB的命令行工具以及GUI客户端（如Robomongo等）操作数据。
需要通过浏览器维护产品数据，对数据进行增删改查操作，</p>

<h1>功能需求</h1>

<ul>
<li><p>数据管理平台的用户是网站数据的维护者，与商业网站的用户完全不同；</p></li>
<li><p>数据管理平台是一个Web服务;</p></li>
<li><p>每个用户有自己的权限，包括能够访问哪些collection，以及这个collection中的哪些documents；</p></li>
<li><p>目前这个系统只针对MongoDB;</p></li>
<li><p>能够通过Web界面对目标MongoDB进行数据的增删改查操作；</p></li>
</ul>


<h1>实现方法</h1>

<p>使用Meteor作为Web框架；</p>

<p>系统是一个独立的Meteor项目，而不是一个package；</p>

<h1>系统选型</h1>

<p>目前试用了两个Meteor package，两个node.js包，均不符合要求。</p>

<ul>
<li><p><a href="https://github.com/yogiben/meteor-admin">yogiben/meteor-admin</a>: 登录界面上的注册(sign-up)功能有问题，
点击"Register"按钮界面僵死;登录后版式混乱重叠；</p></li>
<li><p><a href="https://github.com/gterrono/houston">Houston</a>: 安装简单，添加包后就可以使用了，
主要问题是使用产品库的Users表，与网站用户混在了一起；
添加数据页面不能根据数据的Schema定义，只能模仿库里现有的document的结构；</p></li>
<li><p><a href="http://keystonejs.com/">KeyStoneJS</a>: Nodejs包，部署和使用相对比较方便，主要问题见<a href="http://stackoverflow.com/questions/30661456/mongodb-content-management-web-app-for-non-technical-guys">我的问题</a>;</p></li>
<li><p><a href="https://github.com/andzdroid/mongo-express">mongo-express</a>: nodejs包，启动后浏览器访问时报404错误，原因未知；</p></li>
</ul>


<h1>其他说明</h1>

<p>系统不是使用MongoDB的GUI客户端，是因为使用这些客户端需要了解MongoDB语句，不符合用户定义。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Penetrate GFW With Sshuttle]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/28/102822/"/>
    <updated>2015-05-28T10:28:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/28/102822</id>
    <content type="html"><![CDATA[<p>Comparing with shadowsocks, <a href="https://github.com/apenwarr/sshuttle">sshuttle</a> is a much lightweight, open source alternative.
All you need is a ssh server outside GFW.</p>

<p>The installation is just <code>git clone</code> its repository on github.</p>

<p>To use it, only run a command on client: <code>./sshuttle --dns -r user@sshServer 0/0</code>.
Here option &ldquo;&ndash;dns&rdquo; is necessary to avoid DNS pollution inside GFW.
Add &ldquo;-v&rdquo; or &ldquo;-vv&rdquo; option ONLY for debug purpose, for it decreases connecting speed a lot.
&ldquo;-r&rdquo; means &ldquo;remote&rdquo;, so add your remote host outside GFW after it.
The last part of this command specifies which connections on client to use this proxy.
&ldquo;0/0&rdquo; means all connections, which is the most common case.</p>

<p>For convenience, add <code>alias sv="$HOME/apps/sshuttle/sshuttle --dns -r root@sshServer 0/0"</code> into ~/.bash_aliases.
Now you can use <code>sv</code> to start the vpn, Ctrl-C to stop it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Store Small Images in MongoDB via Base64]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/27/180718/"/>
    <updated>2015-05-27T18:07:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/27/180718</id>
    <content type="html"><![CDATA[<p>The following codes save a image file first.
Then encoding it into Base64 string, and decoding it back into binary data (image).
Both images are the same. So the encoding/decoding works.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='JavaScript'><span class='line'><span class="kd">var</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;fs&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">image_origial</span> <span class="o">=</span> <span class="s2">&quot;logo.png&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="nx">image_origial</span><span class="p">,</span> <span class="s1">&#39;binary&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">original_data</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFile</span><span class="p">(</span><span class="s1">&#39;image_orig.png&#39;</span><span class="p">,</span> <span class="nx">original_data</span><span class="p">,</span> <span class="s1">&#39;binary&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{});</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">base64Image</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="nx">original_data</span><span class="p">,</span> <span class="s1">&#39;binary&#39;</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;base64&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;base64 str:&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">base64Image</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">base64Image</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">decodedImage</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="nx">base64Image</span><span class="p">,</span> <span class="s1">&#39;base64&#39;</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;binary&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;decodedImage:&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">decodedImage</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFile</span><span class="p">(</span><span class="s1">&#39;image_decoded.png&#39;</span><span class="p">,</span> <span class="nx">decodedImage</span><span class="p">,</span> <span class="s1">&#39;binary&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Display Base64 string in html:</p>

<pre><code>&lt;template name="myform"&gt;
  &lt;img id="fromBase64" src="data:image/png;base64,"&gt;
&lt;/template&gt;
</code></pre>

<p>Corresponding JavaScript code:</p>

<pre><code>Template.myform.helpers({
  getPic: function() {
    return "iVBORw0KGgoAAAANSUhEUgAAAO8AAAB3CAIAAABkJ4DAAAAAA3NCSVQICAjb4U/gAAAAEHRFWHRTb2Z0d2FyZQBTaHV0dGVyY4LQCQAABkhJREFUeNrt3f1XUnccwPHvBbygPKlApCZyHJhSK52nddzD2VZznbmH07/gX9bv237ZD+vsoZ2zzpa2s1yd0kpXCZYikYCKyoMX9gNgCogIWKjv10/Xyy0z3nz93CugtBhZE8CRoOK/ANQMUDNAzQA1g5oBagaoGaBmgJpBzQA1A9QMUDOoGaDmOpJOxeOJ9YSS4o49ljRHImJlyb8wNRf0heKb2V1qs9XicrT32htliXv5uJAO+2tPUrHQnYknU8tK0Vvl1vZP+x0dOopm0qj/lDeCN/+a3i1lIUQitPDr2LP5ZJp7mprrm7I+OfHEm8h9JfrWc2d7v/q4/+oHns887ad0ucNiYV+08kH62vXxott7Hgzm5r0CjkdfriqZlTYZeX53Jbtf3+H+8l2rMfvYbGxpNjs7bTOT0+PzMU1r22mT+oD+PYX55u0ZHRkiMmoufrq34X/688P1/N1Gx/BZq1ElUvHo8+BaUjY6bE2yuqnn/EDPubSQDnBoJlbOAiuvOeq9/31+zapTg4PDdo2y6v/lljeQEkIIrd317YDNUMUYVXpmyIu46MGEztpcAW2bQS2E8mr2RSA3HscDL6bXLIPGynPeavHa9fGi2xX0DWre8Z3E4Dw/6tzPRY+1hR9v+iI7d7Z63vvGqa3t+S/5UnMNqa3dHXa/L6AIIYR8ouO0XiWESEaXVw/+czNUMDfXTCqdVkmSECIVj869jCa1xi6bXpaEUDYejN27U5DznmtzOQvt9vGDxKm5FpS1B/9M3QmlzB3dl86eaN5+IS4Vn52c+uNFPHOmaO9x92dvlrRGg0V7UBfaS8zWoOaSMUdmfxhbzF7j0JnPdJ/sam3USZurkfB/swveaO5HgCbH1aGOFnW1dRaWuucqTtnUXK50cnn8z4fTsZIHyZaPP3S5GlVVplzO0svCTM3VDc3xyMS/M5Ph4k/V0JjbPxnsdOhUFXS828pa9KatRZqaqbnKJVpZ8i9M+oK+cDwXtdrQ0uLqaj/TpucZodR8WLNOJJRNoZJljYaIjx/N0XpsqmWtWuZePa54XSCoGaBmgJoBagY1A9QMUDNAzQA1g5oBagaoGaBmUDNAzQA1A9QMUDOoGaBm4M2rr9dse/2vuEtQsaP1fhpg0gCoGaBmgJoBagY1A9QMUDNAzQA1g5oBagaoGaBmUDNAzQA1A9QMFHMkfpdrWokEA4/nI0vR+HpK1dTY2Gq19na2tDTw24mPl8P+usB0PLI4dtfr3Si8SdvV5/7IaeS3xlPz4Ug5EfL9dNsf2f0Ik9PzdZ9ZS9DMzXW/LIfHJl6n3GBs7XM73+891WdvasjtXPFO31pMpLmfmZvrWyrk9c0ms49J++kzl7sNuTX41EBk4ffbc4GUEELxPfKH7F2Wih62166Pj44MFW7nHVPibyj6R8DavJOy8Ww+ltmU7a5Lr1MWQkja5vZLAxZt5qNYcGZFqf4Tjo4M7Rbu6MhQptrCDbA2lzFmJNcD2ZjVnc5mXf5kLOmsJ7vkpZmEECIZXNlMN6v3OzwXLsa7BbpVeeEGqLmMmpXN5NbAXPQsT5JNshAJIYTYjKfSQlR2KlhiPS6a+G4DCah5V5JGI2c3E5FYWhgK5+pEOJ77IrWVLMzlDL5FW8/bSdzUvFfNDfqTTeLluhAi9fxpaM1i0+8INr0WmPdlV29tm1kj7TPl7VNyiXNBFmZqrsnpq87V2Xh/ekMIoSw9/e2RZri3RZ89p02vB3037kc2Mx/pbS7j/k52KyiycGIma2reR85mR3evb+pxTAiRDnsff+c3Ou1Go1pZXQ57Q4ncYQ1uT1tzdVduMuv0nnVuP4CzQGrepwbThQtdkTHfYub6W3zVO7eaV7ytp/eiTVOrHwWWbppV+e2vcIf7sWhsv3zRYVcXH62tbs/wO4aGWnyicgLdPlsTFmtzJeTmjs8viht/zwV2/IREsrg9X7iMNXyGxr6GDYJ+O9cGjsZ76yci89uClixuzxWXqcqU865sFA23nGoZPKi54qAli8tzxW3ieXPUfMiDXvbfC+n7nSae00zNwOHG6wJBzQA1A9QMUDOoGaBmgJoBagaoGdQMUDNAzQA1g5oBagaoGaBmgJpBzQA1A29efb3Xkdf/irsEFeMdCMCkAdSf/wFhi3LQYkpm9QAAAABJRU5ErkJggg==";
  }
});
</code></pre>

<p>Ref:</p>

<p><a href="http://en.wikipedia.org/wiki/Base64">Base64 on Wikipedia</a>;</p>

<p><a href="http://base64online.org/">http://base64online.org/</a></p>

<p><a href="https://gist.github.com/gabomdq/5415569">https://gist.github.com/gabomdq/5415569</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor基础知识之系统篇]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/26/174257/"/>
    <updated>2015-05-26T17:42:57+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/26/174257</id>
    <content type="html"><![CDATA[<h1>课程目标</h1>

<ol>
<li><p>理解Meteor的运行环境和安装过程；</p></li>
<li><p>获得Linux；</p></li>
<li><p>能够在Linux系统中进行简单的文件操作；</p></li>
</ol>


<h1>为什么是Linux</h1>

<p>请大家思考一个问题：Windows的知名度、用户数和“易用性”都比Linux高很多，
为什么要选择Linux作为开发和部署环境？</p>

<p>要回答这个问题，首先得搞清楚：操作系统作为人类发明的数不清的工具中的一种，
Windows和Linux各自的定位是什么，或者说它们的目标用户是谁？</p>

<p>回顾二者的历史，不难发现Windows的目标用户是普通计算机用户，
使用计算机主要用来完成日常工作和娱乐；Linux是一群程序员为自己开发的操作系统，
设计目标是为自己和世界提供一个新的选择，一个完全自由、可定制的系统。</p>

<p>本质上，Windows是一件商品，它的首要目标是创造利润（养活生产者），其次是易于使用；
Linux是一件自制工具，它的首要目标是易于制造（方便生产者），其次是易于使用。</p>

<p>这段话似乎比较虚，但你一定要记在心里，因为后续各种差异，都是这个区别的表象，
理解了这个区别，可以帮助你避免无数纠结和口水战，把宝贵的生命用在创造上，而不是选择和争论上。</p>

<p>Windows推崇封闭（为什么？），用户只要用它做事情就好，不需要也不能深入到系统内部，了解它的机制，
Linux推崇开放，所有的东西尽可能公开，用户可以方便地了解它的运行机制，
融入自己的理解，把它变成自己喜欢的样子。</p>

<p>落实到实现层面，Windows喜欢二进制文件，Linux喜欢文本文件（为什么？）
用Gancarz的话说，Linux是基于文本的操作系统，Windows是基于图形的操作系统。</p>

<p>Windows这种风格给许多人造成的一个误解：所有的数据都需要通过某个软件来编辑、展现，
如果你不会用某个软件，那么很遗憾对应的数据你就没法用了。
这显然是很荒谬的，写在磁盘上的数据与写在纸上的数据没有任何区别，
阅读它们唯一需要的是我们的眼睛，
如果某个软件商告诉你还需要借助他们搞出来的某个软件，
那只是他们惯于使用的无中生有创造利润的伎俩而已。</p>

<p>所以，作为一名开发者，你有权利了解你手里的工具是怎么工作的，
你需要把自己培养成赤手空拳也能在森林里活下去的特种兵，
而不是只会用别人给你的工具按部就班生产的流水线工人。</p>

<p>P.S.: 这里的Linux是“基于Linux内核的操作系统”的简称。</p>

<h1>获得Linux</h1>

<p>参考<a href="https://whmeteor.wordpress.com/2015/06/01/win7%E4%B8%8B%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E5%AE%89%E8%A3%85ubuntu14-04%E5%8F%8A%E7%A1%AC%E7%9B%98%E4%B8%8Bwin7ubuntu-14-04%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/">Win7下在虚拟机中安装Ubuntu14.04及硬盘下win7+Ubuntu 14.04双系统的安装的方法</a>.</p>

<h1>熟悉Linux环境</h1>

<p>首先了解一下Linux与Windows最直观的不同之处：</p>

<ol>
<li><p>Linux只有一个根目录，它没有“盘符”的概念，但仍然可以将多个逻辑分区组织在一起（它是怎样做到的？）</p></li>
<li><p>Linux的文件夹和文件名都区分大小写；</p></li>
<li><p>Linux的命令行（严格来说这货叫shell）是全能选手，Web开发的全部工作都可以在命令行里进行；</p></li>
<li><p>Linux有一个神奇的文本编辑器叫vim，不同于Windows的文本编辑器，比如记事本、Word等等，它会彻底颠覆你对“文本编辑”这件事的理解；</p></li>
</ol>


<p>下面我们结合Meteor的几个命令来初步认识一下你未来的工作环境：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl https://install.meteor.com/ <span class="p">|</span> sh
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>命令格式说明；</p></li>
<li><p>管道符的作用和用法；</p></li>
<li><p><code>curl ... | sh</code>是一种常用的远程安装范式；</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>meteor create simple-todos
</span></code></pre></td></tr></table></div></figure>


<p>复杂命令的格式说明</p>

<h1>Linux的简单文件操作</h1>

<p>数据管理四项基本内容：增删改查。</p>

<ul>
<li><p>ls</p></li>
<li><p>cat</p></li>
<li><p>echo</p></li>
<li><p>mkdir</p></li>
<li><p>cd</p></li>
<li><p>rm</p></li>
<li><p>vi</p></li>
</ul>


<h1>最简vi使用教程</h1>

<p>在领略vi博大精深的文本编辑能力之前，不妨先用记事本的方法使用它：</p>

<ol>
<li><p>按"i"键进入编辑模式；</p></li>
<li><p>当记事本用，但没有鼠标哦，方向键移动光标，Del/Backspace删除；</p></li>
<li><p>编辑完后按"ESC"键返回标准模式；</p></li>
<li><p>按下<code>:x</code>两个键保存内容并退出vi；</p></li>
</ol>


<h1>总结</h1>

<p>掌握了这部分内容，你就初步理解了Meteor的开发和部署环境，
认识了Linux这个有趣的操作系统，
这是成为Meteor开发高手的第一步，难度不大，但需要你改变过去的一些习惯，
刚开始可能会不适应，但随着时间的流逝，你会越来越确信：这些付出是值得的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run MongoDB Server on Docker in VPS]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/15/142023/"/>
    <updated>2015-05-15T14:20:23+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/15/142023</id>
    <content type="html"><![CDATA[<pre><code>sudo usermod -aG docker your-user
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git初体验]]></title>
    <link href="http://leetschau.github.io/blog/2015/05/10/091733/"/>
    <updated>2015-05-10T09:17:33+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/05/10/091733</id>
    <content type="html"><![CDATA[<p>本文是毛豆网微课程"Git初体验“的文稿。</p>

<h1>Git初体验</h1>

<h2>Git有什么用？</h2>

<p>Git是Linux创造者Linus Torvalds编写的、目前人气最旺的版本控制工具。</p>

<p>那么版本控制是做什么的？</p>

<p>写代码免不了修修改改，比如经过一天的奋斗，你完成了一个”寻找最萌妹子“算法，
刚向死党炫耀，就发现选出来的居然是最萌喵星人，太没面子了，回去仔细研究一番，
发现漏了一层筛选条件，于是通宵达旦修改算法，天蒙蒙亮的时候，你发现自己的方法行不通，
需要回退到修改前的状态，换一种算法实现。但这一晚上修改了4、5个文件，
改动散布在不下十处地方，怎么把代码恢复到修改前的状态？</p>

<p>这个时候，是不是希望有哆啦A梦的时光飞毯，帮你回到昨天晚上？</p>

<p>是的，Git就是你要找的时光飞毯。</p>

<p>当然它的功能不止是在代码历史上跳跃，还有很多更炫酷的功能，但千里之行始于足下，让我们从最基本的功能开始吧！</p>

<h2>用Git做简单的版本控制</h2>

<p>Git最基本的用法是在命令行环境中通过执行Git命令的方式完成的。</p>

<p>比如你NB闪闪的算法保存在一个叫"zuiMeng"的文件夹里，
第一步要做的，是启动命令行环境，用<code>cd</code>命令把"zuiMeng"设置为当前目录，
然后执行：<code>git init</code>，这样你的"zuiMeng"目录就具备回到过去的魔力了。</p>

<p>现在你可以随意修改文件了，修改、删除都随你（当然你要作死把"zuiMeng"这个文件夹都删了Git就帮不了你了），
如果对修改满意，提交你的改动到代码库：</p>

<pre><code>git add -A
git commit -m "commit message"
</code></pre>

<p>&ldquo;commit message"一般是这次修改包含的内容，比如”增加了过滤宠物功能“之类的。</p>

<p>如果对改动不满意呢？
执行<code>git reset --hard HEAD</code>，搞定！
什么？你后悔了，要找回刚才的修改？
这个Git还真能满足你，不过这就不是本课程的范围啦，
记住你现在还是个菜鸟，改代码前多动动脑子想清楚没坏处。</p>

<p>这样周而复始，提交了很多次，这时可以用<code>git log</code>来查看你的提交历史。
如果想回到其中的某一次，首先需要在<code>git log</code>界面中记下目标commit的hash值，
这个值很长，只记下前6位就行了，假设这个值是"ef5a5b"，那么要跳转到这次提交，
执行<code>git checkout ef5a5b</code>，看看你的文件，是不是变回到那次提交时的模样了？</p>

<p>如果想跳回最后一次提交，除了重复上面的过程外，还有更简单的方法：
<code>git checkout master</code>，这是因为"master"是一个特殊标记，代表你的最后一次提交。</p>

<p>好，这就是Git的基本用法了，总结一下：</p>

<ol>
<li><p>初始化代码库：<code>git init</code>;</p></li>
<li><p>修改文件；</p></li>
<li><p>提交改动到代码库：<code>git add -A</code>，<code>git commit</code>；</p></li>
<li><p>查看版本历史：<code>git log</code>；</p></li>
<li><p>回退到历史版本：<code>git checkout &lt;hash&gt;</code>.</p></li>
</ol>


<h2>Git还能做什么？</h2>

<ol>
<li><p>分布式开发</p>

<p> 比如你在北京，刚在广州找到一位创业小伙伴，有了Git，就不用搬到广州去啦，
 也不必像Subversion那样，在公网架设代码库，只要在<a href="https://github.com/">github</a>上创建一个公共代码库，
 走遍天涯海角，你需要就是一个WiFi接入点了。</p>

<p> 如果你不希望大家都能看到你们的代码，推荐把公共代码库放在<a href="https://bitbucket.org/">bitbucket</a>上。</p></li>
<li><p>并行开发</p>

<p> 不管你的团队有多少开发者，大家可以同时开发不同的功能，然后合并在一起。
 当然会存在冲突的风险，这里推荐一个高逼格程序员必备神器<a href="https://github.com/nvie/gitflow">git-flow</a>，
 用它武装你的开发团队吧，从此妈妈再也不用担心我们代码冲突啦~</p></li>
</ol>


<h1>Git FAQ</h1>

<ol>
<li><p>我只会用Windows，能用Git吗？</p>

<p> 没问题！下载<a href="https://msysgit.github.io/">msysgit</a>安装包，一路Next安装好之后就可以用了，除了基本的命令行，还附带了一个图形界面工具，是不是很贴心？</p></li>
<li><p>那些命令记不住，能推荐一款纯图形界面的Git工具吗？</p>

<p> 当然可以。如果用Windows，上面介绍的msysgit的图形界面工具就很好了；如果用Linux，Git自带了gitk工具，Mac俺没用过，自己搜搜吧。</p></li>
<li><p>我英语不好，能给点中文资料吗？</p>

<p> 这个真帮不了你了，虽说Git中文资料蛮丰富的，可你的目标不是变成靠Copy/Paster大法挣千把块钱30岁以后转行产品经理的苦逼码农吧？
 如果你希望通过写代码打开一段崭新的人生，从现在开始阅读官网文档吧，
 我带过那么多小弟小妹被我逼着看文档，现在他们自己混饭吃，没有一个用Baidu找中文文档看的。</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
