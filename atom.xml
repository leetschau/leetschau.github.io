<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2016-02-21T11:06:40+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[3月6日演讲提纲]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/21/110422/"/>
    <updated>2016-02-21T11:04:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/21/110422</id>
    <content type="html"><![CDATA[<h1>行业背景</h1>

<ul>
<li><p>会展行业现状：基本角色介绍；</p></li>
<li><p>行业特点：信息不透明，中间环节多，交易成本高，主要靠销售，参展体验差；</p></li>
<li><p>与传统B2C领域的区别：交易量小，单笔金额大，多了展会维度；</p></li>
<li><p>产品愿景：改变行业现状，提升会展效果，airbnb vs taobao</p></li>
</ul>


<h1>技术框架选型</h1>

<h2>外包 vs 自主开发</h2>

<p>成本和质量控制，团队建设，备选方案：Magento, ezshop</p>

<h2>Web框架选型</h2>

<p>SSH, LAMP, .NET, Dart, Flask, Play, MEAN, Meteor</p>

<p>开发者背景：Pascal -> Delphi -> Python -> Java -> Scala (Linux)</p>

<p>Meteor优势：学习成本低（js: web + db），开发效率高，reactivity</p>

<h1>架构演进</h1>

<p>原则：自主开发核心商业逻辑，外围功能尽量外包。</p>

<ul>
<li><p>第一阶段：站内搜索，基于正则匹配的站内搜索，
Deploy: MUP, beta -> production;
单一package，bitbucket，DB + Web Server, 公网IP；</p></li>
<li><p>第二阶段：线上搜索 + 线下撮合，以搜索为中心，增加静态广告，
DB + Web Server + Console，初步的权限管理；</p></li>
<li><p>第三阶段：多品种线上交易，多package，git submodule，
DB Cluster + Web Server + Elasticsearch + MongoConnector +
Wordpress + Phabricator + Console;
AliPay, 私有网络；</p></li>
<li><p>第四阶段：单一商品线上交易，精简数据模型，
Deploy: staging (Phab + Ansible, auto) -> beta -> production;
SSL，AliPay + 银行接入；</p></li>
</ul>


<h1>Meteor待改进的地方</h1>

<ul>
<li><p>静态分析工具不足，难以排查拼写错误；</p></li>
<li><p>Package数量增加后，编译速度变慢，受网速影响大；</p></li>
<li><p>版本兼容性不好；</p></li>
<li><p>多数据源处理复杂；</p></li>
<li><p>第三方package兼容性，持续性良莠不齐；</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merge Multiple PDF Files in Ubuntu]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/20/010838/"/>
    <updated>2016-02-20T01:08:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/20/010838</id>
    <content type="html"><![CDATA[<p>There&rsquo;s a built-in utility in Ubuntu 14.04 &ldquo;pdfunite&rdquo;.
Merge multiple pdf files with it (the last one is the output file name):</p>

<p><code>pdfunite DataMining-ch* AProgrammersGuide2DataMining.pdf</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debug Python Script]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/16/212514/"/>
    <updated>2016-02-16T21:25:14+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/16/212514</id>
    <content type="html"><![CDATA[<p>Now I want to dubug a script named <code>filteringdata.py</code>.</p>

<h1>PyCharm Community Edition</h1>

<p>It&rsquo;s editor (with IdeaVim plugin), linter and debugger is
the most powerful and verbose in the 3 candidates.</p>

<p>Add the following lines into ~/.ideavimrc to swap colon and semicolon:</p>

<pre><code>nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;
</code></pre>

<h1>pudb</h1>

<p>Comparing with ipdb, pudb needn&rsquo;t add stub in source sccript.</p>

<p>sudo pip install pudb
sudo chown -R leo:leo ~/.config/pudb</p>

<p>pudb filteringdata.py</p>

<p>Use <code>?</code> to list all available commands.</p>

<h1>ipdb</h1>

<p>There are totally 3 steps when debugging a Python script with
ipdb module: install, insert stubs in source codes and debug.</p>

<p>First install with <code>sudo pip install ipdb</code>.</p>

<p>Then add <code>from ipdb import set_trace</code> at the head into the script,
and add <code>set_trace()</code> at the first place you want the dubugger to stop.</p>

<p>Finally start a shell and run:</p>

<pre><code>$ ipython
...
IPython 4.0.1 ...
...
In [1]: %run filteringdata.py
&gt; /home/leo/docs/playground/pg2dm-python/ch2/filteringdata.py(53)recommend()
     52     # first find nearest neighbor
---&gt; 53     nearest = computeNearestNeighbor(username, users)[0][1]
     54 

ipdb&gt; h
</code></pre>

<p>Frequently used commands include:</p>

<pre><code>a: print args of current function;
b: set or list break points;
c: continue to next break points;
n: next;
s: step;
p &amp; pp: evaluate and print value of an expression;
pp locals(): pretty-print all local variables;
q: quit;
</code></pre>

<p>Use <code>h a</code> to see the help information about command <code>a</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang Notes]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/09/120142/"/>
    <updated>2016-02-09T12:01:42+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/09/120142</id>
    <content type="html"><![CDATA[<h1>Setup Go Environment</h1>

<p>Download go1.5.1.linux-amd64.tar.gz from <a href="https://golang.org/">Go homepage</a>,
extract it to folder &ldquo;/usr/local/go&rdquo;.</p>

<p>Add the following lines into ~/.zshenv:</p>

<pre><code>GOROOT=/usr/local/go
PATH=$PATH:$GOROOT/bin
</code></pre>

<p>Run <code>go env</code> to verify the installation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cabal Notes]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/07/103930/"/>
    <updated>2016-02-07T10:39:30+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/07/103930</id>
    <content type="html"><![CDATA[<h1>Packages</h1>

<p>Haskell packages can be installed in user level (global, like <code>npm install -g</code>)
or project level (local, like <code>npm install</code>).</p>

<p>The default behavior of cabal is user level:</p>

<pre><code>cabal install &lt;package-name&gt;
</code></pre>

<p>To install package in project level, you need create a sandbox beforehand:</p>

<pre><code>cabal sandbox init     # run in project root folder
cabal install &lt;package-name&gt;
</code></pre>

<p>The global packages are stored in $HOME/.cabal/packages folder,
while local packages are stored in $PROJ_ROOT/.cabal-sandbox/lib folder.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Phabricator Notes]]></title>
    <link href="http://leetschau.github.io/blog/2016/02/03/183654/"/>
    <updated>2016-02-03T18:36:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/02/03/183654</id>
    <content type="html"><![CDATA[<h1>自定义首页内容</h1>

<p>在首页右上角搜索框中输入"Dashboard"，进入[Dashboards > Active Dashboards],
点击"Dashboard 1"，进入Dashboard 1的页面后，点击右上角的"Manage Dashboard",
在这里可以移动首页每个面板的位置，编辑每个面板的内容。</p>

<p>例如在"W7 Tasks"面板中，可以用下面的设置做出两个Tab页：</p>

<blockquote><p>Tab 1 Name: My Tasks</p>

<p>Tab 1 Panel: W6 My Tasks</p>

<p>Tab 2 Name: Recent Tasks</p>

<p>Tab 2 Panel: W3 Recent Tasks</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use VIM on Windows]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/31/152533/"/>
    <updated>2016-01-31T15:25:33+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/31/152533</id>
    <content type="html"><![CDATA[<p>Use <a href="http://cmder.net/">cmder</a> as the console.
Use Alt-Enter to toggle full screen, Ctrl-T to create new window/pane,
Ctrl-D to close window, <code>ls</code> to list files.</p>

<p>Follow <a href="http://usevim.com/2012/10/12/vim101-windows/">Vim 101: Using Vundle and Pathogen in Windows</a>,
install msysGit.</p>

<p>Ref:</p>

<p><a href="https://github.com/VundleVim/Vundle.vim/wiki/Vundle-for-Windows">Vundle for Windows</a></p>

<h1>Switch CapsLock and ESC</h1>

<p>Install <a href="https://autohotkey.com/">AutoHotKey</a>, create file &ldquo;switchKey.ahk&rdquo;:</p>

<pre><code>SetTitleMatchMode,2
#IfWinActive, Cmder
   CAPSLOCK::ESC
   ESC::CAPSLOCK
return
</code></pre>

<p>Use &ldquo;Convert .ahk to .exe&rdquo; tool provided by AutoHotKey
to convert it to switchCapsESC.exe (see Note 1 for details),
and add it to &ldquo;Start&rdquo; menu.</p>

<p>But Vundle is hard to configure on Windows, probably caused by
&ldquo;runtimepath&rdquo; of vim.</p>

<p>Note 1:</p>

<pre><code>cd C:\Program Files\AutoHotKey\Compiler
Ahk2Exe.exe /in switchKey.ahk /out switchCapsESC.exe
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将Master分支上的最后一个Commit移动到Develop分支上]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/30/132538/"/>
    <updated>2016-01-30T13:25:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/30/132538</id>
    <content type="html"><![CDATA[<p>代码库的开发分支是develop，修改代码前没有注意还处在master分支，
修改完并提交后才意识到提交到了master分支上，
需要将这个commit移动到develop分支上：</p>

<pre><code>git checkout develop
git cherry-pick master
git checkout master
git reset --hard HEAD~
</code></pre>

<p>Ref: <code>git help cherry-pick</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add GUI App Into `Run Application` List on Ubuntu]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/30/131049/"/>
    <updated>2016-01-30T13:10:49+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/30/131049</id>
    <content type="html"><![CDATA[<p>There are many GUI apps which started with a shell script,
like <a href="http://3t.io/mongochef/">MongoChef</a>,
or <a href="http://www.syntevo.com/smartgit/">SmartGit</a>.</p>

<p>The most convenient way to run them in Ubuntu Unity is from
&ldquo;Run Application&rdquo; dialog (shortcut: Alt-F2).</p>

<p>Add them into the list with
<code>sudo ln -s /home/leo/apps/smartgit/bin/smartgit.sh smartgit</code>.</p>

<p>Start them with [Alt-F2, smartgit].</p>

<p>Note the link name shouldn&rsquo;t have extension, like &ldquo;.sh&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信桌面版的Linux解决方案]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/28/113336/"/>
    <updated>2016-01-28T11:33:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/28/113336</id>
    <content type="html"><![CDATA[<p>网页版微信，目前(2016.1.28) 似乎自动退出的问题得到了解决，
页面截图使用Shutter，截图后右键选择"Copy"，
粘贴到微信网页版文本框中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove Key From Known_hosts]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/19/231213/"/>
    <updated>2016-01-19T23:12:13+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/19/231213</id>
    <content type="html"><![CDATA[<p>If you use some virtual host with the same IP,
you will always see messages below:</p>

<pre><code>$ ssh ansible@console.newfairs-inc.com
Warning: the ECDSA host key for 'console.newfairs-inc.com' differs
from the key for the IP address '192.168.100.201'
Offending key for IP in /home/user/.ssh/known_hosts:48
Matching host key in /home/user/.ssh/known_hosts:39
Are you sure you want to continue connecting (yes/no)? 
</code></pre>

<p>Or something like this:</p>

<pre><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
The RSA host key for foo-bar.net has changed,
and the key for the corresponding IP address 127.0.0.1
is unchanged. This could either mean that
DNS SPOOFING is happening or the IP address for the host
and its host key have changed at the same time.
Offending key for IP in /home/user/.ssh/known_hosts:6
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
</code></pre>

<p>Notice the line &ldquo;Offending key for IP in /home/user/.ssh/known_hosts:48&rdquo;
in the first example, and &ldquo;&hellip;/known_hosts:6&rdquo; in the second,
it shows the 48th (or 6th) line should be removed from $HOME/.ssh/known_hosts:</p>

<pre><code>sed -i '48d' ~/.ssh/known_hosts
</code></pre>

<p>Ref:
<a href="http://superuser.com/questions/30087/remove-key-from-known-hosts">Remove key from known_hosts</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pretty-print JSON in Command Line]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/13/174140/"/>
    <updated>2016-01-13T17:41:40+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/13/174140</id>
    <content type="html"><![CDATA[<p>Option 1:</p>

<pre><code>npm install -g json
echo '{"foo": "lorem", "bar": "ipsum"}' | json
</code></pre>

<p>Option 2:</p>

<pre><code>echo '{"foo": "lorem", "bar": "ipsum"}' | python -m json.tool
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Executable Into Windows 7's PATH]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/11/104458/"/>
    <updated>2016-01-11T10:44:58+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/11/104458</id>
    <content type="html"><![CDATA[<p>To add stand-alone app <a href="http://www.flos-freeware.ch/notepad2.html">notepad2</a>
and <a href="http://ditto-cp.sourceforge.net/">ditto</a>
into the Windows system path, write below into file &ldquo;modifyPath.bat&rdquo;,
and run it &ldquo;as administrator&rdquo;:</p>

<pre><code>setx /M PATH "%PATH%;d:\apps\Ditto;d:\apps\notepad2_4.2"
</code></pre>

<p>Now you can press &ldquo;Win&rdquo; key, input &ldquo;ditto&rdquo; (or notepad),
you can see &ldquo;Ditto&rdquo; (or notepad2) program.
Open a console, run <code>echo %PATH%</code>,
you can see Ditto and notepad2&rsquo;s folder has been added into PATH.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongo-connector Dump Error and Solutions]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/09/195735/"/>
    <updated>2016-01-09T19:57:35+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/09/195735</id>
    <content type="html"><![CDATA[<p>When I synchronize data from a mongodb to a elasticsearch server with
<code>mongo-connector -m 192.168.100.3:27017 -t http://192.168.100.24:9200
 -d elastic_doc_manager --admin-username root --password xxx</code>,
the mongo-connector process quit with the following logs in
&ldquo;mongo-connector.log&rdquo; (all texts behind &ldquo;BulkIndexError&rdquo; are in the same line,
I rearrange the line for easy to understand):</p>

<pre><code>2016-01-09 19:05:52,457 [CRITICAL] mongo_connector.oplog_manager:543 - Exception during collection dump
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/mongo_connector/oplog_manager.py", line 495, in do_dump upsert_all(dm)
  ...
BulkIndexError: (u'10 document(s) failed to index.',
  [
    {
      u'index': {
        u'status': 400,
        u'_type': u'Fair',
        u'_id': u'4zWhZTJnqPCd2RK93',
        u'error': {
          u'caused_by': {
            u'reason': u'unknown property [latitude]',
            u'type': u'illegal_argument_exception'},
            u'reason': u'failed to parse [recurrence.location]',
            u'type': u'mapper_parsing_exception'},
            u'_index': u'staging'
      }
    },
    ...
  ]
</code></pre>

<p>When mongo-connector parse a document with <code>_id: 4zWhZTJnqPCd2RK93</code>
in Collection &ldquo;Fair&rdquo;, it &ldquo;failed to parse [recurrence.location]&rdquo;.
From <code>_index: staging</code>, we know collection Fair is in mongodb database &ldquo;staging&rdquo;.</p>

<p>List all &ldquo;recurrence.location&rdquo; of each document in staging database:</p>

<pre><code>$ mongo 192.168.100.3:27017/staging -u xxx -p xxx
foba:PRIMARY&gt; db.Fair.find({}, {"recurrence.location": 1})
{ "_id" : "h7Lo3hGLrFGEb6BK7", "recurrence" : [ { "location" : { "latitude" : 22.53, "longitude" : 114.06 } } ] }
{ "_id" : "Kd2e9w58P7vAScLDL", "recurrence" : [ { "location" : "" } ] }
{ "_id" : "4zWhZTJnqPCd2RK93", "recurrence" : [ { "location" : { "latitude" : 22.53, "longitude" : 114.06 } } ] }
</code></pre>

<p>It&rsquo;s now clear that the exception in synchronization is caused by
different structure of &ldquo;recurrence.location&rdquo;.</p>

<p>To guarantee mongo-connector synchronizing successfully,
you must keep all document in a collection share the same schema.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove Duplicate Zsh History]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/08/162914/"/>
    <updated>2016-01-08T16:29:14+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/08/162914</id>
    <content type="html"><![CDATA[<p>To remove duplicate items in <a href="https://github.com/junegunn/fzf">fzf</a> prompt,
add the following lines into ~/.zshrc:</p>

<pre><code>setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_BEEP
</code></pre>

<p>Ref:</p>

<p><a href="https://wiki.archlinux.org/index.php/zsh#Preventing_duplicate_lines_in_the_history">Preventing duplicate lines in the history</a></p>

<p><a href="https://github.com/mattjj/my-oh-my-zsh/blob/master/history.zsh">https://github.com/mattjj/my-oh-my-zsh/blob/master/history.zsh</a></p>

<p><a href="http://zsh.sourceforge.net/Doc/Release/Options.html">zsh options</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ansible Notes]]></title>
    <link href="http://leetschau.github.io/blog/2016/01/08/125827/"/>
    <updated>2016-01-08T12:58:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2016/01/08/125827</id>
    <content type="html"><![CDATA[<h1>使用源代码版本的ansible</h1>

<p>按照<a href="http://docs.ansible.com/ansible/intro_installation.html#running-from-source">Running From Source</a>,
首先安装依赖包 (<code>sudo pip install paramiko PyYAML Jinja2 httplib2 six</code>),
clone ansible的github repo, 然后配置环境变量，就可以使用ansible的各个版本了。</p>

<pre><code>git clone git://github.com/ansible/ansible.git --recursive $HOME/apps
</code></pre>

<p>需要使用ansible时，运行：</p>

<pre><code>source $HOME/apps/ansible/hacking/env-setup
</code></pre>

<p>默认是devel分支，如果要切换到稳定版分支，首先列出所有分支：<code>git branch -ra</code>，
然后切换到此分支上：</p>

<pre><code>cd $HOME/apps/ansible
git checkout origin/stable-2.0.1
source $HOME/apps/ansible/hacking/env-setup
</code></pre>

<p>更新代码库：</p>

<pre><code>cd $HOME/apps/ansible
git pull --rebase
git submodule update --init --recursive
</code></pre>

<h1>lookup ini plugin</h1>

<p>通过pip安装的ansible是1.9.4版本，这一版没有lookup ini plugin.
在<a href="http://docs.ansible.com/ansible/playbooks_lookups.html#the-ini-file-lookup">The INI File Lookup</a>
下可以看到 &ldquo;New in version 2.0.&rdquo;.</p>

<p>运行下面的task时，</p>

<pre><code>- debug: msg="User in integration is "
</code></pre>

<p>会报错：</p>

<blockquote><p>lookup plugin (ini) not found</p></blockquote>

<p>用pip安装后，所有的lookup plugin的安装目录是
/usr/local/lib/python2.7/dist-packages/ansible/runner/lookup_plugins
下面没有ini.py.</p>

<p>解决方法见上节使用源代码版本的ansible.</p>

<p>有了ini lookup plugin, 可以在ansible的roles/<role-name>/tasks/main.yml中
引用ansible变量和外部ini文件：</p>

<pre><code>- name: download codes to laptop
  local_action: &gt;
    command
</code></pre>

<p>相关的文件：</p>

<pre><code>cat $ANSIBLE_PRJ_HOME/roles/deploy/vars/main.yml 
repo_base: "~/temp"
timestamp: ""
repo_name: "-"
local_repo: "/"
target_branch: "develop"
ext_path: "/"
nodejs_bin_path: ":/opt/node-v0.10.40-linux-x64/bin"
app_settings: "~/docs/website/v3/settings.json"
env_settings: "~/docs/website/v3/serverEnv.ini"

cat ~/docs/website/v3/serverEnv.ini
[common]
PORT=3000

[p21.newfairs-inc.com]
MONGO_URL=mongodb://dba:dba@192.168.100.3:27017/production
ROOT_URL=http://www.newfairs.net
GIT_REPO=git clone ssh://git@git.newfairs-inc.com/diffusion/NEWFAIRS/newfairs.git

[p22.newfairs-inc.com]
MONGO_URL=mongodb://dba:dba@192.168.100.3:27017/production
ROOT_URL=http://www.newfairs.net
GIT_REPO=git clone ssh://git@git.newfairs-inc.com/diffusion/NEWFAIRS/newfairs.git

[beta-app.newfairs-inc.com]
MONGO_URL=mongodb://dba:dba@192.168.100.3:27017/production
ROOT_URL=http://beta.newfairs.com
GIT_REPO=git clone ssh://git@git.newfairs-inc.com/diffusion/NEWFAIRS/newfairs.git

[console.newfairs-inc.com]
MONGO_URL=mongodb://dba:dba@192.168.100.3:27017/console
ROOT_URL=http://console.newfairs-inc.com
GIT_REPO=git clone ssh://git@git.newfairs-inc.com/diffusion/CONSOLE/newfairs-console.git
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress中文文章详情页无法打开问题]]></title>
    <link href="http://leetschau.github.io/blog/2015/12/30/162805/"/>
    <updated>2015-12-30T16:28:05+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/12/30/162805</id>
    <content type="html"><![CDATA[<p>Wordpress Dashboard -> Settings -> Permalinks -> Common Settings:
Plain（或者Numeric）。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[青云的负载均衡器]]></title>
    <link href="http://leetschau.github.io/blog/2015/12/29/134651/"/>
    <updated>2015-12-29T13:46:51+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/12/29/134651</id>
    <content type="html"><![CDATA[<p>青云把负载均衡器抽象成了三个概念：一是负载均衡器本身；二是监听器，三是后端主机。
监听器代表负载均衡器对外提供的协议类型和端口；
后端主机页面上的"端口"指的是后端主机上服务进程监听的端口。</p>

<p>只要用户创建负载均衡器、监听器、主机，就可以在界面里头完成负载均衡器的所有操作。</p>

<p>一条转发策略，代表一条从域名到主机和端口的关联规则，所以如果是同一个服务有多个域名，
可以配置在同一个转发策略里。
如果是两个不同的服务，即使是同一IP不同端口，也要配置在不同的转发策略里。</p>

<h1>示例</h1>

<h2>添加第一个服务</h2>

<p>需要将内网中的一台服务器作为beta服务器，
外部用户可以通过域名 beta.nufair.com 从公网访问，实现方法：</p>

<ol>
<li><p>在青云控制台 [计算与网络 -> 公网IP]中购买IP地址 nufairIP: 123.234.34.5</p></li>
<li><p>在域名 (nufair.com) DNS配置中增加一条A记录：beta -> 123.234.34.5</p></li>
<li><p>新建 [路由器] nufairRouter, 绑定nufairIP;</p></li>
<li><p>新建 [私有网络] nufairNet, 绑定nufairRouter;</p></li>
<li><p>新建 [主机] beta-app.nufair.com, IP: 192.168.100.121, 加入 nufairNet;</p></li>
<li><p>在 beta-app.nufair.com 中部署应用，服务监听端口 3000;</p></li>
<li><p>新建 [负载均衡器] nufairLB, IP：192.168.100.4, 绑定nufairNet;</p></li>
<li><p>[nufairRouter -> 端口转发]中添加规则 http-route: tcp 80 -> 192.168.100.4 80</p></li>
<li><p>[nufairRouter -> 基本属性]中点击[防火墙]，在其中增加规则：允许80端口下行；</p></li>
<li><p>[nufairLB -> 转发策略] 中新建转发策略:</p>

<blockquote><p>名称：app-beta
匹配方式：匹配任意规则</p></blockquote>

及其规则：

<blockquote><p>规则类型: 按域名转发
规则内容: beta.nufair.com</p></blockquote></li>
<li><p>nufairLB 中新建一个[监听器] http-listener, 为其[添加后端]，</p>

<blockquote><p>名称：beta
网络：受管私有网络
主机：192.168.100.121
端口：3000</p></blockquote>

<p>创建完成后，在[转发策略]一栏中点击[绑定]，选择[app-beta].</p></li>
</ol>


<h2>添加第二个服务</h2>

<p>需要将内网中另一台服务器作为生产服务器，通过域名nufair.com和www.nufair.com访问。</p>

<ol>
<li><p>青云控制台中购买一台主机，IP: 192.168.100.21, 在上面部署生产应用，服务监听端口3000;</p></li>
<li><p>在域名 (nufair.com) DNS配置中增加两条A记录：
@ -> 123.234.34.5
www -> 123.234.34.5</p></li>
<li><p>[nufairLB -> 转发策略] 中新建转发策略:</p>

<blockquote><p>名称：app-production
匹配方式：匹配任意规则</p></blockquote>

及其规则：

<blockquote><p>规则类型: 按域名转发
规则内容: nufair.com www.nufair.com</p></blockquote></li>
<li><p><a href="">nufairLB -> http-listener -> 添加后端</a>:</p>

<blockquote><p>名称：prod
网络：受管私有网络
主机：192.168.100.21
端口：3000</p></blockquote>

<p>创建完成后，在[转发策略]一栏中点击[绑定]，选择[app-production].</p></li>
</ol>


<p>说明：</p>

<p>转发策略的规则里，如果是按域名转发，注意一级域名，如nufair.com，
它实际上是<code>*.nufair.com</code>，当监听器的某个后端绑定了这样的规则后，
它后面的后端再绑定这个一级域名下的二级域名将无效，
例如将test.nufair.com指向100.21服务器的4500端口，</p>

<p>[nufairLB -> 转发策略] 中新建转发策略:</p>

<blockquote><p>名称：app-test
匹配方式：匹配任意规则</p></blockquote>

<p>  及其规则：</p>

<blockquote><p>规则类型: 按域名转发
规则内容: test.nufair.com</p>

<p>名称：test
网络：受管私有网络
主机：192.168.100.21
端口：4500</p></blockquote>

<p>  创建完成后，在[转发策略]一栏中点击[绑定]，选择[app-test].</p>

<p>应用修改后，test.nufair.com仍然指向3000端口上的服务，
原因是它作为nufair.com的二级域名，被app-production中的一级域名覆盖了，
解决方法是，从app-production中去掉"nufair.com".</p>

<p>修改负载均衡器IP地址后需要注意：
要相应修改路由器中端口转发中目标（也就是负载均衡器）的IP地址。</p>

<p>参考：</p>

<p><a href="http://network.51cto.com/art/201504/472491.htm">青云QingCloud：云上最强负载均衡服务</a></p>

<p><a href="https://docs.qingcloud.com/guide/loadbalancer.html">负载均衡器指南</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Move Some Commit From One Repo to Another]]></title>
    <link href="http://leetschau.github.io/blog/2015/12/27/185843/"/>
    <updated>2015-12-27T18:58:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/12/27/185843</id>
    <content type="html"><![CDATA[<p>We need move all commit between origin/develop to develop in an old repo
to a new repo.</p>

<p>Export all commits in old repo:</p>

<pre><code>cd /path/to/old-repo
git format-patch origin/develop..develop
</code></pre>

<p>Now you have many .patch files in old repo.
Each patch file represents a commit between origin/develop and develop.</p>

<p>Apply these patches in new repo:</p>

<pre><code>cd /path/to/new-repo
git checkout develop
git am /path/to/old-repo/*.patch
</code></pre>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/5062389/getting-started-with-git-am">Getting started with git-am</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebSocket Error 400 in Meteor App]]></title>
    <link href="http://leetschau.github.io/blog/2015/12/25/102101/"/>
    <updated>2015-12-25T10:21:01+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/12/25/102101</id>
    <content type="html"><![CDATA[<p>I deploy a Meteor app, and proxy it with nginx.
When connect to the app server, there&rsquo;s a websocket error:</p>

<p>WebSocket connection to &lsquo;ws://prod-app-192-168-100-21.newfairs-inc.com/sockjs/311/ud_4e5xf/websocket&rsquo; failed:
Error during WebSocket handshake: Unexpected response code: 400</p>

<p>Solution:</p>

<pre><code>cat /etc/nginx/sites-enabled/newfairs
server {
  server_name prod-app-192-168-100-21.newfairs-inc.com;
  location / {
    proxy_pass http://localhost:3000/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
</code></pre>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/17014969/meteor-websocket-handshake-error-400-with-nginx">Meteor WebSocket handshake error 400 with nginx</a></p>

<p><a href="http://nginx.org/en/docs/http/websocket.html">WebSocket proxying</a></p>

<p><a href="http://stackoverflow.com/questions/30171179/meteor-websocket-connection-to-ws-websocket-failed-error-during-websock">http://stackoverflow.com/questions/30171179/meteor-websocket-connection-to-ws-websocket-failed-error-during-websock</a></p>
]]></content>
  </entry>
  
</feed>
