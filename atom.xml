<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-09-25T20:11:16+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add a Local Meteor Package]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/24/185036/"/>
    <updated>2015-09-24T18:50:36+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/24/185036</id>
    <content type="html"><![CDATA[<p>newfairs-v3 is the container project. newfairs-core is a package.</p>

<pre><code>meteor create newfairs-v3
cd newfairs-v3
meteor create --package newfairscommerce:core
cp -r ../newfairs-core packages
mv packages/core/{package.js,README.md} packages/newfairs-core/
rm -rf package/core
meteor add newfairscommerce:core
</code></pre>

<p>Then you have to define dependencies for this package with adding some
<code>api.use()</code> and loading order by adding some <code>api.addFiles(...)</code>
in packages/newfairs-core/package.js.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stack Notes]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/23/123748/"/>
    <updated>2015-09-23T12:37:48+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/23/123748</id>
    <content type="html"><![CDATA[<h1>Install</h1>

<p>Install <a href="https://github.com/commercialhaskell/stack">stack</a> and start a demo yesod web server:</p>

<pre><code>wget -q -O- https://s3.amazonaws.com/download.fpcomplete.com/ubuntu/fpco.key | sudo apt-key add -
echo 'deb http://download.fpcomplete.com/ubuntu/trusty stable main'|sudo tee /etc/apt/sources.list.d/fpco.list
sudo apt-get update &amp;&amp; sudo apt-get install stack -y
cd ~/docs/playground
stack new myHaskellProj yesod-sqlite  // very slow, 30 minutes or so
stack install yesod-bin cabal-install --install-ghc
stack build  // if it's interupteed by "FailedConnectionException s3.amazonaws.com 443" error, run this command again
stack exec -- yesod devel
</code></pre>

<p>Now open &ldquo;<a href="http://localhost:3000/">http://localhost:3000/</a>&rdquo;.</p>

<h1>Run Haskell Code</h1>

<p>To start a ghci, in any folder, run:</p>

<pre><code>stack ghci
Prelude&gt; putStrLn "hello world"
</code></pre>

<p>To run haskell script: in any folder, run</p>

<pre><code>$ cat hello.hs
main = putStrLn "hello world"
$ stack runghc hello.hs
</code></pre>

<h1>Editor Setup</h1>

<p>Ref: <a href="http://seanhess.github.io/2015/08/05/practical-haskell-editors.html">PRACTICAL HASKELL - EDITOR SETUP WITH STACK</a>.</p>

<pre><code>cd ~
stack setup
stack install hdevtools
stack path|grep ghc      # to get the ghc binary path used below
</code></pre>

<p>Add <code>PATH=$PATH:$HOME/.stack/programs/x86_64-linux/ghc-7.10.2/bin:$HOME/.local/bin</code> into ~/.zshenv.</p>

<p>Install syntastic and &lsquo;bitc/vim-hdevtools&rsquo; plugin for vim:</p>

<p>add the following 2 lines into ~/.vimrc:</p>

<pre><code>Plugin 'scrooloose/syntastic'
Plugin 'bitc/vim-hdevtools'
</code></pre>

<p>then run <code>vim +PluginInstall</code>.</p>

<p>Now your .hs files will be checked when saving.</p>

<p>To verify, create hello.hs as follows:</p>

<pre><code>main = do
  print "What is your name?"
  name &lt;- getLine
  print ("Hello " ++ name ++ "!")
</code></pre>

<p>When cursor on &ldquo;print&rdquo; in the 2nd line, run <code>:HdevtoolsType</code>
(which equivalent to run <code>hdevtools type hello.hs 2 3</code> in shell),
you should get &ldquo;[Char] -> IO ()&rdquo;.</p>

<p>For convenient, add the following shortcuts into ~/.vimrc:</p>

<pre><code>" hdevtools setup (haskell)
au FileType haskell nnoremap &lt;buffer&gt; &lt;F3&gt; :HdevtoolsType&lt;CR&gt;
au FileType haskell nnoremap &lt;buffer&gt; &lt;silent&gt; &lt;F4&gt; :HdevtoolsClear&lt;CR&gt;
</code></pre>

<p>Add &ldquo;this&rdquo; at the end of file from column 3 and save
(which is equivalent to run <code>hdevtools check hello.hs</code> in shell),
a &ldquo;Not in scope: ‘this’&rdquo; error will raises.</p>

<p>See <a href="https://github.com/schell/hdevtools">hdevtools</a> and
<a href="https://github.com/bitc/vim-hdevtools">bitc/vim-hdevtools</a> for more information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Webstorm as Meteor IDE]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/22/104351/"/>
    <updated>2015-09-22T10:43:51+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/22/104351</id>
    <content type="html"><![CDATA[<h1>Terminal</h1>

<p>In editor, use &ldquo;Alt-F12&rdquo; to activate terminal.
In terminal, use &ldquo;Shift-ESC&rdquo; or &ldquo;Alt-F12&rdquo; to go back to editor.
Double click terminal title bar to maximize the terminal panel.</p>

<p>Only run Meteor server in Webstorm&rsquo;s terminal.
Run all other terminal work (such as mongod, git, etc) in a external terminal.
Use &ldquo;Alt-Tab&rdquo; to switch between external terminal and Webstorm.</p>

<h1>Navigattion</h1>

<p>Toggle file browse pane with &ldquo;Alt-1&rdquo;.</p>

<p>Focus editor with &ldquo;ESC&rdquo;.</p>

<h1>Editor</h1>

<p>Split vertically/horizontally;</p>

<h2>Vim Plugin</h2>

<p>Install IdeaVim in [Settings -> Plugins] (open it with Ctrl-Shift-A).</p>

<p>Open/close it in [Tools -> Vim Emulator], or &ldquo;Alt-T Ctrl-Alt-V&rdquo;.</p>

<p>Close editor tab: :q</p>

<h1>Frequently Used Shortcuts</h1>

<p>Double shift: search everything;</p>

<p>Shift-Ctrl-N: search and open files;</p>

<p>Shift-Ctrl-A: search and run commands;</p>

<p>Alt-Left/Right: switch between editor tabs;</p>

<p>Ctrl-Shift-Enter: complate statement;</p>

<p>See [Help -> Default Keymap Reference] for all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autosave in Webstorm]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/22/092543/"/>
    <updated>2015-09-22T09:25:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/22/092543</id>
    <content type="html"><![CDATA[<p>Autosave related settings of Webstorm 10.0.4 are mostly in
[Settings -> Appearance &amp; Behavior -> System Settings -> Synchronization].</p>

<p>By default the &ldquo;Save files automatically &hellip;&rdquo; is unchecked.
So Webstorm will not save file changes before you press Ctrl-S.
<strong>But</strong> &ldquo;Save files on frame deactivation&rdquo; is checked.
So if you switch to another application other than Webstorm,
all changes unsaved will be saved to disk.
<strong>However</strong>, when you modify file A without save,
and switch to another tab to edit file B,
file A will not be saved, because this is not &ldquo;frame deactivation&rdquo; (why?).</p>

<p>This is convenient for Meteor development.
You can modify many files without save.
As you switch to browser, Webstorm will save all changes to disk,
then Meteor detects file changes and refreshes pages in browser.</p>

<p>In Webstorm 10.0.4 the Linux version,
the blue color of changed tabs is subtle (compared with that on Windows or Mac),
check &ldquo;Mark modified tabs with asterisk&rdquo;
in [Settings -> Editor -> General -> Editor Tabs] to make unsaved tabs easier to identify.</p>

<p>Finally note that &ldquo;Ctrl-S&rdquo; in Webstorm is &ldquo;save all&rdquo; instead of &ldquo;save&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Convert a Folder Into Meteor App in Webstorm]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/21/092600/"/>
    <updated>2015-09-21T09:26:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/21/092600</id>
    <content type="html"><![CDATA[<p>You&rsquo;ve cloned a repo from remote host into foler &ldquo;$HOME/docs/myapp&rdquo;.
So you can&rsquo;t use <code>meteor create myapp</code> to build a new Meteor app.</p>

<p>You can create this &ldquo;myapp&rdquo; under /tmp,
and <code>cp -r /tmp/myapp/.meteor $HOME/docs/myapp/</code>.</p>

<p>Now open $HOME/docs/myapp in Webstorm,
it&rsquo;s been a Meteor app already.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generate Random Date After a Specified Date]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/20/212102/"/>
    <updated>2015-09-20T21:21:02+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/20/212102</id>
    <content type="html"><![CDATA[<p>The following codes can display a random date within a month after the specified fair date.</p>

<pre><code>$ meteor create randomDate
$ cd randomDate
$ meteor add momentjs:moment
$ cat randomDate.html
&lt;head&gt;
  &lt;title&gt;Random Date&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  在 展会日期 输入框中输入日期，例如：2015-05-25，然后点击 评论 按钮。
  &lt;hr&gt;

&lt;/body&gt;

&lt;template name="DatePanel"&gt;
  &lt;label&gt;展会日期：&lt;/label&gt;
  &lt;input type="text" id="fairDate"&gt;
  &lt;button&gt;评论&lt;/button&gt;
  &lt;p&gt;评论添加日期：&lt;/p&gt;
&lt;/template&gt;

$ cat randomDate.js
if (Meteor.isClient) {
  Template.DatePanel.helpers({
    commentDate: function () {
      return Session.get('commentDate');
    }
  });

  Template.DatePanel.events({
    'click button': function (e, t) {
      var dateStr = t.find("#fairDate").value;
      var fairDate = moment(dateStr);
      var randomDays = Math.floor((Math.random() * 30) + 1);
      var commentDate = fairDate.add(randomDays, 'days');
      var commStr = commentDate.format("YYYY-MM-DD");
      Session.set('commentDate', commStr);
    }
  });
}

$ meteor
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A JavaScript Closure Demo]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/16/101529/"/>
    <updated>2015-09-16T10:15:29+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/16/101529</id>
    <content type="html"><![CDATA[<p>下面的代码演示了JavaScript中的闭包：</p>

<pre><code>$ cat test.js
x = 100;
inc = function(){
  var x = 0;
  return function(){
    console.log(x++);
  };
};
inc1 = inc();
inc2 = inc();

$ node
&gt; require('./test.js')
{}
&gt; x
100
&gt; inc
[Function]
&gt; inc1
[Function]
&gt; inc2
[Function]
&gt; inc1()
0
undefined
&gt; inc1()
1
undefined
&gt; inc1()
2
undefined
&gt; inc2()
0
&gt; inc2()
1
undefined
&gt; inc2()
2
undefined
&gt; inc2()
3
undefined
&gt; inc2()
4
undefined
&gt; inc1()
3
undefined
&gt; inc()
[Function]
&gt; inc()()
0
undefined
&gt; inc()()
0
undefined
</code></pre>

<p>可以看到inc2()最后一次执行时内部x值为4，
inc1不受影响，执行时依然从上次的2开始增加变成3，
所以，不同的闭包（这里是inc1和inc2）保存了自己单独的内部变量x，
其中一个变化不会影响另一个的值。</p>

<p>由于每次执行inc()返回一个新的function，所以每次执行<code>inc()()</code>都打印0。</p>

<p>参考：</p>

<p><a href="http://www.zhihu.com/question/35060711/answer/62641357?group_id=627257263421976576#comment-94699289">javascript的闭包的概念和ruby的闭包的概念有何异同？</a>.</p>

<p>&ldquo;Load and execute external js file in node.js with access to local variables?&rdquo; on StackOverflow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSDoc Notes]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/15/122519/"/>
    <updated>2015-09-15T12:25:19+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/15/122519</id>
    <content type="html"><![CDATA[<p>JSDoc is a documentation generator similar to JavaDoc or PHPDoc.</p>

<h1>JSDoc</h1>

<p>Install <a href="https://github.com/jsdoc3/jsdoc">JSDoc</a> with <code>npm install -g jsdoc</code>.
Generate docs with <code>jsdoc **/*.js</code>.</p>

<h1>YUIDoc</h1>

<p><a href="http://yui.github.io/yuidoc/">YUIDoc</a> is suitable for generate documentation for <a href="http://yuilibrary.com/">YUI</a>,
a JavaScript library, and no longer actively maintained.</p>

<p>It can only list modules and classes on the homepage,
which is not very suitable for general purpose jsdoc.</p>

<p>Install it with <code>npm install -g yuidocjs</code>.
Run it with <code>yuidoc .</code>.
It creates a folder named &ldquo;out&rdquo; by default in the current directory.
Open the index.html in &ldquo;out&rdquo; folder to see the doc.</p>

<h1>Editor</h1>

<p>vim with <a href="https://github.com/scrooloose/nerdcommenter">scrooloose/nerdcommenter</a>.
Use <code>&lt;leader&gt;cs</code> to add block comment.
But note that the block generated by this plugin is started by <code>/*</code>, which is invalid for jsdoc and yuidoc.
You have to add an asterisk behind it as <code>/**</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Push to Github Repository With SSH Keys]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/12/233609/"/>
    <updated>2015-09-12T23:36:09+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/12/233609</id>
    <content type="html"><![CDATA[<p>I want push to github repository without input username and password.</p>

<ol>
<li><p>Add pub key to github account [profile -> settings -> SSH keys];</p></li>
<li><p>Set up git default user name and email address with <code>git config --global user.name</code>
and <code>git config --global user.email</code>;</p></li>
<li><p>Test ssh connection: <code>ssh -T git@github.com</code>;</p></li>
<li><p>Modify remote repo address: from <code>https://github.com/USERNAME/OTHERREPOSITORY.git</code> to
<code>git@github.com:USERNAME/OTHERREPOSITORY.git</code>, where first replace <code>https://</code> with <code>git@</code>,
then replace <code>github.com/</code> with <code>github.com:</code>.</p></li>
</ol>


<p>Now you can push to github repo (<code>git push origin master</code>) without input username and password.</p>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/6565357/git-push-requires-username-and-password">Git push requires username and password</a></p>

<p><a href="https://help.github.com/articles/set-up-git/#next-steps-authenticating-to-github-from-git">Set Up Git</a></p>

<p><a href="https://help.github.com/articles/generating-ssh-keys/">Generating SSH keys</a></p>

<p><a href="https://help.github.com/articles/changing-a-remote-s-url/">Changing a remote&rsquo;s URL</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Change SSH Port on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/12/093754/"/>
    <updated>2015-09-12T09:37:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/12/093754</id>
    <content type="html"><![CDATA[<p>Modify /etc/ssh/sshd_config:</p>

<ul>
<li><p>Port 22 -> 222</p></li>
<li><p>PermitRootLogin yes -> no</p></li>
<li><p>PasswordAuthentication yes -> no</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto Translate English Words With dict.cn in Firefox]]></title>
    <link href="http://leetschau.github.io/blog/2015/09/12/085417/"/>
    <updated>2015-09-12T08:54:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/09/12/085417</id>
    <content type="html"><![CDATA[<p>Everytime I want to get the meaning of a english word,
I have to copy the word, open dict.cn,
paste the word into the box and get the meaning, which is boring.</p>

<p>While there&rsquo;re some google translate extensions of firefox,
but they are slow and not very complete.
For example: the word meaning of &ldquo;spoiler&rdquo; in &ldquo;This synopsis may contain spoilers.&rdquo; on
page <a href="http://www.imdb.com/title/tt0209144/synopsis">Synopsis for Memento</a>.
So I have to build my own translate extension based on dict.cn.</p>

<h1>Steps</h1>

<ol>
<li><p>Install Greasemonkey extension in Firefox.</p></li>
<li><p>Build a new script with the following codes.</p></li>
<li><p>Select some text and press &ldquo;\&rdquo; key.</p>

<p> // ==UserScript==
 // @name        TranslateIt
 // @namespace   LeoScript
 // @include     *
 // @version     1
 // @grant       none
 // ==/UserScript==</p>

<p> // document.addEventListener(&lsquo;mouseup&rsquo;, getSel, false);
 document.addEventListener(&lsquo;keypress&rsquo;, transIt, false);</p>

<p> function transIt(e) {
   // console.log(e.key);
   if (e.key !== &lsquo;\&rsquo;){ return; }
   var sel = document.getSelection().toString();
   if (sel) { window.open(&lsquo;<a href="http://dict.cn/">http://dict.cn/</a>&rsquo; + sel); }
 }</p></li>
</ol>


<p>Sometimes the popuped windows will be blocked by the browser.
Add the website into the whitelist of the blocked sites.</p>

<p>To debug the script, modify and save the script, reload the web page, and test the script.</p>

<h1>References:</h1>

<p><a href="http://hayageek.com/greasemonkey-tutorial/#install-greasemonkey">Greasemonkey Tutorial for Beginners</a></p>

<p>Get selected text:</p>

<p><a href="http://stackoverflow.com/questions/3260926/greasemonkey-addeventlistener-questions">greasemonkey: addEventListener questions</a></p>

<p><a href="http://www.w3schools.com/jsref/met_document_addeventlistener.asp">HTML DOM addEventListener() Method</a></p>

<p>Test if ctrl or alt key is pressed on clicking:</p>

<p><a href="http://stackoverflow.com/questions/6806271/javascript-check-if-ctrl-button-was-pressed">JavaScript: Check if CTRL button was pressed</a></p>

<p>search &lsquo;altKey&rsquo; in <a href="http://www.w3schools.com/jsref/dom_obj_event.asp">HTML DOM Events</a></p>

<p><a href="http://stackoverflow.com/questions/4907843/open-a-url-in-a-new-tab-using-javascript">Open a URL in a new tab using JavaScript</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Detect Website Information]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/28/112117/"/>
    <updated>2015-08-28T11:21:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/28/112117</id>
    <content type="html"><![CDATA[<p>Based on <a href="http://stackoverflow.com/questions/396739/how-do-you-determine-what-technology-a-website-is-built-on">How do you determine what technology a website is built on?</a>.</p>

<p>Website:</p>

<p><a href="http://builtwith.com/">BuiltWith</a>.</p>

<p><a href="http://w3techs.com/sites/">W3Techs</a>.</p>

<p>Browser plugins:</p>

<p><a href="https://wappalyzer.com/">Wappalyzer</a> for firefox and chrome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Underscore Highlights Problem in Vim Markdown Documents]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/19/100625/"/>
    <updated>2015-08-19T10:06:25+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/19/100625</id>
    <content type="html"><![CDATA[<h1>Install GFM plugin for vim</h1>

<p>To fix the highlight problem,
use <code>Plugin 'jtratner/vim-flavored-markdown'</code> instead of
<code>Plugin 'plasticboy/vim-markdown'</code> in .vimrc,
and run <code>vim +PluginClean +PluginInstall +qall</code>.</p>

<h1>Use Atom as Editor</h1>

<p>Install <a href="https://atom.io/">Atom</a> and modify the value of &ldquo;EDITOR&rdquo; in $DSNOTE_HOME/notes.sh to &ldquo;atom -f&rdquo;.</p>

<h2>Run in foreground</h2>

<p>dsnot works in sync manner, while the default Atom working flow is async.
So use &ldquo;atom -f&rdquo; instead of &ldquo;vim&rdquo; for the value of variable &ldquo;EDITOR&rdquo;.</p>

<h2>Chinese character support</h2>

<p>Verified on Ubuntu 14.04 LTS.</p>

<p>First install font &ldquo;文泉驿正黑&rdquo;:</p>

<pre><code>sudo aptitude install ttf-wqy-microhei
sudo aptitude install ttf-wqy-zenhei
</code></pre>

<p>Then press &ldquo;Ctrl+,&rdquo; to open settings panel:</p>

<p>Set [Settings -> Editor Settings -> Font Family] as:</p>

<pre><code>DejaVu Sans Mono, 文泉驿正黑
</code></pre>

<p>But Chinese characters can&rsquo;t be displayed in preview window.</p>

<h2>Toggle Tree View</h2>

<p>Use <code>ctrl-\</code> to toggle tree view.
<code>alt-\</code> or <code>ctrl-0</code> to focus it.</p>

<h2>Markdown editing and preview</h2>

<p>Use <code>Ctrl-Shift-M</code> to toggle preview panel.
Install some advanced packages:</p>

<pre><code>apm search vim
apm install vim-mode
apm install markdown-scroll-sync
apm install markdown-writer
apm install markdown-preview-plus
apm install markdown-format
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPStorm Notes]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/19/002231/"/>
    <updated>2015-08-19T00:22:31+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/19/002231</id>
    <content type="html"><![CDATA[<p>On Linux (Ubuntu 14.04 LTS), openjdk-7-jdk must be installed before running PhpStorm 9.0.</p>

<p>To startup PHPStorm, Alt-F2, input <code>pstorm</code>.</p>

<h1>Important Shortcuts</h1>

<p>Double Shift: search everything;</p>

<p>Shift - Ctrl - N: open file in project (fuzzy find);</p>

<p>Alt - F12: switch focus between editor and terminal (you can use fzf and autojump in terminal);</p>

<p>Shift - ESC: hide navigation bar;</p>

<p>Alt-1: Toggle and focus navigation bar;</p>

<p>ESC: focus editor;</p>

<h1>Editor</h1>

<h2>IdeaVim</h2>

<p><code>:q</code>: close file;</p>

<p><code>:vs</code>: split vertical;</p>

<p>Ref:</p>

<p><a href="https://www.jetbrains.com/phpstorm/help/keyboard-shortcuts-you-cannot-miss.html">Keyboard Shortcuts You Cannot Miss</a>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[eCommerce Framework]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/14/160315/"/>
    <updated>2015-08-14T16:03:15+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/14/160315</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/magento">Magento</a>: PHP, Zend Framework, bitnami</p>

<p>Node extension with Magento:</p>

<p><a href="https://github.com/spree/spree">spree</a>: Ruby on Rails</p>

<h1>Magento</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Share One Users Collection Between Multiple Meteor Apps]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/11/123934/"/>
    <updated>2015-08-11T12:39:34+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/11/123934</id>
    <content type="html"><![CDATA[<p>We are running a website and a backend data management system,
both are meteor web servers.</p>

<p>The backend needs fetch data from the website.
So they have to share one database, and the same &ldquo;users&rdquo; collection for both.
That means one can register on the website and login to the backend,
which is obviously unacceptable.</p>

<p>To distinguish users of the website and the backend,
I choose package <a href="https://github.com/alanning/meteor-roles">alanning/meteor-roles</a>.</p>

<p>All the backend users will have roles <code>['backend', 'admin']</code>,
while website users haven&rsquo;t.</p>

<p>In &ldquo;safe&rdquo; environment, backend has its own user registration entry.
Users registered there will be given above roles automatically.</p>

<p>Put the following codes into server side JavaScript files to achieve above goal
(based on examples/rolesWithAccountsUI on meteor-roles):</p>

<pre><code>var ROLE_NAME = 'editor';
var GROUP_NAME = 'backend';

Meteor.publish('mallData', function(){
  if (Roles.userIsInRole(this.userId, ROLE_NAME, GROUP_NAME)) {
    console.log('pass check');
    return Mall.find();
  } else {
    console.log('not pass check');
    this.stop();
    return;
  }
});

Meteor.startup(function () {
  Accounts.onCreateUser(function (options, user) {
    Roles.setRolesOnUserObj(user, ROLE_NAME, GROUP_NAME);
    if (options.profile) {
      user.profile = options.profile
    }
    return user;
  });
});

Roles.setRolesOnUserObj = function (users, roles, group) {
  if (!users) throw new Error ("Missing 'users' param")
  if (!roles) throw new Error ("Missing 'roles' param")
  if (group) {
    if ('string' !== typeof group)
      throw new Error ("Roles error: Invalid parameter 'group'. Expected 'string' type")
    if ('$' === group[0])
      throw new Error ("Roles error: groups can not start with '$'")

    // convert any periods to underscores
    group = group.replace(/\./g, '_')
  }

  // ensure arrays to simplify code
  if (!_.isArray(users)) users = [users]
  if (!_.isArray(roles)) roles = [roles]


  // remove invalid roles
  roles = _.reduce(roles, function (memo, role) {
    if (role
        &amp;&amp; 'string' === typeof role
        &amp;&amp; role.trim().length &gt; 0) {
      memo.push(role.trim())
    }
    return memo
  }, [])

  // if roles is empty, quit
  if (roles.length === 0) return

  // ensure all roles exist in 'roles' collection
  existingRoles = _.reduce(Meteor.roles.find({}).fetch(), function (memo, role) {
    memo[role.name] = true
    return memo
  }, {})
  _.each(roles, function (role) {
    if (!existingRoles[role]) {
      Roles.createRole(role)
    }
  })

  // ensure users is an array of objects
  _.each(users, function (user) {
    if ('object' !== typeof user) {
      throw new Error("Expected 'users' argument to be an object or array of objects")
    }
  })


  // Set the roles on the actual user object

  if (group) {

    // roles is a key/value dict object

    _.each(users, function (user) {
      user.roles = {}
      user.roles[group] = roles
    })

  } else {

    // roles is an array of strings

    _.each(users, function (user) {
      user.roles = roles
    })

  }

}
</code></pre>

<p>Now any user outside &lsquo;backend&rsquo; group, or without &lsquo;editor&rsquo; role, can&rsquo;t get any data from server.</p>

<p>Unfortunately Internet is unsafe at all.
So the registration entry has to be removed from the accounts-ui:</p>

<pre><code>Meteor.startup(function () {
  Accounts.config({
    forbidClientAccountCreation : true
  });
});
</code></pre>

<p>Now if you want give a website personnel rights to edit data through backend,
first he should register on the website,
then you define his role manually in mongo console:</p>

<pre><code>&gt; db.users.find({ "emails.0.address":"user@123.com" }, { "emails":1 })
&gt; db.users.update({_id: "PM36t6eRmuC9oELdu"}, { $set: { roles: {"backend": [ "editor" ]} } })
</code></pre>

<p>First find the id of the user (here is &ldquo;<a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#x75;&#115;&#x65;&#x72;&#x40;&#x31;&#x32;&#x33;&#x2e;&#99;&#111;&#x6d;">&#x75;&#x73;&#101;&#114;&#64;&#x31;&#x32;&#x33;&#46;&#99;&#x6f;&#109;</a>&rdquo;) by his email address.
Then add group and roles to the user (say the id of the user is &ldquo;PM36t6eRmuC9oELdu&rdquo;).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autopubsh and Insecure Package in Meteor]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/07/155721/"/>
    <updated>2015-08-07T15:57:21+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/07/155721</id>
    <content type="html"><![CDATA[<h1>Collection definitions in root directory</h1>

<ol>
<li><p>autopublish package exists: data can be seen and updated;</p></li>
<li><p>Remove autopublish package: data can&rsquo;t be seen;</p></li>
<li><p>Add publish method in server js file, and subscribe methods in client js file:
data can be seen and updated;</p>

<pre><code> # in server:
 Meteor.publish('mallData', function(){
   return Mall.find();
 });

 # in client:
 Meteor.subscribe('mallData');
</code></pre></li>
<li><p>Remove insecure package: data can be seen, but can&rsquo;t be updated;</p></li>
<li><p>Add an allow rule in js file in root directory: only &ldquo;status&rdquo; field can be updated.</p>

<pre><code> Mall.allow({
   update: function(userId, doc, fieldNames, modifier){
     if ((fieldNames.length === 1) &amp;&amp;
         (fieldNames[0] === 'status')){
       return true;
     }
   }
 });
</code></pre>

<p> Meanwhile inserting and remvoing operations will be denied by the server.</p></li>
</ol>


<p>Ref:</p>

<p><a href="http://joshowens.me/meteor-security-101/">METEOR SECURITY 101</a> by Josh Owens.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor实施案例]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/05/125922/"/>
    <updated>2015-08-05T12:59:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/05/125922</id>
    <content type="html"><![CDATA[<h1>国外</h1>

<p><a href="http://blonk.co/">blonk</a>: 找工作，移动APP，iOS, Android, 双方在感兴趣的对方上点Yes，如果匹配成功开始聊天；</p>

<p><a href="https://respond.ly/">respond.ly</a>: 基于Twitter的客户服务和协作平台；</p>

<p><a href="http://www.flowkey.com/en">Flowkey</a>: 教育类，钢琴在线教学，web, iOS, Android，音频对比，反馈建议，用户量：50,000+</p>

<p><a href="http://versoapp.com/">verso</a>: 教育类，移动APP，iOS, Android，教师添加视频，学生写反馈，100多个国家的几千所学校；</p>

<p><a href="https://beta.workpop.com/">Workpop</a>: 找/应聘小时工，Web App;</p>

<p><a href="http://www.classcraft.com/">Classcraft</a>: 教学类应用，平台：Web, iOS，学习变为角色扮演，老师定义学生角色，获取经验值；</p>

<p><a href="https://lookback.io/">Lookback</a>: 移动应用用户体验反馈软件，原理：屏幕录制（记录手指位置和拖动），然后发送；平台：Web, iOS, Mac, Android；</p>

<p><a href="http://www.tuniliv.com/">Tuniliv</a>: 突尼斯货运与物流系统；</p>

<p><a href="http://www.telescopeapp.org/">Telescope</a>: 软件平台，论坛模板；</p>

<h1>国内</h1>

<p><a href="http://newfairs.com">牛展网</a>: 会展服务；</p>

<p><a href="http://maodou.io/">毛豆网</a>: 在线教育/外包；</p>

<h1>生态系统</h1>

<p>[node.js]</p>

<p>[mongodb]</p>

<p>[bootstrap]</p>

<p>[meteoric]</p>

<h1>参考资料</h1>

<p><a href="http://www.quora.com/What-are-the-larger-examples-of-Meteor">What are the larger examples of Meteor?</a></p>

<p><a href="http://www.jianshu.com/p/ps8C8N">关于Meteor的5个误解</a></p>

<p><a href="https://www.meteor.com/case-studies/build-apps-with-meteor">https://www.meteor.com/case-studies/build-apps-with-meteor</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor Development Collaboration]]></title>
    <link href="http://leetschau.github.io/blog/2015/08/02/113417/"/>
    <updated>2015-08-02T11:34:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/08/02/113417</id>
    <content type="html"><![CDATA[<p>Meteor developer Tom and Bob are in different location.
Tom is the main coder and Bob is the mentor.
Their remote collaboration mode is:</p>

<ul>
<li><p>Voice talk through Moxtra/QQ/Skype;</p></li>
<li><p>Code and browser sharing through a VPS on Internet;</p></li>
</ul>


<h1>VPS Configuration</h1>

<p>The IP address of the VPS is 100.101.102.103.
Add a user &ldquo;nf&rdquo; as the SSH forwarding user:</p>

<pre><code>useradd -m nf
passwd nf
</code></pre>

<p>To allow remote port forwarding to bind to non-loopback addresses,
add <code>GatewayPorts yes</code> into /etc/ssh/sshd_config, and <code>service ssh reload</code>.
Without this, the listening port on VPS is bind to &ldquo;127.0.0.1&rdquo; instead of &ldquo;0.0.0.0&rdquo;.
You can find out it with <code>netstat -lnput|grep 3000</code>, when the forwarding port is 3000.</p>

<h1>Code editor sharing</h1>

<p>Tom install tmux on his Linux OS.
And start up a tmux session as the develop environment:</p>

<pre><code>tmux new -s myWebsite
</code></pre>

<p>To make Bob ssh to his laptop, Tom need run the following command on his laptop:</p>

<pre><code>ssh -g -R 10022:localhost:22 nf@100.101.102.103
</code></pre>

<p>where -g means &ldquo;Allows remote hosts to connect to local forwarded ports&rdquo;,
-R means a &ldquo;Remote&rdquo; port forwarding is created with this ssh connection
(which means when this ssh connection closed, the port forwarding will be dropped, too).
In &ldquo;10022:localhost:22&rdquo;, the first part is the port number on remote host,
the second and third is the hostname and port number of local machine.</p>

<p>So the whole command means:
Tom ssh to server 100.101.102.103 as user nf,
while creating a port forwarding.
So all connect to 10022 on remote host, will be forwarded to Tom&rsquo;s laptop on port 22.</p>

<p>After login, the forwarding tunnel is created.
On VPS, verify port 3000 is bind to public interface instead of loopback:</p>

<pre><code>netstat -lnput|grep 3000
</code></pre>

<p>Bob need run the following command to join Tom:</p>

<pre><code>ssh -p 10022 tom@100.101.102.103
tmux attch -t myWebsite
</code></pre>

<p>Notice that the user name is &ldquo;tom&rdquo; instead of &ldquo;nf&rdquo; in above command.
And the password is tom&rsquo;s on his laptop, instead of nf&rsquo;s on the VPS.</p>

<h1>Web serer sharing</h1>

<p>Tom run this command to create the tunnel:</p>

<pre><code>ssh -g -R 3000:localhost:3000 nf@100.101.102.103
</code></pre>

<p>Bob can visit the web server with url &ldquo;100.101.102.103:3000&rdquo;.</p>

<p>Ref:</p>

<p><a href="http://serverfault.com/questions/379344/selecting-interface-for-ssh-port-forwarding">http://serverfault.com/questions/379344/selecting-interface-for-ssh-port-forwarding</a></p>

<p><a href="https://juliansimioni.com/blog/howto-access-a-linux-machine-behind-a-home-router-with-ssh-tunnels/">https://juliansimioni.com/blog/howto-access-a-linux-machine-behind-a-home-router-with-ssh-tunnels/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chinese Characters Can't Be Displayed Correctly in Git Log]]></title>
    <link href="http://leetschau.github.io/blog/2015/07/31/160627/"/>
    <updated>2015-07-31T16:06:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/07/31/160627</id>
    <content type="html"><![CDATA[<p>On Ubuntu 14.04, <code>cat</code> can display Chinese characters correctly.
But in <code>vi</code> and <code>less</code> Chinese characters can&rsquo;t display correctly.</p>

<p>Solution:</p>

<p>Run <code>export LC_ALL=en_US.UTF-8</code> before <code>git log</code>.</p>

<p>If it works, add this line into /etc/environment.</p>

<p>If it doesn&rsquo;t work, run <code>export LANG=en_US.UTF-8</code>.</p>

<p>If it doesn&rsquo;t work, run <code>apt-get install language-pack-en-base</code>.</p>

<p>In vim, run <code>set enc=utf-8</code>.</p>

<p>Ref:</p>

<p><a href="http://askubuntu.com/questions/162391/how-do-i-fix-my-locale-issue">http://askubuntu.com/questions/162391/how-do-i-fix-my-locale-issue</a></p>

<p><a href="http://stackoverflow.com/questions/5166652/how-to-view-utf-8-characters-in-vim-or-gvim">http://stackoverflow.com/questions/5166652/how-to-view-utf-8-characters-in-vim-or-gvim</a></p>
]]></content>
  </entry>
  
</feed>
