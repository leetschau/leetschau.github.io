<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-01-04T11:42:13+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[将中文字符串转换为拼音首字母串]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/31/101055/"/>
    <updated>2014-12-31T10:10:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/31/101055</id>
    <content type="html"><![CDATA[<p>下面的Python脚本将任意汉字和英文、数字混合字符串转换为拼音首字母组成的字符串，
注意：有些汉字不能查找到首字母，例如&#8221;深圳东莞&#8221;的&#8221;圳&#8221;和&#8221;莞&#8221;两个字，原因不明。
需要在vi中用&#8221;/\&lt;[A-Z]>搜索这种情况。</p>

<p>实现过程是：首先尝试用unicode, utf8和gbk解码字符串，然后用GBK编码字符串，利用GBK汉字是按拼音顺序编码的原理查出其首字母。</p>

<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-

def get_word_initial(inp):
    if isinstance(inp, unicode):
        unicode_str = inp
    else:
        try:
            unicode_str = inp.decode('utf8')
        except:
            try:
                unicode_str = inp.decode('gbk')
            except:
                print 'unknown coding'
                return

    init_list = [get_char_initial(i) for i in unicode_str]
    return "".join(init_list)

def get_char_initial(unicode1):
    gbkStr = unicode1.encode('gbk')
    try:
        ord(gbkStr)
        return gbkStr
    except:
        asc = ord(gbkStr[0]) * 256 + ord(gbkStr[1]) - 65536
        if asc &gt;= -20319 and asc &lt;= -20284:
            return 'A'
        if asc &gt;= -20283 and asc &lt;= -19776:
            return 'B'
        if asc &gt;= -19775 and asc &lt;= -19219:
            return 'C'
        if asc &gt;= -19218 and asc &lt;= -18711:
            return 'D'
        if asc &gt;= -18710 and asc &lt;= -18527:
            return 'E'
        if asc &gt;= -18526 and asc &lt;= -18240:
            return 'F'
        if asc &gt;= -18239 and asc &lt;= -17923:
            return 'G'
        if asc &gt;= -17922 and asc &lt;= -17418:
            return 'H'
        if asc &gt;= -17417 and asc &lt;= -16475:
            return 'J'
        if asc &gt;= -16474 and asc &lt;= -16213:
            return 'K'
        if asc &gt;= -16212 and asc &lt;= -15641:
            return 'L'
        if asc &gt;= -15640 and asc &lt;= -15166:
            return 'M'
        if asc &gt;= -15165 and asc &lt;= -14923:
            return 'N'
        if asc &gt;= -14922 and asc &lt;= -14915:
            return 'O'
        if asc &gt;= -14914 and asc &lt;= -14631:
            return 'P'
        if asc &gt;= -14630 and asc &lt;= -14150:
            return 'Q'
        if asc &gt;= -14149 and asc &lt;= -14091:
            return 'R'
        if asc &gt;= -14090 and asc &lt;= -13119:
            return 'S'
        if asc &gt;= -13118 and asc &lt;= -12839:
            return 'T'
        if asc &gt;= -12838 and asc &lt;= -12557:
            return 'W'
        if asc &gt;= -12556 and asc &lt;= -11848:
            return 'X'
        if asc &gt;= -11847 and asc &lt;= -11056:
            return 'Y'
        if asc &gt;= -11055 and asc &lt;= -10247:
            return 'Z'
        return ''

if __name__ == "__main__":
    str_input='广州火车站A2c'
    print(get_word_initial(str_input))
</code></pre>

<p>下面是一个完整的使用场景，利用上面的代码为小区的地理位置表添加ID字段。
首先将上面的代码保存在chnInit.py中，然后相同目录下创建一个addID.py文件：</p>

<pre><code>import chnInit
import sys

target = sys.argv[1]
inclID = sys.argv[2]
with open(target, 'r') as src:
    with open(inclID, 'w') as dst:
        for content in src:
            line = content.strip()
            cgi = line.split(' ,')[0]
            node = line.split(' ,')[1].split(' ')[0]
            city = line.split(' ,')[1].split(' ')[1]
            nodeID = chnInit.get_word_initial(node)
            cityID = chnInit.get_word_initial(city)
            dst.write(cgi + ' ,' + city + ' ' + cityID + ' ' + node + ' ' + nodeID + '\n')
</code></pre>

<p>相同目录下保存输入文件input.csv，然后运行脚本：</p>

<pre><code>$ head input.csv
460010973309433 ,白云国际机场 广州
...

$ python addID.py input.csv loc_map.csv
$ head loc_map.csv
460010973309433 ,广州 GZ 白云国际机场 BYGJJC
...
</code></pre>

<p>根据Python文档7.2.1节：&#8221;Methods of File Objects&#8221;中的描述：</p>

<blockquote><p>For reading lines from a file, you can loop over the file object.
This is memory efficient, fast, and leads to simple code:</p></blockquote>

<pre><code>with open(target, 'r') as f:
    for line in f:
        ...
</code></pre>

<p>这种方式比较节省内存，适于处理大文件。
当处理小文件时，可以用下面的方法将完整内容保存在一个变量中：</p>

<pre><code>with open('workfile', 'r') as f:
    read_data = f.read()
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Frequent Used Commands in Mongodb Shell]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/29/193156/"/>
    <updated>2014-12-29T19:31:56+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/29/193156</id>
    <content type="html"><![CDATA[<p>The foloowing codes demonstrate the creation &copy;, query &reg;, update (U) and delete (D) operations on mongodb collections.</p>

<p>It also shows how to rename collections and keys of documents.</p>

<pre><code>$ mongo
db.fairs.insert({'name': 'bikeShow', 'time': '2014.12.24', 'location': 'Beijing', 'products': ['bike', 'car', 'truck']})
db.fairs.insert({'name': 'clothShow', 'time': '2014.2.14', 'location': 'Shanghai', 'products': ['silk', 'wood', 'paper']})
db.fairs.insert({'name': 'MyFruits', 'time': '2011.4.18', 'location': 'Guangzhou', 'products': ['berry', 'apple', 'banana']})

db.newfairs.find({}, {name: 1})
db.newfairs.find({}, {'name.chn': 1})

db.fairs.renameCollection('newfairs')

db.newfairs.update({}, {$rename: {'time': 'date'} }, {multi: true} )
db.newfairs.update({}, {$rename: {'name': 'names'} }, {multi: true} )
db.newfairs.update({}, {$rename: {'names': 'name.chn'} }, {multi: true} )
db.newfairs.update({}, {$unset: {'date': ""}}, {multi: true})
db.newfairs.remove({})
db.newfairs.drop()
exit
</code></pre>

<p>You can&rsquo;t use <code>{$rename: {'name': 'name.chn'}}</code> directly for &ldquo;$rename must not be on the same path&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遍历Javascript对象属性的方法]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/29/151419/"/>
    <updated>2014-12-29T15:14:19+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/29/151419</id>
    <content type="html"><![CDATA[<p>启动node.js命令行，创建一个最简单的对象，然后遍历其属性：</p>

<pre><code>$ node
&gt; var myobj = {k1: "p1", k2: 'p2'}

&gt; for (var key in myobj) {
... console.log(key);
... console.log(myobj.key);
... console.log(myobj[key]);
... }
k1
undefined
p1
k2
undefined
p2
&gt; myobj.k1
'p1'

&gt; var ak = 'k4'
undefined
&gt; myobj.ak = 'p4'
'p4'
&gt; myobj
{ k1: 'p1',
  k2: 'p2',
  ak: 'p4' }
&gt; myobj[ak] = 'p4'
'p4'
&gt; myobj
{ k1: 'p1',
  k2: 'p2',
  ak: 'p4',
  k4: 'p4' }

&gt; myobj[nk] = 'p5'
ReferenceError: nk is not defined
    at repl:1:8
    at REPLServer.self.eval (repl.js:110:21)
    ...
&gt; myobj['nk'] = 'p5'
'p5'
&gt; myobj
{ k1: 'p1',
  k2: 'p2',
  ak: 'p4',
  k4: 'p4',
  nk: 'p5' }
</code></pre>

<p>点操作符 (myobj.key) 和中括号 (myobj[key]) 都能用于获取和添加对象属性，
二者的区别在于，点操作符后面的属性名称按照字面量处理，
中括号中的属性名称按照变量名处理。</p>

<p>如果想通过变量名读写对象属性，必须用中括号操作符，
如果想不写引号直接引用属性名称，必须用点操作符。</p>

<p>搜索&#8221;javascript object dot square bracket&#8221;查找相关文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[清理/usr/local/bin目录]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/29/112803/"/>
    <updated>2014-12-29T11:28:03+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/29/112803</id>
    <content type="html"><![CDATA[<p>为一个用户增加可执行文件通常有两种方法，
第一种是将可执行文件所在的目录添加到命令行自启动文件中（例如~/.profile，~/.bashrc，~/.zshenv等），
这种方法的优点是无需root权限，绿色无污染，
缺点是只对命令行有效，只对一个用户有效，
并且不适用于从全局启动目录（如i3wm的dmenu命令行）中启动图形界面程序；</p>

<p>另一种是把可执行文件添加到/usr/local/bin目录中，这个目录一般用来存放用户自定义的全局可执行命令，
优缺点与上面修改自启动文件的方式相反；</p>

<p>一段时间后/usr/local/bin下可能会有很多文件，清理的方法根据来源不同而不同：
对于链接，直接删除；
对非链接文件，用<code>dpkg -l</code>确认是否为apt-get或者dpkg安装的，然后用<code>apt-get remove</code>删除；
如果不是上面的情况，用<code>pip list|grep &lt;filename&gt;</code>检查是否用pip安装的，若是，用<code>pip uninstall</code>删除。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Java Program in Java Program]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/27/103944/"/>
    <updated>2014-12-27T10:39:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/27/103944</id>
    <content type="html"><![CDATA[<p>Usually we can run shell command in Java program with <code>Runtime.getRuntime.exec(shellName);</code>.
But if the shell command is <code>java -cp "lib/*" MainClass</code>, you can&rsquo;t get any output from &ldquo;line = reader.readLine()&rdquo;.</p>

<p>You have to use ProcessBuilder instead of Runtime.exec to execute these commands.
Maybe the reason is the double quotes after &ldquo;-cp&rdquo; option is mandatory, which are conflict with double quotes in parameters of Runtime.exec.</p>

<pre><code>public static final String USER_PLUGIN_PATH = "plugins";
public static final String USER_CLASSPATH = USER_PLUGIN_PATH + "/lib/*";
public void runJavaProgram(String mainClass) {
  logger.info("Running java program in class: " + mainClass);
  try {
    ProcessBuilder pb = new ProcessBuilder("java", "-cp", USER_CLASSPATH, mainClass);
    pb.redirectErrorStream(true);
    Process process = pb.start();
    // Process process = Runtime.getRuntime().exec("java -cp " + USER_CLASSPATH + mainClass);
    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
    String line = "";
    String output = "";
    while ((line = reader.readLine()) != null) {
      logger.debug(line);
      output += line + System.getProperty("line.separator");
    }
    process.waitFor();
  } catch (IOException e) {
    e.printStackTrace();
  } catch (InterruptedException e) {
    e.printStackTrace();
  }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux System Memory Probe]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/25/100018/"/>
    <updated>2014-12-25T10:00:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/25/100018</id>
    <content type="html"><![CDATA[<p><a href="http://www.selenic.com/smem/">smem</a>  is a tool that can give numerous reports on memory usage on Linux systems.
Install it with <code>sudo apt-get install smem</code>.</p>

<p>List all process&rsquo;s memory consumption of a user with smem.</p>

<h1>Using smem</h1>

<p>Copy from <a href="http://www.selenic.com/smem/:">http://www.selenic.com/smem/:</a></p>

<ul>
<li><p>Show basic process information: <code>smem</code></p></li>
<li><p>Show library-oriented view: <code>smem -m</code></p></li>
<li><p>Show user-oriented view: <code>smem -u</code></p></li>
<li><p>Show system view: <code>smem -R 4G -K /path/to/vmlinux -w</code></p></li>
<li><p>Show totals and percentages: <code>smem -t -p</code></p></li>
<li><p>Show different columns: <code>smem -c "name user pss"</code></p></li>
<li><p>Sort by reverse RSS: <code>smem -s rss -r</code></p></li>
<li><p>Show processes filtered by mapping: <code>smem -M libxml</code></p></li>
<li><p>Show mappings filtered by process: <code>smem -m -P [e]volution</code></p></li>
<li><p>Read data from capture tarball: <code>smem --source capture.tar.gz</code></p></li>
<li><p>Show a bar chart labeled by pid: <code>smem --bar pid -c "pss uss"</code></p></li>
<li><p>Show a pie chart of RSS labeled by name: <code>smem --pie name -s rss</code></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongodb Notes]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/25/091714/"/>
    <updated>2014-12-25T09:17:14+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/25/091714</id>
    <content type="html"><![CDATA[<h1>Start mongodb server as a common user</h1>

<p>The default data path of Mongodb is /data/db, which you have to create as root.</p>

<p>If you just want play around mongodb with some test data, you can create a temporary folder as data directory:</p>

<pre><code>$ mkdir ~/docs/tmp/mongodb-repo
$ cd ~/apps/mongodb-linux-x86_64-2.6.5
$ bin/mongod --dbpath ~/docs/tmp/mongodb-repo
// in a new shell
$ ~/apps/mongodb-linux-x86_64-2.6.5/bin/mongo
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS服务器根目录空间被占满的解决方法]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/24/174727/"/>
    <updated>2014-12-24T17:47:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/24/174727</id>
    <content type="html"><![CDATA[<p>60和61服务器根目录(/)50G空间全被占满，用<code>du -shx /*</code>查看，非挂载目录的空间加起来远达不到50GB，
查了一下，怀疑原因是原来挂在/mnt下的data1和data2目录下的两块大容量磁盘由于某种原因没有挂载上，
但cloudera manager管理的hadoop和hdfs系统仍然在向这两个目录下存放大文件，导致空间被耗光，
验证方法是用<code>mount</code>命令检查/mnt下是否有挂载，如果有，将它们卸载掉，看/mnt下是否还有文件，
有的话删除掉就好了。</p>

<p>如果不是这个原因，还可能是被删除的大文件没有释放，用<code>lsof|grep "deleted"</code>检查；</p>

<p>参考：</p>

<p><a href="http://serverfault.com/questions/275206/disk-full-du-tells-different-how-to-further-investigate">Disk full, du tells different. How to further investigate?</a></p>

<p><a href="http://serverfault.com/questions/57098/du-vs-df-difference">du vs. df difference</a></p>

<p><a href="http://serverfault.com/questions/62119/how-do-i-find-out-what-is-using-up-all-the-space-on-my-partition">How do I find out what is using up all the space on my / partition?</a></p>

<p><a href="http://askubuntu.com/questions/266825/what-do-i-do-when-my-root-filesystem-is-full">What do I do when my root filesystem is full?</a></p>

<p><a href="http://serverfault.com/questions/513136/centos-dev-root-is-getting-full-cannot-find-disk-space-usage">Centos , /dev/root is getting full. Cannot find disk space usage</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML笔记]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/24/152921/"/>
    <updated>2014-12-24T15:29:21+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/24/152921</id>
    <content type="html"><![CDATA[<h1>HTML 布局原理</h1>

<p>HTML元素分为块级元素(block element)和行内元素(inline element)，
前者独占一行，也就是元素的头和尾会被自动加上换行符，如<div>, <h1>, <p>, <ul>, <table>等；</p>

<p>后者不会独占一行，如<span>, <b>, <td>, <a>, <img>等；</p>

<p>CSS布局原理：<a href="http://www.w3schools.com/css/css_boxmodel.asp">CSS Box Model</a>.</p>

<p>一个CSS box从外向内分为4部分：margin, border, padding, content.
除了最内部的内容部分(content)，其他3部分都可以设置宽度，
其中margin是块级元素边界(border)之外的透明区域；
border是边界线，默认宽度为0，即不可见；
padding是内容(content)到边界之间的透明区域；</p>

<p>将下面的代码保存在一个html文件中，可以看到各部分的作用：</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;style&gt;
    div {
        background-color: lightgrey;
        width: 300px;
        padding: 15px;
        border: 5px solid navy;
        margin: 25px;
    }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.
    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi.
    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt.&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<h1>HTML5</h1>

<p>测试浏览器对HTML5的支持度：用待测浏览器打开<a href="https://html5test.com/">HTML5test</a>，该网页会列出浏览器对HTML5每一项特性支持与否。</p>

<h2>Semantic Element</h2>

<p>Ref: <a href="http://www.w3schools.com/html/html5_semantic_elements.asp">HTML5 Semantic Elements</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Executable Jar in Command Line]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/23/180824/"/>
    <updated>2014-12-23T18:08:24+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/23/180824</id>
    <content type="html"><![CDATA[<p>Build a executable jar file using external jars:</p>

<pre><code>$ find .
./Mod1.java
./mf
./lib
./lib/commons-io-2.4.jar

$ cat Mod1.java
import org.apache.commons.io.FileUtils;
import java.io.File;

public class Mod1 {
  public static void main (String[] args) {
    String[] scriptExt = new String[] { "scala" };
    System.out.println("List all scala files: " + FileUtils.listFiles(new File("/home/chad/docs/tmp"), scriptExt, false));
  }
}

$ cat mf
Class-Path: lib/commons-io-2.4.jar
Main-Class: Mod1
$ javac -cp lib/* Mod1.java
$ jar cfm pkg.jar mf Mod1.class
$ java -jar pkg.jar
List all scala files: [/home/chad/docs/tmp/sf2.scala, /home/chad/docs/tmp/lookup.scala, /home/chad/docs/tmp/spark-filter.scala, /home/chad/docs/tmp/hw.scala, /home/chad/docs/tmp/newDel.scala, /home/chad/docs/tmp/scalaTime.scala, /home/chad/docs/tmp/sf3.scala]
</code></pre>

<p>Note that classpath wildcard can&rsquo;t be used in manifest file (here is mf), which means &ldquo;Class-Path: lib/*&rdquo; doesn&rsquo;t work.
See <a href="http://www.ibm.com/developerworks/library/j-5things6/">5 things you didn&rsquo;t know about &hellip; JARs</a> for explanations.</p>

<p>The &ldquo;-cp&rdquo; option or &ldquo;CLASSPATH=&hellip;&rdquo; is invalid in <code>java -jar xxx.jar</code>.
So if you don&rsquo;t want to create manifest file by hand, run java program with <code>java -cp ... MainClass</code>:</p>

<pre><code>$ tree
.
├── com
│   └── boco
│       └── example
│           └── Example.java
└── lib
    └── commons-io-2.4.jar
4 directories, 2 files

$ cat com/boco/example/Example.java
package com.boco.example;

import org.apache.commons.io.FileUtils;
import java.io.File;
import java.util.Collection;
import org.apache.commons.io.filefilter.DirectoryFileFilter;
import org.apache.commons.io.filefilter.TrueFileFilter;

public class Example {
  public static void main (String[] args) {
    Collection&lt;File&gt; found = FileUtils.listFiles(new File("."), TrueFileFilter.INSTANCE, DirectoryFileFilter.DIRECTORY);
    System.out.println("List files with apache-commons.FileUtils:");
    for (File f : found) {
      System.out.println(f);
    }
    System.out.println("--- OVER ---");
  }
}
$ javac -cp lib/commons-io-2.4.jar com/boco/example/Example.java
$ jar cf example.jar com
$ mv example.jar lib
$ tree
.
├── com
│   └── boco
│       └── example
│           ├── Example.class
│           └── Example.java
└── lib
    ├── commons-io-2.4.jar
    └── example.jar
4 directories, 4 files
$ java -cp "lib/*" com.boco.example.Example
List files with apache-commons.FileUtils:
./com/boco/example/Example.java
./com/boco/example/Example.class
./lib/example.jar
./lib/commons-io-2.4.jar
--- OVER ---
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy Web Server on Linode]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/23/084146/"/>
    <updated>2014-12-23T08:41:46+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/23/084146</id>
    <content type="html"><![CDATA[<h1>Setup Virtual Host</h1>

<p>Buy a Linode instance on <a href="https://www.linode.com/">linode</a>. Note its IP address on the home page in your user account.
Install a Linux system and <a href="https://www.linode.com/docs/security/securing-your-server/">secure it</a>.</p>

<p>Ref: <a href="https://www.linode.com/docs/getting-started">Getting Started</a> for instructions.</p>

<h1>Connect domain name and IP address</h1>

<p>Here we link multiple Domain names to the same IP address.
Then direct different domain requests to its corresponding port using nginx.</p>

<p>First register (purchase) a domain name, if you haven’t already.
Here I used niufairs.com and &ldquo;niufairs.cn purchased on <a href="http://www.net.cn/">net.cn</a>.</p>

<p>Set IP address in &ldquo;进入会员中心 -> 我的域名 -> niufairs.com -> 域名解析 -> 把域名指向我的网站 -> 新手设置引导 -> 把域名指向我的网站-添加IP地址&rdquo;,
add your Linode instance IP address as &ldquo;A&rdquo; record,
Then wait up to 24 hours for the changes to take effect.
I waited about 30 minutes to take effect.</p>

<p>Next set your domain name to use Linode’s name servers (&ldquo;ns1.linode.com&rdquo; to &ldquo;ns5.linode.com&rdquo;)
in &ldquo;我的域名 -> niufairs.com -> 基本管理 -> DNS修改/创建 -> DNS服务器 -> 修改域名DNS&rdquo;.</p>

<p>On Linode, come to &ldquo;DNS Manager&rdquo; in Linode dashboard, click &ldquo;Add a domain zone&rdquo;.
Set &ldquo;Domain&rdquo; as your purchased domain name, for example, &ldquo;niufairs.com&rdquo;.
Set &ldquo;SOA Email&rdquo; the email address of the administrator, for example, &ldquo;<a href="&#109;&#x61;&#x69;&#x6c;&#116;&#111;&#58;&#x6c;&#x63;&#x40;&#49;&#50;&#54;&#46;&#x63;&#x6f;&#109;">&#x6c;&#99;&#64;&#x31;&#50;&#54;&#x2e;&#99;&#x6f;&#109;</a>&rdquo;.
Then click &ldquo;Add a Master Zone&rdquo;.</p>

<h2>Setting Reverse DNS</h2>

<p>On linode instance dashboard -> Remote access -> Reverse DNS, enter &ldquo;niufairs.com&rdquo;, and press &ldquo;Look up&rdquo;.</p>

<p>Ref: <a href="https://www.linode.com/docs/websites/hosting-a-website">Hosting a website</a>.</p>

<h1>Config Relationship betwwen domain and port</h1>

<p>Fist install nginx.</p>

<p>Edit /etc/nginx/nginx.conf as follows:</p>

<pre><code>events {
  worker_connections  1024;
}

http {
  server {
    server_name niufairs.cn;

    location / {
      proxy_pass http://localhost:3000/;
    }
  }

  server {
    server_name niufairs.com;

    location / {
      proxy_pass http://localhost:4000/;
    }
  }

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;
}
</code></pre>

<p>Test if this conf is right: <code>nginx -t</code>;</p>

<p>If test ok, reload conf: <code>nginx -s reload</code>;</p>

<p>Now start 2 meteor app on port 3000 and 4000, and you can use niufairs.cn and niufairs.com to visit them respectively.</p>

<p>Ref: <a href="http://stackoverflow.com/questions/15678224/nginx-proxy-several-domains-to-different-ports">Nginx proxy several domains to different ports</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS and LESS Notes]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/21/110312/"/>
    <updated>2014-12-21T11:03:12+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/21/110312</id>
    <content type="html"><![CDATA[<p>CSS selector rules: <a href="http://www.w3schools.com/cssref/css_selectors.asp">CSS Selectors</a></p>

<p>CSS Combination rules: <a href="http://www.w3schools.com/css/css_combinators.asp">CSS Combinators</a></p>

<p>Addition to the above rules, you can use &ldquo;element.class&rdquo; to specify a specified elment.
For example, &ldquo;p.bluecolor&rdquo; will select &ldquo;all p elements with class bluecolor&rdquo;.
A <div class="bluecolor"> will not be included.
See <a href="http://css.maxdesign.com.au/selectutorial/selectors_class.htm">Class selectors</a> for details.</p>

<p>LESS introduction: <a href="http://www.elated.com/articles/less-is-more-make-your-css-coding-easier-with-less/">LESS Is More: Make Your CSS Coding Easier with LESS</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor MongoDB Notes]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/20/230618/"/>
    <updated>2014-12-20T23:06:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/20/230618</id>
    <content type="html"><![CDATA[<ul>
<li><p>Connect to a mongodb of a Meteor app: run <code>meteor</code> at the project root. Start another shell, go to this folder, and run <code>meteor mongo</code>;</p></li>
<li><p>List all available commands: <code>help</code>;</p></li>
<li><p>List DB operation methods: <code>db.help()</code>;</p></li>
<li><p>List all existing collection names: <code>show collections</code>;</p></li>
<li><p>List all available commands of a collection: <code>db.&lt;collection-name&gt;.help()</code>;</p></li>
<li><p>Show collection information: <code>db.&lt;collection-name&gt;.stats()</code>;</p></li>
<li><p>Print all &ldquo;name&rdquo; field of collection &ldquo;fairs&rdquo;: <code>db.fairs.find({}, {name_chn: 1})</code>;</p></li>
<li><p>Print all fields except &ldquo;name_chn&rdquo; of collection &ldquo;fairs&rdquo;: <code>db.fairs.find({}, {products: 0})</code>;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor Resources]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/17/114238/"/>
    <updated>2014-12-17T11:42:38+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/17/114238</id>
    <content type="html"><![CDATA[<h1>Learning Resources</h1>

<h2>Published Books</h2>

<ul>
<li><p>Instant Meteor JavaScript Framework Starter by Gabriel Manricks of PACKT, 2013;</p></li>
<li><p>Getting Started with Meteor.js JavaScript Framework by Isaac Strack of PACKT, 2012;</p></li>
</ul>


<h2>Upcoming Books</h2>

<ul>
<li><p>Beginning Meteor by Aaron Gray of APress, march 25, 2015;</p></li>
<li><p>Building Single-page Web Apps with Meteor by Fabian Vogelsteller of PACKT, december 26, 2014;</p></li>
</ul>


<h2>Free Resources</h2>

<p><a href="https://bulletproofmeteor.com/">Bulletproof Meteor</a></p>

<p><a href="http://themeteorchef.com/">The Meteor Chef</a></p>

<p><a href="http://eventedmind.com/">Evented Mind</a></p>

<p><a href="http://meteortips.com/">Meteor Tips</a></p>

<p><a href="https://www.udemy.com/build-your-first-real-time-web-application-with-meteorjs">Build Your First Real-Time Web Application with MeteorJS</a></p>

<p><a href="http://meteorjs.club/">Josh Owen&rsquo;s Meteor Club</a></p>

<h2>Paid Resources</h2>

<p><a href="https://www.discovermeteor.com/">Discover Meteor</a></p>

<p>Ref: <a href="http://www.sitepoint.com/9-ways-meteor-1-0-will-take-world/">9 Ways Meteor 1.0 Will Take You Out of This World</a></p>

<h1>For Meteor Jobs</h1>

<p><a href="http://www.weworkmeteor.com/">We Work Meteor</a></p>

<h1>Test Tools</h1>

<p><a href="https://kadira.io/">Kadira</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala的模式匹配]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/16/170917/"/>
    <updated>2014-12-16T17:09:17+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/16/170917</id>
    <content type="html"><![CDATA[<p>下面是一个RDD，每一个元素是一个Array，这个Array由几个tuple组成，
现在需要将其中第二个元素是13的tuple（比如(-36522769,13)）的一个元素后面追加字符串&#8221;.000&#8221;，其余不变，
实现方法如下：</p>

<pre><code>val data = RDD[Array[(String, Int)]] = RDD(
        Array((-36522769,13), (8014,14), (2014-09-19 00:10:47,17), (3,18), (FF-693960651,134)),
        Array((-905910021.0000000000,13), (200,14), (2014-09-19 00:02:11,17), (3,18), (FF--112226702,134)),
        Array((-2033866158.0000000000,13), (200,14), (2014-09-19 00:07:12,17), (3,18), (FF--112226702,134)),
        Array((1712341836.0000000000,13), (200,14), (2014-09-19 00:07:06,17), (3,18), (FF--112226702,134)),
        Array((-896432680.0000000000,13), (8014,14), (2014-09-19 00:12:17,17), (3,18), (FF-693960651,134)),
        Array((-1205034451.0000000000,13), (200,14), (2014-09-19 00:07:21,17), (3,18), (FF--112226702,134)),
        Array((-2117505875.0000000000,13), (15089,14), (2014-09-19 00:41:47,17), (2,18), (FF-1139491304,134))) 

val res = data.map(x =&gt; x.map { case (y,13) =&gt; (y + ".000", 13)
                                case z =&gt; z
                              })
</code></pre>

<p>如果把13变为一个变量，比如<code>val BAD_NUM = 13</code>, 这时直接改写为<code>case (y, BAD_NUM) =&gt; ...</code>，将出现错误，
因为解析器将BAD_NUM视为一个自由变量，而不是外部等于13的那个变量，解决方法是用反引号把BAD_NUM扩起来，写为：</p>

<pre><code>case (y, `BAD_NUM`) =&gt; (y + ".000", BAD_NUM)
</code></pre>

<p>推荐文章：</p>

<p><a href="http://kerflyn.wordpress.com/2011/02/14/playing-with-scalas-pattern-matching/">Playing with Scala’s pattern matching</a>;</p>

<p><a href="http://docs.scala-lang.org/tutorials/tour/pattern-matching.html">Pattern Matching in Scala Documenation</a></p>

<p><a href="http://docs.scala-lang.org/cheatsheets/">Pattern matching section in Scala cheatsheet</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[网站配色技术]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/15/175800/"/>
    <updated>2014-12-15T17:58:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/15/175800</id>
    <content type="html"><![CDATA[<p>颜色有多种表示方式，印刷业常用的CMYK方法是4种颜料的组合值表示一种颜色，
RGB常用于显示器，用3原色的值表示一种颜色。</p>

<p>HSL是用色调hue，纯度Saturation（也叫饱和度）和亮度lightness组合表示一种颜色，
其中色调是平时所说的颜色；
纯度可以理解为颜料的浓度，最小值是灰色（没有颜料），最大值是最纯净的颜色（比如完全的红色，完全的绿色等）；
亮度是明亮程度，最小值是黑色，最大值的白色。</p>

<p>RGB与HSL的相互关系可以在<a href="http://www.snook.ca/technical/colour_contrast/colour.html">Colour Contrast Check</a>上面通过拖动各个滑块来观察，
这个网站主要用于检查背景色和文字颜色的对比度，用户输入两种颜色的值，它计算出亮度差(brightness difference)，色调差(color difference)，颜色是否匹配(color compliant)，以及是否符合WCAG 2规范等。</p>

<p>亮度差和色调差的具体计算方法可以搜索关键词&#8221;calculate color brightness difference&#8221;.</p>

<h1>搜索关键词</h1>

<ul>
<li><p>website color shemes</p></li>
<li><p>text background contrast calculator</p></li>
<li><p>文字 背景 对比</p></li>
</ul>


<h1>配色理论和实践</h1>

<ul>
<li><p><a href="http://www.had2know.com/technology/color-contrast-calculator-web-design.html">How to Calculate Color Contrast from RGB Values</a></p></li>
<li><p><a href="http://jingyan.baidu.com/article/ed2a5d1f1170f109f6be1787.html">网页配色技巧：不同背景下文字颜色搭配</a></p></li>
<li><p><a href="http://www.onextrapixel.com/2013/10/25/40-stunning-website-designs-with-great-color-schemes/">40 Stunning Website Designs with Great Color Schemes</a></p></li>
<li><p><a href="http://www.dtelepathy.com/blog/inspiration/beautiful-color-palettes-for-your-next-web-project">50 Beautiful Color Palettes for Your Next Web Project</a></p></li>
</ul>


<h1>配色工具和软件</h1>

<ul>
<li><p><a href="http://www.gpick.org/">gpick</a></p></li>
<li><p><a href="http://libregraphicsworld.org/blog/entry/creating-color-schemes-with-gpick">Creating color schemes with Gpick</a></p></li>
<li><p><a href="http://www.456bereastreet.com/archive/200709/10_colour_contrast_checking_tools_to_improve_the_accessibility_of_your_design/">10 colour contrast checking tools to improve the accessibility of your design</a></p></li>
<li><p><a href="http://www.snook.ca/technical/colour_contrast/colour.html">Colour Contrast Check</a>;</p></li>
<li><p><a href="http://paletton.com/">paletton.com</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Color Theme for Website With Gpick]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/15/170422/"/>
    <updated>2014-12-15T17:04:22+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/15/170422</id>
    <content type="html"><![CDATA[<p>First install with <code>sudo aptitude install gpick</code>, and start it with <code>gpick</code>;</p>

<h1>Build a color theme based on existing web page</h1>

<p>Choose &ldquo;Color picker&rdquo; tag.</p>

<p>Select a slot in color picker swatch (the six hexagons mark by 1 ~ 6).
Start color picker by shortcut Ctrl-p, move mouse to the location,
press SPACE to put the color into the slot.</p>

<p>The highlighted slot become the next slot automatically.</p>

<p>So you can select another color, and put it into the current highlighted slot by press SPACE.</p>

<p>Right click the color picker swatch and select &ldquo;Add to palette&rdquo; or &ldquo;Add all to palette&rdquo;
to put these color into the color palette on the right-hand side.</p>

<h1>Generate Color theme based on existing color</h1>

<p>Right click one or more colors in the color palette, select &ldquo;Generate&hellip;&rdquo;.
Set &ldquo;Colors&rdquo; to 3, &ldquo;Type&rdquo; to &ldquo;triadic&rdquo;, you can find the triadic color group in &ldquo;Preview&rdquo; panel.
If this is what you want, press &ldquo;OK&rdquo; button.</p>

<p>In the same way you can build complementary color group with: Type: Complementary, Colors: 2.</p>

<h1>Build a color theme from scratch</h1>

<p>Choose &ldquo;Scheme Generation&rdquo; tag in upper-left corner.
After you&rsquo;ve decided the value of hue, saturation, lightness and type,
right click the color block and select &ldquo;Add to palette&rdquo; or &ldquo;Add all to palette&rdquo;.</p>

<p>Find all built-in shortcuts on the &ldquo;HELP&rdquo; section of <a href="http://www.gpick.org/">gpick&rsquo;s website</a>.</p>

<p>Ref: <a href="http://libregraphicsworld.org/blog/entry/creating-color-schemes-with-gpick">Creating color schemes with Gpick</a>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Connect to Wireless Network in Linux Mint Command Line]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/13/125635/"/>
    <updated>2014-12-13T12:56:35+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/13/125635</id>
    <content type="html"><![CDATA[<p>First list all available Wi-Fi access points: <code>nmcli dev wifi</code>;</p>

<p>Next connect to it: <code>nmcli dev wifi iface wlan0 con "My ESSID Name" password MyPassword</code>,
and replace &ldquo;wlan0&rdquo;, &ldquo;My ESSID Name&rdquo; and &ldquo;MyPassword&rdquo; with yours.</p>

<p>Turn off current connected wifi: <code>nmcli nm wifi off</code>.</p>

<p>Next time when connected this wifi, turn on with <code>nmcli nm wifi on</code>.</p>

<p>Other unverified versions:</p>

<pre><code>nmcli d wifi connect &lt;WiFi-ESSID&gt; password &lt;WiFi-Password&gt; iface wlan0
iwconfig wlan0 essid &lt;WiFi-ESSID&gt; key &lt;WiFi-Password&gt;
</code></pre>

<p>Note:</p>

<p><code>iwlist wlan0 scan|grep ESSID</code> only list the connected Wifi, instead of all available Wi-Fi access points.</p>

<p>Ref:</p>

<p><code>man nmcli</code>;</p>

<p><a href="http://askubuntu.com/questions/461825/connect-to-wifi-from-command-line">connect to wifi from command line</a>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Connect Windows Remote Desktop From Linux Mint]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/09/171332/"/>
    <updated>2014-12-09T17:13:32+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/09/171332</id>
    <content type="html"><![CDATA[<p>On Windows server, check &ldquo;Allow connections only from computers running Remote Desktop with Network Level Authentication (more secure).&rdquo; in Remote desktop settings.</p>

<p>On client, run <code>sudo aptitude install remmina-plugin-rdp</code>.
Make sure package &ldquo;remmina&rdquo; and &ldquo;freerdp-x11&rdquo; is installed with <code>dpkg -l|grep remmina</code> and <code>dpkg -l|grep rdp</code>.</p>

<p>Start Remmina, create a new connection, the &ldquo;Server&rdquo; is the IP address, &ldquo;User name&rdquo; and &ldquo;Password&rdquo; is the Windows account name and password.
Leave &ldquo;Domain&rdquo; blank, and set &ldquo;Color depth&rdquo; to &ldquo;True color (24bpp)&rdquo;.
Set &ldquo;Resolution&rdquo; to &ldquo;Use client resolution&rdquo;.
And click &ldquo;Connect&rdquo; button.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load Data From Csv File Into Meteor Mongodb]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/08/114328/"/>
    <updated>2014-12-08T11:43:28+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/08/114328</id>
    <content type="html"><![CDATA[<p>Here I use mongoDB&rsquo;s mongoimport tool to import csv file into Meteor app&rsquo;s Mongodb.</p>

<p>First download mongodb package (mongodb-linux-x86_64-2.6.5.tgz) from <a href="http://www.mongodb.org/">mongoDB</a>, extract it into ~/apps folder.</p>

<p>Next start the Meteor app. When the server listening on port 3000, it&rsquo;s mongoDB server listening on port 3001.</p>

<p>Save the following codes into app&rsquo;s $HOME/private folder as importdb.sh:</p>

<pre><code>~/apps/mongodb-linux-x86_64-2.6.5/bin/mongoimport -h localhost:3001 --db meteor --collection fairs --type csv --file fairs.csv --headerline
</code></pre>

<p>Here the source csv file is saved in file private/fairs.csv.</p>

<p>It&rsquo;s headerline (first line of csv file) is also comma-seperated:</p>

<pre><code>Name, Age, Job
Bob, 35, Cooker
Tom, 28, Coder
...
</code></pre>

<p>Now in the Meteor app, add <code>Fairs = new Meteor.Collection("fairs");</code> into js file to use the data.</p>
]]></content>
  </entry>
  
</feed>
