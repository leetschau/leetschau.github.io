<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dark Matter in Cyberspace]]></title>
  <link href="http://leetschau.github.io/atom.xml" rel="self"/>
  <link href="http://leetschau.github.io/"/>
  <updated>2015-01-23T11:15:02+08:00</updated>
  <id>http://leetschau.github.io/</id>
  <author>
    <name><![CDATA[Li Chao]]></name>
    <email><![CDATA[leetschau@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Encrypt and Remove Encryption in Vim]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/20/090427/"/>
    <updated>2015-01-20T09:04:27+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/20/090427</id>
    <content type="html"><![CDATA[<p>To encrypt a file with vim, use <code>:X</code> when saving the file.</p>

<p>To remove the encryption, run <code>:set key=</code> in vim,
make some modifications in text,
then save file with <code>:x</code>.</p>

<p>Note that if you didn&rsquo;t make any modifications in text,
The encryption will not be removed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Simple Search Homepage]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/18/142454/"/>
    <updated>2015-01-18T14:24:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/18/142454</id>
    <content type="html"><![CDATA[<p>The key points in this web page is:</p>

<ul>
<li><p>How to position a <div> absolute centering with CSS;</p></li>
<li><p>How to add a footer sticky to page bottom: add <code>background-image: none;</code> into navbar&rsquo;s CSS definitions;</p></li>
<li><p>How to align text centering in a row: <code>text-align: center;</code>;</p></li>
<li><p>How to specify font properties, including font-family, font-size and font-weight;</p></li>
<li><p>How to add a image;</p></li>
</ul>


<p>Now build this page:</p>

<pre><code>$ meteor create searchHome
$ cd searchHome
$ ln -s ../client
$ tree
.
├── searchHome.css
├── searchHome.html
├── searchHome.js
├── client -&gt; ../client
└── public
    └── logo.png
$ tree client
client
├── css
│   └── bootstrap.min.css
└── lib
    └── bootstrap.min.js

$ cat &lt;&lt; EOF &gt; searchHome.html
&lt;head&gt;
  &lt;title&gt;NewFairs&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;div class="container"&gt;


  &lt;/div&gt;

  &lt;div id="content" class="container"&gt;

  &lt;/div&gt;

  &lt;div id="footer"&gt;
    &lt;nav class="navbar navbar-fixed-bottom"&gt;
      &lt;div class="container" &gt;Here is the Footer&lt;/div&gt;
    &lt;/nav&gt;
  &lt;/div&gt;
&lt;/body&gt;

&lt;template name="header"&gt;
  &lt;div class="header" align="right"&gt;

    &lt;div class="btn-group"&gt;
      &lt;button type="button" class="btn btn-default"&gt;Action&lt;/button&gt;
      &lt;button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false"&gt;
        &lt;span class="caret"&gt;&lt;/span&gt;
        &lt;span class="sr-only"&gt;Toggle Dropdown&lt;/span&gt;
      &lt;/button&gt;
      &lt;ul class="dropdown-menu" role="menu"&gt;
        &lt;li&gt;&lt;a href="#"&gt;汉语&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;English&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;template name="simpleSearchBox"&gt;
  &lt;div class="fixed-search-form"&gt;
    &lt;div class="row logo"&gt;
      &lt;img src="http://leetschau.github.io/logo.png" alt="logo" /&gt;
      牛展网
    &lt;/div&gt;
    &lt;div class="row"&gt;
      &lt;input type="text"&gt;
      &lt;button&gt;搜索&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;template name="hello"&gt;
  &lt;button id="addline"&gt;Add a line&lt;/button&gt;
  &lt;button id="rmline"&gt;Remove a line&lt;/button&gt;
  &lt;div&gt;

      &lt;li&gt;Item No: &lt;/li&gt;

  &lt;/div&gt;
&lt;/template&gt;
EOF

$ cat &lt;&lt; EOF &gt; searchHome.css
html {
  position: relative;
  min-height: 100%;
}

#content { padding-bottom: 70px; }

.fixed-search-form {
  margin: auto;
  position: absolute;
  top:0; left:0; bottom:0; right:0;
  height: 60%;
  width: 60%;
  text-align: center;
  font-size: x-large;
  font-family: Verdana,
               "Microsoft YaHei", "微软雅黑",
               "WenQuanYi Micro Hei";
}

.search-form .logo {
  font-size: 200%;
  font-weight: bold;
}

#footer .navbar {
  position: absolute;
  background-image: none;
}
EOF
</code></pre>

<p>Note1: the website logo image logo.png is created online, and download to local disk.
See note &ldquo;创建简单的网站Logo&rdquo; for details.</p>

<p>Note2: in &ldquo;font-family&rdquo;, &ldquo;Verdana&rdquo; is english font, &ldquo;Microsoft YaHei&rdquo; is Chinese font for Windows platform, &ldquo;WenQuanYi Micro Hei&rdquo; for Linux platform.
search and show this font with <code>aptitude search wqy</code>, <code>aptitude show fonts-wqy-microhei</code>.
See note &ldquo;Build Working Environment with i3 and Mint&rdquo; for details of this font on Linux.</p>

<p>Refs:</p>

<ul>
<li><p><a href="http://stackoverflow.com/questions/396145/how-to-vertically-center-a-div-for-all-browsers">How to vertically center a div for all browsers?</a></p></li>
<li><p><a href="http://www.ruanyifeng.com/blog/2014/07/chinese_fonts.html">中文字体网页开发指南</a></p></li>
<li><p><a href="http://www.ruanyifeng.com/blog/2008/06/typography_notes.html">字体笔记</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstrap 3的栅格系统]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/18/121145/"/>
    <updated>2015-01-18T12:11:45+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/18/121145</id>
    <content type="html"><![CDATA[<p>Bootstrap 3的栅格(grid)系统以浏览器的屏幕宽度为指标，从小到大分为4级：xs, sm, md, lg (extra small, small, medium, large).
4个级别之间的宽度分隔点（即breakpoint size）分别是768px, 992px和1200px。
例如，当屏幕宽度为1000px（像素）时，使用md标准，800px使用sm标准，</p>

<p>假设我们需要在一行上从左到右顺序放置A,B,C共3个元素，宽度比为1:2:1，由于栅格系统将每行分为12列，
不难算出这3个元素依次应占据3，6和3列，下面是测试代码：</p>

<pre><code>$ meteor create grids
$ cd grids
$ cat &lt;&lt; EOF &gt; grids.html
&lt;head&gt;
  &lt;title&gt;Bootstrap Grids&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;h1&gt;Bootstrap Grid System Demo&lt;/h1&gt;

  &lt;hr&gt;

  &lt;div class="container"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-sm-3"&gt;.col-md-3&lt;/div&gt;
      &lt;div class="col-sm-6"&gt;.col-md-6&lt;/div&gt;
      &lt;div class="col-sm-3"&gt;.col-md-3&lt;/div&gt;
    &lt;/div&gt;

  &lt;/div&gt;
&lt;/body&gt;
EOF

&lt;template name="getDim"&gt;
  &lt;div&gt; Browser window width:  &lt;/div&gt;
  &lt;div&gt; Browser window height:  &lt;/div&gt;
  &lt;div&gt; Screen width:  &lt;/div&gt;
  &lt;div&gt; Screen height:  &lt;/div&gt;
&lt;/template&gt;

$ cat &lt;&lt; EOF &gt; grids.css
.col-sm-3 {
  background-color: #ccc;
}

.col-sm-6 {
  background-color: #cf0;
}

$ cat &lt;&lt; EOF &gt; grids.js
if (Meteor.isClient) {
  Session.setDefault("bro_wid", $(window).width());
  Session.setDefault("bro_hei", $(window).height());
  Session.setDefault("scr_wid", screen.width);
  Session.setDefault("scr_hei", screen.height);

  Meteor.startup(function () {
    $(window).resize(function(e) {
      Session.set("bro_wid", $(window).width());
      Session.set("bro_hei", $(window).height());
      Session.set("scr_wid", screen.width);
      Session.set("scr_hei", screen.height);
    });
  });

  Template.getDim.helpers({
    bro_wid: function () {
      return Session.get("bro_wid");
    },
    bro_hei: function () {
      return Session.get("bro_hei");
    },
    scr_wid: function () {
      return Session.get("scr_wid");
    },
    scr_hei: function () {
      return Session.get("scr_hei");
    }
  });
}
</code></pre>

<p>浏览器初始宽度为1284px，属于lg，用慢慢拖动鼠标减小窗口宽度，
这时行元素 (.row) 两端的页边距(padding)不断缩小，
当窗口宽度低于1200px时，此行中每列 (.col) 元素的宽度整体减小了一级，同时行的边距恢复初始值，
继续减小窗口宽度，边距持续减小，直到992像素时行中各列元素宽度减小，边距恢复；
当宽度低于768像素时，行中的3个列元素改为纵向排列，即stack方式。</p>

<p>结合Bootstrap 3官网文档中<a href="http://getbootstrap.com/css/#grid">Grid system</a>的说明：</p>

<blockquote><p>Grid classes apply to devices with screen widths greater than or equal to the breakpoint sizes,
and override grid classes targeted at smaller devices.
Therefore, e.g. applying any .col-md-<em> class to an element will <strong>not only</strong> affect its styling on medium devices
but also on large devices if a .col-lg-</em> class is not present.</p></blockquote>

<p>上面我们定义的是sm，所以比它宽的md和lg都使用它的定义：3-6-3，比它小的xs没有定义，所以使用了默认的纵向排列方式。</p>

<p>可以用两种方法验证这一点，首先我们把html和css中的&#8221;sm&#8221;都改为&#8221;lg&#8221;，例如下面：</p>

<pre><code>&lt;div class="container"&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-lg-3"&gt;.col-md-3&lt;/div&gt;
    &lt;div class="col-lg-6"&gt;.col-md-6&lt;/div&gt;
    &lt;div class="col-lg-3"&gt;.col-md-3&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>当宽度低于1200px时，列元素直接变成了纵向排列。</p>

<p>假设我们的需求变为：在大屏lg和中屏md上保持原有布局，即A,B,C共3个元素在同一行按1:2:1放置，
在xs和sm屏上变为两行，其中A和B按照1:2放在同一行上，C放在第二行上，占屏幕宽度一半，相应地修改代码：</p>

<pre><code>$ cat grids.html
...
  &lt;div class="container"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-md-3 col-xs-4"&gt;.col-md-3&lt;/div&gt;
      &lt;div class="col-md-6 col-xs-8"&gt;.col-md-6&lt;/div&gt;
      &lt;div class="col-md-3 col-xs-6"&gt;.col-md-3&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
...

$ cat grids.css
...
.col-xs-4 {
  background-color: #f00;
}

.col-xs-8 {
  background-color: #0f0;
}
</code></pre>

<p>可以看到，在最小的屏幕上，A和B也是在同一行里的。所以对于同一个row里的col来说，超过12的col会自动放在下一行，
例如上面的xs配置中，4和8已经占据了一行，所以下来C的col-xs-6就显示在下一行，且宽度为屏幕的一半，与文档所述吻合：</p>

<blockquote><p>If more than 12 columns are placed within a single row, each group of extra columns will, as one unit, wrap onto a new line.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于Bootstrap 3的页眉页脚控制]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/18/020909/"/>
    <updated>2015-01-18T02:09:09+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/18/020909</id>
    <content type="html"><![CDATA[<p>对网页上页眉(header)、页脚(footer)的位置要求是：</p>

<ol>
<li><p>当网页正文内容短于一页时，不论浏览器窗口尺寸如何，页眉要在顶端，页脚在底端，不能出现页脚下面还有空白的情况；</p></li>
<li><p>当网页正文内容长于一页时，不论浏览器窗口尺寸如何，页眉页脚不能遮挡住正文内容，当使用滚轮上下滚动时，页眉页脚要随之滚动；</p></li>
</ol>


<p>也就是sticky header/footer效果。下面是符合此要求的一个精简Meteor实现：</p>

<pre><code>$ meteor create stickyHeaderFooter
$ cd stickyHeaderFooter
$ ln -s ../client
$ tree client
client
├── css
│   └── bootstrap.min.css
└── lib
    └── bootstrap.min.js
$ cat &lt;&lt; EOF &gt; stickyHeaderFooter.html
&lt;head&gt;
  &lt;title&gt;Sticky Header &amp; Footer&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;nav class="navbar navbar-default navbar-static-top"&gt;
    &lt;div class="container"&gt;Here is Header&lt;/div&gt;
  &lt;/nav&gt;
  &lt;h1&gt;Sticky Header &amp; Footer&lt;/h1&gt;

  &lt;div id="content" class="container"&gt;

  &lt;/div&gt;

  &lt;div id="footer"&gt;
    &lt;div class="navbar navbar-fixed-bottom"&gt;
      &lt;div class="container"&gt;Here is the Footer&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;

&lt;template name="hello"&gt;
  &lt;button id="addline"&gt;Add a line&lt;/button&gt;
  &lt;button id="rmline"&gt;Remove a line&lt;/button&gt;
  &lt;div&gt;

      &lt;li&gt;Item No: &lt;/li&gt;

  &lt;/div&gt;
&lt;/template&gt;
EOF

$ cat &lt;&lt; EOF &gt; stickyHeaderFooter.css
html {
  position: relative;
  min-height: 100%;
}

#content { padding-bottom: 70px; }

#footer .navbar {
  position: absolute;
}
EOF

$ cat &lt;&lt; EOF &gt; stickyHeaderFooter.js
if (Meteor.isClient) {
  Session.setDefault("sample", [1,2,3]);

  Template.hello.helpers({
    samples: function () {
      return Session.get("sample");
    }
  });

  Template.hello.events({
    'click #addline': function () {
      var sl = Session.get("sample");
      sl.push(sl[sl.length - 1] + 1);
      Session.set("sample", sl);
    },
    'click #rmline': function () {
      var sl = Session.get("sample");
      if (sl.length &gt; 1) {
        sl.pop();
      }
      Session.set("sample", sl);
    }
  });
}
$ meteor
</code></pre>

<p>Meteor服务启动完毕后，运行<code>firefox localhost:3000</code>，通过点击&#8221;Add a line&#8221;增加正文长度，点击&#8221;Remove a line&#8221;减小正文长度，同时改变浏览器窗口大小，验证代码是否符合上面的要求。</p>

<p>这里面页眉的设置相对简单，用Bootstrap 3的navbar-static-top就能够达到要求。</p>

<p>页脚基于Bootstrap 3的&#8221;navbar navbar-fixed-bottom&#8221;实现，但这个类本身的功能是把页脚固定在浏览器底部，而不论正文内容长短，
所以要通过在css文件中设置格式的方法实现sticky footer效果，
在css文件的3段设置中，前两段负责避免正文与页脚重叠，第3段的作用是保证页脚始终在正文之后，而不是固定在浏览器窗口底端。</p>

<p>Html文件中的container属性是bootstrap 3网格系统的容器，用来对齐各个行元素中的各列，并自动控制行、列元素的页边距，
这里使用container是为了避免在css中手工设定padding值。</p>

<p>本文的实现方法借鉴了<a href="http://stackoverflow.com/questions/10099422/flushing-footer-to-bottom-of-the-page-twitter-bootstrap">Flushing footer to bottom of the page, twitter bootstrap</a>中Régis B.的回答，
但对其答案进行了精简。</p>

<p>container部分基于<a href="http://stackoverflow.com/questions/19983857/when-should-i-use-class-container-and-row">When should I use class container and row?</a>。</p>

<p>说明：实例代码用软链接引入Bootstrap文件，是为了节约空间，也可以直接把client文件夹拷贝到当前目录中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[创建简单的网站Logo]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/14/160455/"/>
    <updated>2015-01-14T16:04:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/14/160455</id>
    <content type="html"><![CDATA[<p>比如要创建一个网址为niufairs.com的网站logo，就用其英文首字母&#8221;NF&#8221;，
找一个在线英文艺术字网站，这里用的是<a href="http://en.skyfont.com/">skyfont.com</a>，
输入NF，字体选择&#8221;Action Jackson&#8221;，大小选择16，字体颜色选择了类似搜狗logo的橙红色#F7642B，
背景设置为白色#FFFFFF，样式为默认，点击生成，满意的话保存为图片就可以了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preferred Web Browser Resolution When Developing a Website]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/14/112821/"/>
    <updated>2015-01-14T11:28:21+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/14/112821</id>
    <content type="html"><![CDATA[<p>According to <a href="https://ux.stackexchange.com/questions/41466/why-is-1366x768-considered-by-some-to-be-the-standard-widescreen-for-modern-lapt">Why is 1366x768 considered by some to be the standard widescreen for modern laptops?</a>,
screen resolution 1366x768 is most frequently used from desktop , the 2nd frequently used resolution is 1024x768.</p>

<p>So for a web UI designer, 1024x768 is the safe solution,
because a 1024-pixels-width web page on a wider screen (1366 pixels) looks ok,
while people have to scroll horizontally to view a 1366-pixels-wide web page on a 1024 screen.</p>

<p>For Axure RP, 960 pixels width is preferred:
right click on the wireframe window of a page,
select &ldquo;Grid and Guides -> Create Guides -> Presets: 960 Grid 12 Column&rdquo;.</p>

<p>The following is a Meteor app that detect screen and browser size on the fly.</p>

<pre><code>$ cat getDimension.js
if (Meteor.isClient) {
  Session.setDefault("bro_wid", $(window).width());
  Session.setDefault("bro_hei", $(window).height());
  Session.setDefault("scr_wid", screen.width);
  Session.setDefault("scr_hei", screen.height);

  Meteor.startup(function () {
    $(window).resize(function(e) {
      Session.set("bro_wid", $(window).width());
      Session.set("bro_hei", $(window).height());
      Session.set("scr_wid", screen.width);
      Session.set("scr_hei", screen.height);
    });
  });

  Template.getDim.helpers({
    bro_wid: function () {
      return Session.get("bro_wid");
    },
    bro_hei: function () {
      return Session.get("bro_hei");
    },
    scr_wid: function () {
      return Session.get("scr_wid");
    },
    scr_hei: function () {
      return Session.get("scr_hei");
    }
  });
}

$ cat getDimension.html
&lt;head&gt;
  &lt;title&gt;Window Size Detector&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Window Size Detector&lt;/h1&gt;
  &lt;div&gt; &lt;b&gt;Resize your browser window ...&lt;/b&gt; &lt;hr&gt; &lt;/div&gt;

&lt;/body&gt;
&lt;template name="getDim"&gt;
  &lt;div&gt; Browser window width:  &lt;/div&gt;
  &lt;div&gt; Browser window height:  &lt;/div&gt;
  &lt;div&gt; Screen width:  &lt;/div&gt;
  &lt;div&gt; Screen height:  &lt;/div&gt;
&lt;/template&gt;
</code></pre>

<p>Ref:</p>

<p><a href="http://stackoverflow.com/questions/3437786/get-the-size-of-the-screen-current-web-page-and-browser-window">Get the size of the screen, current web page and browser window</a></p>

<p><a href="http://alistapart.com/article/holygrail">In Search of the Holy Grail</a></p>

<p><a href="http://www.ehow.com/how_6165639_make-website-fit-resolution.html">How to Make My Website Fit Any Resolution</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Windows VM in Linux Mint I3wm]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/13/142025/"/>
    <updated>2015-01-13T14:20:25+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/13/142025</id>
    <content type="html"><![CDATA[<p>Build a Windows vm in VirtualBox.</p>

<p>Then get the UUID of the guest OS with:</p>

<pre><code>$ VBoxManage list vms
"Win7Office" {35cd049b-7242-4db4-8329-2eb05149f5cf}
...
</code></pre>

<p>The UUID will be used to start the vm with script.
Save the following line in /usr/local/bin/win7:</p>

<pre><code>VBoxManage startvm 35cd049b-7242-4db4-8329-2eb05149f5cf --type gui
</code></pre>

<p>Add executing permission: <code>sudo chmod 755 /usr/local/bin/win7</code>;</p>

<p>Now start Windows vm with dmenu: Alt-d -> win7.</p>

<p>Make the vm full screen: press &ldquo;Home&rdquo; key, (here is right ctrl key), followed by Alt-f.</p>

<p>To leave the guest system to the #2 workspace: right Ctrl, Alt-2.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manipulate 7zip Files on Linux]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/13/114850/"/>
    <updated>2015-01-13T11:48:50+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/13/114850</id>
    <content type="html"><![CDATA[<p>Install: <code>sudo aptitude install p7zip-full</code>;</p>

<p>Extract: <code>7zr x myfile.7z</code>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Download Blocked Resource With RTorrent]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/13/110500/"/>
    <updated>2015-01-13T11:05:00+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/13/110500</id>
    <content type="html"><![CDATA[<p>Today I need download a file via bt seed on <a href="http://kickass.so/">kickass</a>.
However here BitTorrent protocol is blocked.
So I install <a href="https://github.com/rakshasa/rtorrent">rtorrent</a> on the Linode virtual host via <code>sudo yum install rtorrent</code>.
Start it with <code>rtorrent</code>, press Backspace, and paste torrent file url in the text box.
The file is downloaded to current folder.</p>

<p>Finally download this file to my computer with <code>scp myVirtualHost:~/theFile.zip .</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux命令行中删除特殊名字的文件]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/13/104859/"/>
    <updated>2015-01-13T10:48:59+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/13/104859</id>
    <content type="html"><![CDATA[<p>今天下载了一个zip文件，解压后出现一个文件名为&#8221;-==(czRGsl)==-.mp4&#8221;的文件，删除时出现下面的错误：</p>

<pre><code>[chad@chadleebj ~]$ rm *.mp4
rm: invalid option -- '='
Try `rm ./'-==(czRGsl)==-.mp4'' to remove the file `-==(czRGsl)==-.mp4'.
Try `rm --help' for more information
</code></pre>

<p>加单引号和转义符都无效：</p>

<pre><code>[chad@chadleebj ~]$ rm '-==(czRGsl)==-.mp4'
rm: invalid option -- '='
Try `rm ./'-==(czRGsl)==-.mp4'' to remove the file `-==(czRGsl)==-.mp4'.
Try `rm --help' for more information.

[chad@chadleebj ~]$ rm \-\=\=\(czRGsl\)\=\=-.mp4
rm: invalid option -- '='
Try `rm ./'-==(czRGsl)==-.mp4'' to remove the file `-==(czRGsl)==-.mp4'.
Try `rm --help' for more information
</code></pre>

<p>错误原因是将文件名的第一个字符&#8221;-&ldquo;当成了选项符号，又没有&rdquo;=&ldquo;这个选项造成的，所以首先要在rm后加&rdquo;&ndash;&ldquo;告诉命令后面的&rdquo;-&ldquo;不是选项符号：</p>

<pre><code>[chad@chadleebj ~]$ rm -- -==(czRGsl)==-.mp4
-bash: syntax error near unexpected token `('
</code></pre>

<p>其中的括号需要转义：</p>

<pre><code>[chad@chadleebj ~]$ rm -- -==\(czRGsl)==-.mp4
-bash: syntax error near unexpected token `)'

[chad@chadleebj ~]$ rm -- -==\(czRGsl\)==-.mp4
</code></pre>

<p>搞定。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PDF Margin Trimming Tools]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/12/143532/"/>
    <updated>2015-01-12T14:35:32+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/12/143532</id>
    <content type="html"><![CDATA[<p>I am looking for a tool to trim the margin of pdf files,
to be more convenient to reading on my 10.0 inch tablet.</p>

<p><a href="http://briss.sourceforge.net/">Briss</a> do the work well.
It&rsquo;s a java program, so jvm need to be installed beforehand.</p>

<p>Download it (briss-0.9.tar.gz) and extract, run it with <code>java -jar briss-0.9.jar</code>,
or <code>java -jar briss-0.9.jar &lt;target.pdf&gt;</code>, see README.txt for details.</p>

<p>After several tries, I found the right process is NOT open pdf directly with briss.
The following is the recommended way:</p>

<p>First open the target pdf with <code>evince &lt;target.pdf&gt;</code>, see if the margin area is the same.
If not, remember the special page numbers.</p>

<p>For example, the first 6 pages, including cover, copy right page, etc, are different with the remaining pages.
When starting briss, input &ldquo;1-6&rdquo; when asked for &ldquo;Enter pages to be excluded from merging&rdquo;.
Briss open page 1 to 6 respectively, and put all odd and even pages into 2 other &ldquo;clusters&rdquo;.</p>

<p>A cluster is group of pages share the same margin settings.
So all odd pages use the same margin settings,
and all even pages use same margin settings, (which may be different with the odd cluster).</p>

<p>Use mouse to set the rectange in each cluster, then [Action -> Preview],
if it&rsquo;s ok, [Action -> Crop PDF].</p>

<p>For convenience, add the following codes into ~/.bash_aliases:</p>

<pre><code>function briss(){
  java -jar $HOME/apps/briss-0.9/briss-0.9.jar $1
}
</code></pre>

<p>So now crop pdf with <code>briss &lt;target.pdf&gt;</code>.</p>

<p>If define alias with <code>alias briss='java -jar $HOME/apps/briss-0.9/briss-0.9.jar'</code>, tab-completion doesn&rsquo;t work.
So here we use function.</p>

<p>I also tried pdfcrop, which is installed with <code>sudo apt-get install texlive-extra-utils</code>.
After cropped, the page index information is lost.
And page size vary with the text area.
So it&rsquo;s not recommended.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[网站线框图绘制工具]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/11/022211/"/>
    <updated>2015-01-11T02:22:11+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/11/022211</id>
    <content type="html"><![CDATA[<h1>纸和笔</h1>

<p>修改比较麻烦，复制成本高，表达能力强。</p>

<h1>软件工具</h1>

<h2>Pencil</h2>

<p><a href="http://pencil.evolus.vn/">Pencil</a>可以通过下载Firefox插件或者deb包的方式在Linux上安装，接近于手画，目前找到的唯一一个开源软件。</p>

<p>开发过程中，需要安装它的Dojo Widgets，其中包含按钮，文本框等一些必需的控件，</p>

<p>Pencil只能导出为单页html文件，试验发现其TabNav和jQuery两个模板导出的html网页可以比较好地模拟多页html效果。</p>

<p>Dojo widgets和TabNav, jQuery两个模板都可以在官网的<a href="http://pencil.evolus.vn/Stencils-Templates.html">Stencils</a>页面上找到下载信息。</p>

<p>这里下载到的是Dojo.GUI_v6.zip, TabNav.zip和JQUERY.zip这3个文件。</p>

<h2>Cacoo</h2>

<p><a href="https://cacoo.com/">Cacoo</a>是一个在线工具，基于flash开发，优点是有比较好的模板，可以直接在上面改，缺点是必须有网络，运行速度略慢，不能导出源代码，免费版有数量限制。</p>

<h2>Axure RP Pro</h2>

<p><a href="http://www.axure.com/">Axure RP</a>大概是国内知名度最高的原型开发工具了，功能强大，学习资料多，绿色版运行需要先安装Microsoft .NET framework 4.0.</p>

<p>其他还有很多在线线框图制作网站，一般都是收费的，或者限制功能版免费，功能类似于Cacoo，搜索&#8221;wireframing tool quora&#8221;可以找到一些比较好的推荐文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manipulating CSV Files in Command Line]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/05/183154/"/>
    <updated>2015-01-05T18:31:54+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/05/183154</id>
    <content type="html"><![CDATA[<h1>csvkit</h1>

<p>Here we manipulate csv files with <a href="https://github.com/onyxfish/csvkit">csvkit</a>.
It&rsquo;s developed with Python. So install it with <code>sudo pip install csvkit</code>;</p>

<p>Convert xls, xlsx file into csv file: <code>in2csv input.xlsx &gt; data.csv</code>;</p>

<p>List column titles of a csv file: <code>csvcut -n data.csv</code>;</p>

<p>Print statistic information for each columns in a csv file: <code>csvstat data.csv</code>;</p>

<p>Print the first, second, 11th, 16th column of first 9 records (another one for headline): <code>csvcut -c 1,2,11,16 data.csv|head</code>;</p>

<p>If there are newline characters in records, add &ldquo;-l&rdquo; option to make it clear: <code>csvcut -l -c 1,2,11,16 data.csv|head</code>;</p>

<p>Convert to json file with csvjson: <code>csvcut -c 1,2,11,16 fairData150104.csv|head|csvjson -i 4</code>, &ldquo;-i&rdquo; specify how many indent spaces, default is no indent.</p>

<h1>csvtool</h1>

<p>Install: <code>sudo aptitude install csvtool</code>;</p>

<ul>
<li><p>csvtool sub <n1> <n2> <n3> <n4> data.csv:</p>

<p>  Take a square subset of the CSV, top left at row <n1>, column <n2>,
  which is <n3> deep and <n4> wide.
  <n1> and <n2> count from 1, or from 0 if -z option is given.</p>

<p>  Example: <code>csvtool sub 1 16 1 1 data.csv</code></p></li>
<li><p>csvtool take <n> data.csv: take first <n> rows of the csv, like &ldquo;head&rdquo; in shell;</p></li>
<li><p>csvtool drop <n> data.csv: drop the first <n> rows and return the rest (if any).</p></li>
</ul>


<p>See <code>csvtool -h</code> for details.</p>

<p>To print the <em>n</em>th record easily, add the following function into ~/.bash_alias file:</p>

<pre><code>function ctls(){
  if test $# -eq 3; then
    csvtool drop $2 $1 | csvtool take $3 -
  else
    echo ctls: csvtool list specified record
    echo Synopsis: ctls '&lt;filename&gt; &lt;startNo&gt; &lt;count&gt;'
  fi
}
</code></pre>

<p>Now print the 3rd record of data.csv with <code>ctls data.csv 3 1</code>.</p>

<p>The &ldquo;-&rdquo; in &ldquo;csvtool take&rdquo; means &ldquo;get input from stdin instead of a file&rdquo;.</p>

<h1>Put them together</h1>

<ul>
<li><p>Count the number of records which the 7th field is empty: <code>csvgrep -c 7 -r "^$" data.csv | csvtool height -</code>;</p></li>
<li><p>Count the number of records which the 7th field is NOT empty: <code>csvgrep -c 7 -r "^.+$" data.csv | csvtool height -</code>;</p></li>
<li><p>Print data on screen without line wrap: <code>less -S &lt;filename&gt;</code>;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compare Users in 2 Days With Spark]]></title>
    <link href="http://leetschau.github.io/blog/2015/01/04/173843/"/>
    <updated>2015-01-04T17:38:43+08:00</updated>
    <id>http://leetschau.github.io/blog/2015/01/04/173843</id>
    <content type="html"><![CDATA[<p>We have 2 log files. One contains logs created in 2014.11.22, the other all in 2014.11.23.
Each have about 240 million logs in it, with file size 30GB.</p>

<p>The log in these files are like this:</p>

<blockquote><p>&ldquo;460015482006002&rdquo;,&ldquo;深圳市&rdquo;,&ldquo;广东省&rdquo;,&ldquo;2014-12-22  16:46:04&rdquo;,&ldquo;2014-12-22  16:46:04&rdquo;,&ldquo;42705&rdquo;,&ldquo;16111&rdquo;,&ldquo;460014270516111&rdquo;,&ldquo;MAP&rdquo;</p></blockquote>

<p>The number in the first column &ldquo;460015482006002&rdquo; represents a unique user, which is called &ldquo;IMSI&rdquo;.
We need to find all IMSI number <strong>only</strong> exists in 2014.11.22.</p>

<p>Given the huge size of log files, we compute with Apache Spark.</p>

<p>Create only22.scala:</p>

<pre><code>import java.util.Date
import java.util.Calendar
import java.util.concurrent.TimeUnit

val SIG_DATA1 = "datamine/drawdata_20141122_cs.utf8.csv"
val SIG_DATA2 = "datamine/drawdata_20141123_cs.utf8.csv"
val USER_ID_POS = 1

def get_users(data: String): Set[String] = {
  val raw_data = sc.textFile(data).map(_.split("\"").toList)
  val raw_sig_map = raw_data.filter(x =&gt; x.size &gt; 17)
  val users = raw_sig_map.map(_(USER_ID_POS)).distinct
  return users.toArray.toSet
}

val u1 = get_users(SIG_DATA1)
val u2 = get_users(SIG_DATA2)
val only22 = u1 -- u2
scala.tools.nsc.io.File("only22.txt").writeAll(only22.toString)
</code></pre>

<p>Run it: <code>spark-shell --master spark://cloud142:7077 --driver-memory 6g --driver-cores 5 --total-executor-cores 28 --executor-memory 20g -i only22.scala</code></p>

<p>In file only22.txt, all elements in the set are written in one line.
So we have to replace all &ldquo;,&rdquo; with newline character: <code>sed -i 's/,/\n/g' only22.txt</code>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将中文字符串转换为拼音首字母串]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/31/101055/"/>
    <updated>2014-12-31T10:10:55+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/31/101055</id>
    <content type="html"><![CDATA[<p>下面的Python脚本将任意汉字和英文、数字混合字符串转换为拼音首字母组成的字符串，
注意：有些汉字不能查找到首字母，例如&#8221;深圳东莞&#8221;的&#8221;圳&#8221;和&#8221;莞&#8221;两个字，原因不明。
需要在vi中用&#8221;/\&lt;[A-Z]>搜索这种情况。</p>

<p>实现过程是：首先尝试用unicode, utf8和gbk解码字符串，然后用GBK编码字符串，利用GBK汉字是按拼音顺序编码的原理查出其首字母。</p>

<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-

def get_word_initial(inp):
    if isinstance(inp, unicode):
        unicode_str = inp
    else:
        try:
            unicode_str = inp.decode('utf8')
        except:
            try:
                unicode_str = inp.decode('gbk')
            except:
                print 'unknown coding'
                return

    init_list = [get_char_initial(i) for i in unicode_str]
    return "".join(init_list)

def get_char_initial(unicode1):
    gbkStr = unicode1.encode('gbk')
    try:
        ord(gbkStr)
        return gbkStr
    except:
        asc = ord(gbkStr[0]) * 256 + ord(gbkStr[1]) - 65536
        if asc &gt;= -20319 and asc &lt;= -20284:
            return 'A'
        if asc &gt;= -20283 and asc &lt;= -19776:
            return 'B'
        if asc &gt;= -19775 and asc &lt;= -19219:
            return 'C'
        if asc &gt;= -19218 and asc &lt;= -18711:
            return 'D'
        if asc &gt;= -18710 and asc &lt;= -18527:
            return 'E'
        if asc &gt;= -18526 and asc &lt;= -18240:
            return 'F'
        if asc &gt;= -18239 and asc &lt;= -17923:
            return 'G'
        if asc &gt;= -17922 and asc &lt;= -17418:
            return 'H'
        if asc &gt;= -17417 and asc &lt;= -16475:
            return 'J'
        if asc &gt;= -16474 and asc &lt;= -16213:
            return 'K'
        if asc &gt;= -16212 and asc &lt;= -15641:
            return 'L'
        if asc &gt;= -15640 and asc &lt;= -15166:
            return 'M'
        if asc &gt;= -15165 and asc &lt;= -14923:
            return 'N'
        if asc &gt;= -14922 and asc &lt;= -14915:
            return 'O'
        if asc &gt;= -14914 and asc &lt;= -14631:
            return 'P'
        if asc &gt;= -14630 and asc &lt;= -14150:
            return 'Q'
        if asc &gt;= -14149 and asc &lt;= -14091:
            return 'R'
        if asc &gt;= -14090 and asc &lt;= -13119:
            return 'S'
        if asc &gt;= -13118 and asc &lt;= -12839:
            return 'T'
        if asc &gt;= -12838 and asc &lt;= -12557:
            return 'W'
        if asc &gt;= -12556 and asc &lt;= -11848:
            return 'X'
        if asc &gt;= -11847 and asc &lt;= -11056:
            return 'Y'
        if asc &gt;= -11055 and asc &lt;= -10247:
            return 'Z'
        return ''

if __name__ == "__main__":
    str_input='广州火车站A2c'
    print(get_word_initial(str_input))
</code></pre>

<p>下面是一个完整的使用场景，利用上面的代码为小区的地理位置表添加ID字段。
首先将上面的代码保存在chnInit.py中，然后相同目录下创建一个addID.py文件：</p>

<pre><code>import chnInit
import sys

target = sys.argv[1]
inclID = sys.argv[2]
with open(target, 'r') as src:
    with open(inclID, 'w') as dst:
        for content in src:
            line = content.strip()
            cgi = line.split(' ,')[0]
            node = line.split(' ,')[1].split(' ')[0]
            city = line.split(' ,')[1].split(' ')[1]
            nodeID = chnInit.get_word_initial(node)
            cityID = chnInit.get_word_initial(city)
            dst.write(cgi + ' ,' + city + ' ' + cityID + ' ' + node + ' ' + nodeID + '\n')
</code></pre>

<p>相同目录下保存输入文件input.csv，然后运行脚本：</p>

<pre><code>$ head input.csv
460010973309433 ,白云国际机场 广州
...

$ python addID.py input.csv loc_map.csv
$ head loc_map.csv
460010973309433 ,广州 GZ 白云国际机场 BYGJJC
...
</code></pre>

<p>根据Python文档7.2.1节：&#8221;Methods of File Objects&#8221;中的描述：</p>

<blockquote><p>For reading lines from a file, you can loop over the file object.
This is memory efficient, fast, and leads to simple code:</p></blockquote>

<pre><code>with open(target, 'r') as f:
    for line in f:
        ...
</code></pre>

<p>这种方式比较节省内存，适于处理大文件。
当处理小文件时，可以用下面的方法将完整内容保存在一个变量中：</p>

<pre><code>with open('workfile', 'r') as f:
    read_data = f.read()
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Frequent Used Commands in Mongodb Shell]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/29/193156/"/>
    <updated>2014-12-29T19:31:56+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/29/193156</id>
    <content type="html"><![CDATA[<p>The foloowing codes demonstrate the creation &copy;, query &reg;, update (U) and delete (D) operations on mongodb collections.</p>

<p>It also shows how to rename collections and keys of documents.</p>

<pre><code>$ mongo
db.fairs.insert({'name': 'bikeShow', 'time': '2014.12.24', 'location': 'Beijing', 'products': ['bike', 'car', 'truck']})
db.fairs.insert({'name': 'clothShow', 'time': '2014.2.14', 'location': 'Shanghai', 'products': ['silk', 'wood', 'paper']})
db.fairs.insert({'name': 'MyFruits', 'time': '2011.4.18', 'location': 'Guangzhou', 'products': ['berry', 'apple', 'banana']})

db.newfairs.find({}, {name: 1})
db.newfairs.find({}, {'name.chn': 1})

db.fairs.renameCollection('newfairs')

db.newfairs.update({}, {$rename: {'time': 'date'} }, {multi: true} )
db.newfairs.update({}, {$rename: {'name': 'names'} }, {multi: true} )
db.newfairs.update({}, {$rename: {'names': 'name.chn'} }, {multi: true} )
db.newfairs.update({}, {$unset: {'date': ""}}, {multi: true})
db.newfairs.remove({})
db.newfairs.drop()
exit
</code></pre>

<p>You can&rsquo;t use <code>{$rename: {'name': 'name.chn'}}</code> directly for &ldquo;$rename must not be on the same path&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遍历Javascript对象属性的方法]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/29/151419/"/>
    <updated>2014-12-29T15:14:19+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/29/151419</id>
    <content type="html"><![CDATA[<p>启动node.js命令行，创建一个最简单的对象，然后遍历其属性：</p>

<pre><code>$ node
&gt; var myobj = {k1: "p1", k2: 'p2'}

&gt; for (var key in myobj) {
... console.log(key);
... console.log(myobj.key);
... console.log(myobj[key]);
... }
k1
undefined
p1
k2
undefined
p2
&gt; myobj.k1
'p1'

&gt; var ak = 'k4'
undefined
&gt; myobj.ak = 'p4'
'p4'
&gt; myobj
{ k1: 'p1',
  k2: 'p2',
  ak: 'p4' }
&gt; myobj[ak] = 'p4'
'p4'
&gt; myobj
{ k1: 'p1',
  k2: 'p2',
  ak: 'p4',
  k4: 'p4' }

&gt; myobj[nk] = 'p5'
ReferenceError: nk is not defined
    at repl:1:8
    at REPLServer.self.eval (repl.js:110:21)
    ...
&gt; myobj['nk'] = 'p5'
'p5'
&gt; myobj
{ k1: 'p1',
  k2: 'p2',
  ak: 'p4',
  k4: 'p4',
  nk: 'p5' }
</code></pre>

<p>点操作符 (myobj.key) 和中括号 (myobj[key]) 都能用于获取和添加对象属性，
二者的区别在于，点操作符后面的属性名称按照字面量处理，
中括号中的属性名称按照变量名处理。</p>

<p>如果想通过变量名读写对象属性，必须用中括号操作符，
如果想不写引号直接引用属性名称，必须用点操作符。</p>

<p>搜索&#8221;javascript object dot square bracket&#8221;查找相关文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[清理/usr/local/bin目录]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/29/112803/"/>
    <updated>2014-12-29T11:28:03+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/29/112803</id>
    <content type="html"><![CDATA[<p>为一个用户增加可执行文件通常有两种方法，
第一种是将可执行文件所在的目录添加到命令行自启动文件中（例如~/.profile，~/.bashrc，~/.zshenv等），
这种方法的优点是无需root权限，绿色无污染，
缺点是只对命令行有效，只对一个用户有效，
并且不适用于从全局启动目录（如i3wm的dmenu命令行）中启动图形界面程序；</p>

<p>另一种是把可执行文件添加到/usr/local/bin目录中，这个目录一般用来存放用户自定义的全局可执行命令，
优缺点与上面修改自启动文件的方式相反；</p>

<p>一段时间后/usr/local/bin下可能会有很多文件，清理的方法根据来源不同而不同：
对于链接，直接删除；
对非链接文件，用<code>dpkg -l</code>确认是否为apt-get或者dpkg安装的，然后用<code>apt-get remove</code>删除；
如果不是上面的情况，用<code>pip list|grep &lt;filename&gt;</code>检查是否用pip安装的，若是，用<code>pip uninstall</code>删除。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Java Program in Java Program]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/27/103944/"/>
    <updated>2014-12-27T10:39:44+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/27/103944</id>
    <content type="html"><![CDATA[<p>Usually we can run shell command in Java program with <code>Runtime.getRuntime.exec(shellName);</code>.
But if the shell command is <code>java -cp "lib/*" MainClass</code>, you can&rsquo;t get any output from &ldquo;line = reader.readLine()&rdquo;.</p>

<p>You have to use ProcessBuilder instead of Runtime.exec to execute these commands.
Maybe the reason is the double quotes after &ldquo;-cp&rdquo; option is mandatory, which are conflict with double quotes in parameters of Runtime.exec.</p>

<pre><code>public static final String USER_PLUGIN_PATH = "plugins";
public static final String USER_CLASSPATH = USER_PLUGIN_PATH + "/lib/*";
public void runJavaProgram(String mainClass) {
  logger.info("Running java program in class: " + mainClass);
  try {
    ProcessBuilder pb = new ProcessBuilder("java", "-cp", USER_CLASSPATH, mainClass);
    pb.redirectErrorStream(true);
    Process process = pb.start();
    // Process process = Runtime.getRuntime().exec("java -cp " + USER_CLASSPATH + mainClass);
    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
    String line = "";
    String output = "";
    while ((line = reader.readLine()) != null) {
      logger.debug(line);
      output += line + System.getProperty("line.separator");
    }
    process.waitFor();
  } catch (IOException e) {
    e.printStackTrace();
  } catch (InterruptedException e) {
    e.printStackTrace();
  }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux System Memory Probe]]></title>
    <link href="http://leetschau.github.io/blog/2014/12/25/100018/"/>
    <updated>2014-12-25T10:00:18+08:00</updated>
    <id>http://leetschau.github.io/blog/2014/12/25/100018</id>
    <content type="html"><![CDATA[<p><a href="http://www.selenic.com/smem/">smem</a>  is a tool that can give numerous reports on memory usage on Linux systems.
Install it with <code>sudo apt-get install smem</code>.</p>

<p>List all process&rsquo;s memory consumption of a user with smem.</p>

<h1>Using smem</h1>

<p>Copy from <a href="http://www.selenic.com/smem/:">http://www.selenic.com/smem/:</a></p>

<ul>
<li><p>Show basic process information: <code>smem</code></p></li>
<li><p>Show library-oriented view: <code>smem -m</code></p></li>
<li><p>Show user-oriented view: <code>smem -u</code></p></li>
<li><p>Show system view: <code>smem -R 4G -K /path/to/vmlinux -w</code></p></li>
<li><p>Show totals and percentages: <code>smem -t -p</code></p></li>
<li><p>Show different columns: <code>smem -c "name user pss"</code></p></li>
<li><p>Sort by reverse RSS: <code>smem -s rss -r</code></p></li>
<li><p>Show processes filtered by mapping: <code>smem -M libxml</code></p></li>
<li><p>Show mappings filtered by process: <code>smem -m -P [e]volution</code></p></li>
<li><p>Read data from capture tarball: <code>smem --source capture.tar.gz</code></p></li>
<li><p>Show a bar chart labeled by pid: <code>smem --bar pid -c "pss uss"</code></p></li>
<li><p>Show a pie chart of RSS labeled by name: <code>smem --pie name -s rss</code></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
